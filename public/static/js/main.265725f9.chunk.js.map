{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","cmps/Dashboard.jsx","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Reply.jsx","cmps/task-cmps/Update.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","cmps/MobileNav.jsx","pages/Board.jsx","store/actions/changesActions.js","pages/Boards.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","mobile-pages/mobActivities.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","loggedUser","group","_makeid","Date","now","groups","push","handleBoardChanges","fullName","err","removeGroup","groupId","filter","currGroup","isGroup","id","name","updateGroup","updatedGroup","desc","map","addTask","taskName","task","createdAt","members","priority","dueDate","updates","lastUpdated","isSelected","posts","tags","groupIdx","findIndex","tasks","removeTask","taskId","currTask","isTask","updateTask","updatedTask","boards","boardCreator","_id","imgUrl","newBoard","changes","changedAt","isRead","byUser","activityLog","boardToSave","socketService","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","this","video","React","createRef","props","className","to","onClick","current","play","ref","autoPlay","muted","src","Component","mapDispatchToProps","Home","connect","state","boardReducer","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","logout","notifyUsers","users","notifications","forEach","notification","userId","user","userCred","_handleLogin","isAdmin","birthDay","company","phoneNumber","newUser","username","password","sessionStorage","clear","content","member","userToUpdate","find","unshift","setItem","JSON","stringify","showSnackbar","msg","dispath","hideSnackbar","Dashboard","d3","append","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","searchVal","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onAddBoard","notif","onBoardRemove","match","history","params","displayPopup","idx","onToggleShown","toggleBoardbar","handleSearchChange","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","setTimeout","filteredBoards","style","color","location","pathname","transform","onChange","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","userReducer","withRouter","Activities","isOrderReversed","isFilterOpen","filterBy","isActivitiesShown","isActivitiesNotReadShown","handleChange","toggleFilter","toggleActivities","toggleActivitiesNotRead","dates","reduce","acc","activity","moment","format","Object","keys","activities","date","activitiesNotRead","getActivityDates","getActivityMembers","applyFilter","onToggleActivities","boardName","Fade","in","onSetFilter","onClearLog","alt","setFilter","Filter","filterKey","filterValue","formatted","getBoardDates","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","isUsersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onEditBoard","onToggleFilters","onToggleUsers","onRemoveMemberFromBoard","onAddUserToBoard","goToUserProfile","editableName","editableDescription","searchInput","prevProps","prevState","usersToAdd","some","activitiesRead","onFocus","innerRef","html","disabled","onBlur","onKeyDown","blur","toUpperCase","onAddGroup","focus","input","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","Fragment","fromNow","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","onLogout","Navbar","Members","openModal","isUsersShown","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","UPLOAD_URL","formData","FormData","fetch","body","json","Reply","txt","isEditMode","isOptionsModal","toggleEditMode","replyTxt","updateReply","newReply","newReplies","update","replies","reply","updateNote","removeReply","replyId","splice","toggleOptionsModal","Update","onReply","newUpdate","every","letter","makeid","userName","removeUpdate","updateId","sendNote","onToggleEditUpdate","editUpdate","newUpdates","borderTop","Updates","isLoading","imageUploaded","files","preventDefault","newNotes","closeModal","onSubmit","data-title","htmlFor","class","hidden","Tags","tag","onAddTag","tagName","elTagInput","_getRandomColor","onEditTags","onRemoveTag","tagToRemove","onEditTag","elTag","parse","Truncate","lines","ellipsis","width","isTagsShown","_Task","isUpdatesShown","isImageModalShown","reloadProps","handleNameChange","valueOf","onEditTask","removedMember","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","window","innerWidth","onToggleImageModal","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","onEditGroup","elInputAdd","property","taskCount","percent","toFixed","convertToData","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","MobileNav","isMenuShown","toggleMenuModal","closeMenuModal","_Board","prevBoard","filteredBoard","filterTasks","_getCurrBoard","clearFilter","changedValue","originalValue","editGroup","prevTask","lodash","isEqual","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","groupStart","groupEnd","newTasks","newTask","newGroup","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","innerwidth","height","groupChanges","Board","_Boards","goToBoard","Boards","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","UpcomingTasks","moveToUserProfile","header","groupName","isAfter","add","endOf","isBefore","_MyWeek","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","firstName","applySearch","MyWeek","_mobActivities","getBoardById","path","App","routes","route","exact","hostname","initialState","userProfile","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.265725f9.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask,\r\n    handleBoardChanges\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard(loggedUser) {\r\n    const board = {\r\n        boardCreator: {\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": Date.now(),\r\n        \"desc\": 'Enter description here',\r\n        \"members\": [{\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": Date.now(),\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": Date.now(),\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": []\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board, loggedUser) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": Date.now(),\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": Date.now(),\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": Date.now(),\r\n            \"updates\": [],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        const desc = `${loggedUser.fullName} Added a new group.`\r\n        return handleBoardChanges(desc, loggedUser, board)\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board, loggedUser) {\r\n    let group = null;\r\n    board.groups = board.groups.filter(currGroup => {\r\n        const isGroup = currGroup.id === groupId;\r\n        if (isGroup) group = currGroup;\r\n        return !isGroup;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed group: ${group.name}`\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction removeTask(taskId, board, group, loggedUser) {\r\n    let task = null\r\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    board.groups[groupIdx].tasks = board.groups[groupIdx].tasks.filter(currTask => {\r\n        const isTask = currTask.id === taskId\r\n        if (isTask) task = currTask;\r\n        return !isTask;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed task: ${task.name} from group ${group.name}`;\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction addTask(groupId, taskName, board, loggedUser) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: Date.now(),\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n    const desc = `${loggedUser.fullName} Added a new task: ${taskName} to group ${board.groups[groupIdx].name}`\r\n    board.groups[groupIdx].tasks.push(task)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateTask(updatedTask, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction handleBoardChanges(desc, loggedUser, board) {\r\n    if (!desc) return updateBoard(board)\r\n    const changes = {\r\n        id: _makeid(),\r\n        changedAt: Date.now(),\r\n        isRead: false,\r\n        desc,\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n    }\r\n    const updatedBoard = { ...board, activityLog: [changes, ...board.activityLog,] }\r\n    return updateBoard(updatedBoard)\r\n}\r\n\r\n\r\nfunction updateBoard(boardToSave) {\r\n    socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave, desc, loggedUser) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const board = boardService.handleBoardChanges(desc, loggedUser, boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard(loggedUser);\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board, desc, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board, group, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board, group, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board, desc, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.video = React.createRef();\r\n\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return (\r\n            <div className=\"loader-container flex justify-center align-center\">\r\n                <img src=\"loading.gif\" />\r\n            </div>\r\n        )\r\n        return (\r\n            <section className=\"home flex column\">\r\n                <main className=\"home-main flex align-center  \">\r\n                    <div className=\"home-login-sign-cta absolute\">\r\n                        <NavLink to=\"/login\">\r\n                            <button>Login</button>\r\n                        </NavLink>\r\n                        <NavLink to=\"/signup\">\r\n                            <button>Sign-up</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-left flex align-center justify-center\">\r\n\r\n                        <video onClick={() => this.video.current.play()} ref={this.video} autoPlay muted src=\"taskus-home-video.mp4\"></video>\r\n                    </div>\r\n                    <div className=\"col-right flex align-center justify-center padding-x-30  column\">\r\n                        <h1>Working in a large scale company?</h1>\r\n                        <ul>\r\n                            <li><h2>Do you need to keep track of hundreds of tasks?</h2></li>\r\n                            <li>  <h2>Need an efficient way to manage your co-workers / employees?</h2></li>\r\n                            <li> <h2>Then this is the app for you.</h2></li>\r\n                        </ul>\r\n\r\n\r\n                        <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                            <button className=\"guest-button \">Try As a Guest!</button>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </main>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","import httpService from './httpService';\r\nimport socketService from './socketService'\r\n\r\n// let users = [{\r\n//     \"username\": 'frize',\r\n//     \"fullName\": 'Roei Arazi',\r\n//     \"password\": '3333',\r\n//     \"email\": 'frize@gmail.com',\r\n//     \"imgUrl\": 'https://via.placeholder.com/250',\r\n//     \"isAdmin\": true,\r\n//     \"boards\": [],\r\n//     \"notifications\": [],\r\n//     \"birthDay\": '2nd August 1997',\r\n//     \"company\": 'adidas',\r\n//     \"phoneNumber\": '0224132124'\r\n// },\r\n// {\r\n//     \"username\": 'anstrio',\r\n//     \"fullName\": 'Osher Kabada',\r\n//     \"password\": '2222',\r\n//     \"email\": 'anstrio@gmail.com',\r\n//     \"imgUrl\": 'https://via.placeholder.com/250',\r\n//     \"isAdmin\": true,\r\n//     \"boards\": [],\r\n//     \"notifications\": [],\r\n//     \"birthDay\": '2nd August 1997',\r\n//     \"company\": 'adidas',\r\n//     \"phoneNumber\": '0224127124'\r\n// },\r\n// {\r\n//     \"username\": 'smoking',\r\n//     \"fullName\": 'Liam Zety',\r\n//     \"password\": '1111',\r\n//     \"email\": 'smoking@gmail.com',\r\n//     \"imgUrl\": 'https://via.placeholder.com/250',\r\n//     \"isAdmin\": true,\r\n//     \"boards\": [],\r\n//     \"notifications\": [],\r\n//     \"birthDay\": '2nd August 1997',\r\n//     \"company\": 'adidas',\r\n//     \"phoneNumber\": '0224112124'\r\n// }\r\n// ]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser,\r\n    logout,\r\n    notifyUsers\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    updateUser(loggedUser)\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return _handleLogin(newUser)\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        // users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\n\r\nasync function updateUser(user) {\r\n    httpService.put(`user/${user._id}`, user)\r\n    return user\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nasync function notifyUsers(content, members, loggedUser) {\r\n    console.log('got user in service:', loggedUser);\r\n    const users = await loadUsers();\r\n    if(members === 'add') members = [...users]\r\n    const notification = {\r\n        byUser: {\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n        content,\r\n        createdAt: Date.now()\r\n    }\r\n    members.forEach(member => {\r\n        if (member._id === loggedUser._id) return;\r\n        let userToUpdate = users.find(user => user._id === member._id);\r\n        if(!userToUpdate){\r\n            console.log('can\\'t updated user:', userToUpdate);\r\n            return;\r\n        }\r\n        userToUpdate.notifications.unshift(notification);\r\n        userService.updateUser(userToUpdate);\r\n        socketService.emit('send-notif', { userId: member._id, notification });\r\n    })\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\nimport socketService from '../../services/socketService.js';\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        try {\r\n            userService.logout();\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t logout');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n    // setTimeout(dispatch =>{\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport class Dashboard extends Component{\r\n\r\n    componentDidMount(){\r\n        this.ref = React.createRef();\r\n        d3.select(this.ref.current)\r\n        .append('p')\r\n        .text('I\\'m here!')\r\n        console.log(this.ref);\r\n    }\r\n\r\n    render(){\r\n        return <div ref={this.ref}>\r\n\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate, loadBoards } from '../store/actions/boardActions.js';\r\nimport { updateUser } from '../store/actions/userActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\nimport { userService } from '../services/userService.js';\r\nimport { AiOutlineRight } from 'react-icons/ai';\r\nimport { Dashboard } from './Dashboard'\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        socketService.on('reloadBoards', () => {\r\n            console.log('reloading...');\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [notification, ...this.props.loggedUser.notifications] })\r\n        })\r\n\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('reloadBoards')\r\n        socketService.off('accept-notif')\r\n    }\r\n\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    onAddBoard = async () => {\r\n        const { loggedUser } = this.props;\r\n        await this.props.addBoard(this.props.loggedUser)\r\n        const notif = `${loggedUser.fullName} added a new board`\r\n        userService.notifyUsers(notif, 'add', loggedUser)\r\n        socketService.emit('add-delete-board')\r\n    }\r\n\r\n    onBoardRemove = async (boardId) => {\r\n        const { boards, match, history, removeBoard, loggedUser } = this.props\r\n        const board = boards.find(board => board._id === boardId);\r\n        const notif = `${loggedUser.fullName} deleted ${board.name}`;\r\n        userService.notifyUsers(notif, board.members, loggedUser)\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        await removeBoard(boardId);\r\n        socketService.emit('add-delete-board')\r\n        this.displayPopup('Removed board.');\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                <div onClick={this.onToggleShown} className=\"board-bar-toggle-container\">\r\n                    <AiOutlineRight style={{ color: this.props.location.pathname.includes('/myweek') && '#151515', transform: isShown && 'rotate(180deg)' }}\r\n                        className=\"board-bar-toggle\" />\r\n                </div>\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Dashboard />\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate,\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { IoIosArrowDropdown } from 'react-icons/io';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n        isActivitiesShown: true,\r\n        isActivitiesNotReadShown: true\r\n    }\r\n\r\n    get activities() {\r\n        const { activityLog } = this.props;\r\n        return [activityLog.filter(activity => activity.isRead), activityLog.filter(activity => !activity.isRead)]\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.props.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.props.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    toggleActivities = () => {\r\n        this.setState({ isActivitiesShown: !this.state.isActivitiesShown })\r\n\r\n    }\r\n    toggleActivitiesNotRead = () => {\r\n        this.setState({ isActivitiesNotReadShown: !this.state.isActivitiesNotReadShown })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.activityLog) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.props.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {/* Activities which are not read: */}\r\n                    <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            New Activities ({activitiesNotRead.length})\r\n                         <IoIosArrowDropdown className={this.state.isActivitiesNotReadShown ? \" toggle-btn rotate0\" : \" toggle-btn rotate90\"} onClick={this.toggleActivitiesNotRead} />\r\n                        </h1>\r\n                        {this.state.isActivitiesNotReadShown && activitiesNotRead.length !== 0 && activitiesNotRead.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                    <div className=\"user-img-container flex align-center\">\r\n                                        <div className=\"date-container\">\r\n                                            <p className=\"date-created\">\r\n                                                {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                            </p>\r\n                                        </div>\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                        <h2>{activity.byUser.fullName}</h2>\r\n                                    </div>\r\n                                    <div className=\"activity-desc-container flex align-center\">\r\n                                        <p>\r\n                                            {activity.desc}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {activitiesNotRead.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No new board activities!</h3>\r\n                        }\r\n                    </div>\r\n                    {/* Activities which are already read */}\r\n                    <div className=\"activity-list column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            Activities Read ({activities.length})\r\n                        <IoIosArrowDropdown onClick={this.toggleActivities} className={this.state.isActivitiesShown ? \"toggle-btn rotate0\" : \"toggle-btn rotate90\"} />\r\n                        </h1>\r\n                        {\r\n                            this.state.isActivitiesShown && activities.length !== 0 && activities.map((activity, idx) => {\r\n                                return (\r\n                                    <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                            <h2>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {activities.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No read board activities!</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n \r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { FiMinus } from 'react-icons/fi';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        isUsersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ board: this.props.board })\r\n        })\r\n        this.setState({ board: this.props.board, _id: this.props.board._id })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ board: this.props.board })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n    }\r\n    handleChangeName = (ev) => {\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n        let board = this.props.board\r\n\r\n        if (this.state.isActivitiesOpen) {\r\n            board = {\r\n                ...board,\r\n                activityLog: board.activityLog.map(activity => {\r\n                    activity.isRead = true\r\n                    return activity\r\n                })\r\n            }\r\n\r\n        }\r\n        this.props.onEditBoard(this.state.board, this.props.board,)\r\n\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    onToggleUsers = () => {\r\n        this.setState({ isUsersOpen: !this.state.isUsersOpen })\r\n    }\r\n\r\n    onRemoveMemberFromBoard = (memberId) => {\r\n        const user = this.state.board.members.find(member => member._id === memberId)\r\n        this.setState({ board: { ...this.state.board, members: this.state.board.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditBoard(this.state.board, this.props.board, `${this.props.loggedUser.fullName} removed ${user.fullName} from ${this.state.board.name}`)\r\n        })\r\n    }\r\n    onAddUserToBoard = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ board: { ...this.state.board, members: [...this.state.board.members, newUser] } }, () => {\r\n            this.props.onEditBoard(this.state.board, this.props.board, `${this.props.loggedUser.fullName} invited ${newUser.fullName} to ${this.state.board.name}`)\r\n        })\r\n    }\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.onEditBoard(board, this.props.board, 'clearLog')\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        const { members } = this.state.board\r\n        const { users, loggedUser } = this.props\r\n        const usersToAdd = users.filter(user => !members.some(member => member._id === user._id))\r\n        const activitiesNotRead = this.props.board.activityLog.filter(activity => !activity.isRead)\r\n        const activitiesRead = this.props.board.activityLog.filter(activity => activity.isRead)\r\n\r\n        console.log(\"board creator\", this.state.board.boardCreator)\r\n        console.log(\"loggedf user\", loggedUser)\r\n        console.log('true?', loggedUser._id === \"5f68936cf878123b2cd354436ce96d\")\r\n\r\n        return (\r\n            <section className=\"board-header flex column padding-x-30\">\r\n                <div className=\"board-header-header flex space-between grow align-center\">\r\n                    <h1 className=\"flex align-center\">\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.board.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board, this.props.board, `${loggedUser.fullName} Changed the board title from ${this.props.board.name} to ${this.state.board.name}`)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <div className=\"board-header-right relative flex align-center\">\r\n                        <div className=\"board-users flex justify-center\" onClick={this.onToggleUsers}>\r\n                            {members.length === 0 && <div className=\"user-img-container\"> <CgProfile /></div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    <img src={member.imgUrl} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        {this.state.isUsersOpen &&\r\n                            <div className=\"users-modal absolute\">\r\n                                <div className=\"board-users-box\">\r\n                                    <h3>Board Members</h3>\r\n                                    {members.map((member, idx) =>\r\n                                        <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(member._id)}>\r\n                                                {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" />\r\n                                                    :\r\n                                                    <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{member.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser._id === \"5f68936cf878123b2cd354436ce96d\" ||\r\n                                                    this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiMinus onClick={() => this.onRemoveMemberFromBoard(member._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"site-users-box\">\r\n                                    <h3>Site Users</h3>\r\n                                    {usersToAdd.map(user => {\r\n                                        return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex  align-center\" onClick={() => this.goToUserProfile(user._id)}>\r\n                                                {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                                    <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{user.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser._id === \"5f68936cf878123b2cd354436ce96d\" ||\r\n                                                    this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiPlus onClick={() => this.onAddUserToBoard(user._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    })}\r\n                                </div>\r\n\r\n                            </div>}\r\n                        <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                            <h2>\r\n                                Activities {\" \"}\r\n                                <span style={{ color: activitiesNotRead.length !== 0 ? '#0085ff' : '' }}>\r\n                                    {activitiesNotRead.length}\r\n                                </span>\r\n                              / {activitiesRead.length + activitiesNotRead.length}\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"board-header-footer flex align-center space-between\">\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.board.desc} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board, this.props.board, `${loggedUser.fullName} Changed ${this.state.board.name} description to ${this.state.board.desc}`)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                    <div className=\"header-options flex\">\r\n                        <button className=\"new-group-btn\" onClick={this.props.onAddGroup}>New Group</button>\r\n                        <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                            <input ref={(input) => { this.searchInput = input; }} placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                            <GoSearch />\r\n                        </div>\r\n                        <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }}\r\n                            className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                            <VscListFilter />\r\n                            <h2>Filter</h2>\r\n                            {\r\n                                this.state.isFiltersOpen &&\r\n\r\n                                <Filter board={this.props.board} />\r\n\r\n                            }\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                        <Activities onClearLog={this.onClearLog} onToggleActivities={this.onToggleActivities}\r\n                            boardName={this.state.board.name} activityLog={this.props.board.activityLog} />\r\n                    </div>\r\n                    {\r\n                        this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                    }\r\n                    {\r\n                        this.state.isUsersOpen && <div onClick={this.onToggleUsers} className='modal-screen-wrapper'></div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex column\">\r\n                                                <h2>\r\n                                                        {notification.byUser.fullName}\r\n                                                </h2>\r\n                                                <p>\r\n                                                        {notification.content}\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { FaAd, FaRegUser } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { BiLogOut } from 'react-icons/bi'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications, logout } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/\">\r\n                        <img className=\"logo-navbar\" src=\"taskus-nav.png\" alt=\"\" />\r\n                    </NavLink>\r\n\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container cursor-pointer\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <li className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container\"><FaRegUser /></li>\r\n                    </NavLink>\r\n                    <li className=\"icon-container\" ><BiLogOut onClick={this.onLogout} /></li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications,\r\n    logout\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar));","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { FiMinus } from 'react-icons/fi'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <div className=\"member-img-container relative\">\r\n                    {props.members.map(member => <img key={member._id} className=\"member-img\" src={member.imgUrl} alt=\"\" />)}\r\n                    <FiPlus className=\"no-members-icon-plus absolute\" />\r\n                </div>\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div>\r\n                :\r\n                <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map((member, idx) =>\r\n                            <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <FiMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map((user, idx) => {\r\n                            return <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label className=\"date-picker\">\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative flex align-center\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name flex align-center justify-center\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(img) {\r\n    console.log('IMAGE?', img)\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\n\r\n\r\nexport class Reply extends React.Component {\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n\r\n    toggleEditMode = (replyTxt) => {\r\n        this.setState({ isEditMode: !this.state.isEditMode, txt: replyTxt })\r\n    }\r\n\r\n    updateReply = (newReply) => {\r\n        if (newReply.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newReply.txt = this.state.txt\r\n        const newReplies = this.props.update.replies.map(reply => {\r\n            return reply.id === newReply.id ? newReply : reply\r\n        })\r\n\r\n        const update = { ...this.props.update, replies: newReplies }\r\n        this.props.updateNote(update)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    removeReply = (replyId) => {\r\n        const idx = this.props.update.replies.findIndex(reply => reply.id === replyId)\r\n        const newUpdate = { ...this.props.update }\r\n        const update = newUpdate.replies.splice(idx, 1)\r\n        this.props.updateNote(update)\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { reply, idx } = this.props\r\n        return (\r\n\r\n            <div key={idx} className=\"reply-box flex column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n\r\n                <div className=\"reply-content flex align-center\">\r\n                    <img src={reply.member.imgUrl} alt=\"\" />\r\n                    <p className=\"reply-name\">{reply.member.fullName}</p>\r\n                    {!this.state.isEditMode ?\r\n                        <p className=\"reply-text\">{reply.txt}</p>\r\n                        :\r\n                        <div className=\"edit-box flex\">\r\n                            <textarea name=\"txt\" onChange={this.handleChange} value={this.state.txt}></textarea>\r\n                            <AiOutlineSend className=\"update-reply-btn\" onClick={() => this.updateReply(reply)} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeReply(reply.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.toggleEditMode(reply.txt)\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\nimport { Reply } from './Reply';\r\n\r\nexport class Update extends React.Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n\r\n    onReply = (newUpdate) => {\r\n        if (!this.state.txt || this.state.txt.split('').every(letter => letter === ' ')) return\r\n        const newReply = {\r\n            txt: this.state.txt,\r\n            createdAt: Date.now(),\r\n            id: this.props.makeid(),\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const update = this.props.updates.find(update => update.id === newUpdate.id)\r\n        update.replies = [...update.replies, newReply]\r\n        this.props.updateNote(update)\r\n\r\n        this.setState({ txt: '' })\r\n    }\r\n\r\n    removeUpdate = (updateId) => {\r\n        const updates = this.props.updates.filter(update => update.id !== updateId)\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    onToggleEditUpdate = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    editUpdate = (newUpdate) => {\r\n        if (newUpdate.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newUpdate.txt = this.state.txt\r\n        const newUpdates = this.props.updates.map(update => {\r\n            return update.id === newUpdate.id ? newUpdate : update\r\n        })\r\n\r\n        this.props.sendNote(newUpdates)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { update, idx } = this.props\r\n\r\n        return (\r\n            <div key={idx} className=\"update-box flex wrap column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeUpdate(update.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.onToggleEditUpdate()\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n                {/* <button className=\"remove-update-btn\" onClick={() => this.removeUpdate(update.id)}>X</button> */}\r\n                <div className=\"update-box-header flex align-center\">\r\n                    <img src={update.member.imgUrl} alt=\"\" />\r\n                    <p className=\"member-name\">{update.member.fullName}</p>\r\n                </div>\r\n\r\n\r\n                {this.state.isEditMode ?\r\n                    <div className=\"update-box-edit flex column relative\">\r\n                        <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                        <AiOutlineSend className=\"submit-edit-btn absolute\" onClick={() => this.editUpdate(update)} />\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                    :\r\n                    <div className=\"update-box-main flex column\">\r\n                        {update.txt && <p className=\"update-text\">{update.txt}</p>}\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                }\r\n                {/* <p className=\"edit-update-btn\" onClick={this.onToggleEditUpdate}>Edit</p> */}\r\n                <div className=\"update-box-footer flex column\">\r\n\r\n                    {update.replies &&\r\n                        <div className=\"replies-box flex column\" style={{ borderTop: `${update.replies.length && '1px solid rgba(109, 109, 109, 0.35)'}` }}>\r\n                            {update.replies.map((reply, idx) =>\r\n                                <Reply key={idx} reply={reply} idx={idx} update={this.props.update}\r\n                                    updateNote={this.props.updateNote} />\r\n                            )}</div>\r\n                    }\r\n                    {!this.state.isEditMode &&\r\n                        <div className=\"reply-footer flex space-between align-center\">\r\n                            <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                            <button className=\"reply-button\" onClick={() => this.onReply(update)}>Reply</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { BiImage } from 'react-icons/bi';\r\nimport { MdDone } from 'react-icons/md';\r\n\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\nimport { Update } from './Update';\r\n\r\n\r\nfunction makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        reply: {\r\n            txt: ''\r\n        },\r\n        update: {\r\n            id: '',\r\n            txt: '',\r\n            imgUrl: '',\r\n            replies: []\r\n        },\r\n        isLoading: false,\r\n        imageUploaded: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ imageUploaded: false })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else if (ev.target.name === 'txt') {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        } else {\r\n            this.setState({ reply: { ...this.state.reply, txt: ev.target.value } })\r\n        }\r\n    }\r\n\r\n    uploadImg = async () => {\r\n        this.setState({ isLoading: true })\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        this.setState({ update: { ...this.state.update, imgUrl: res.url }, isLoading: false, imageUploaded: true })\r\n    }\r\n\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if ((!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) && !this.state.update.imgUrl) return\r\n        const newNote = {\r\n            id: makeid(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.update.txt,\r\n            imgUrl: this.state.update.imgUrl,\r\n            replies: [],\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n        this.setState({ update: { txt: '', imgUrl: '' }, imageUploaded: false })\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    updateNote = (newUpdate) => {\r\n        const newNotes = [...this.props.updates].map(update => update.id === newUpdate.id ? newUpdate : update)\r\n        this.props.sendNote(newNotes)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.updates) return <h1>Loading...</h1>;\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column\">\r\n                    <AiOutlineClose onClick={this.props.closeModal} />\r\n                    <h1>{this.props.task.name}</h1>\r\n                    <div className=\"updates-header-options flex column\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex align-center\">\r\n                            <textarea name=\"txt\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                        </form>\r\n\r\n                        <div className=\"updates-btns flex align-center space-between\">\r\n                            <div className=\"image-uploader flex\">\r\n                                <label data-title=\"Upload Image\" htmlFor={this.props.task.id}>{this.state.isLoading ? <div class=\"loadingio-spinner-spinner-gvjl1rpqs7q\"><div class=\"ldio-subadnemdcd\">\r\n                                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                                </div></div> : <BiImage />}\r\n                                </label>\r\n                                <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                                {this.state.imageUploaded && <div className=\"image-uploaded flex align-center\"><MdDone /><p> Image Ready!</p></div>}\r\n                            </div>\r\n                            {this.state.isLoading ? <p>Image is uploading..</p> : <button onClick={this.sendNote}>Send</button>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"updates-container\">\r\n                    {updates.map((update, idx) => <Update update={update} key={idx} idx={idx}\r\n                        updates={updates} loggedUser={this.props.loggedUser}\r\n                        sendNote={this.props.sendNote}\r\n                        updateNote={this.updateNote} makeid={makeid} />)}\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { BsBookmarkPlus, BsFilePlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagName, 'addTag')\r\n    }\r\n\r\n    onRemoveTag = (id) => {\r\n        const tagToRemove = this.state.tags.find(tag => tag.id === id)\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagToRemove.txt, 'removeTag')\r\n    }\r\n    onEditTag = (idx, tagName, type) => {\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) {\r\n            return\r\n        }\r\n        this.props.onEditTags(this.state.tags, tagName, type)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>\r\n                        )\r\n\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }} key={idx}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    {idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {this.props.isTagsShown &&\r\n                    <Fragment>\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <div className=\"tag-add-container  flex justify-center align-center\">\r\n                                <BsBookmarkPlus onClick={this.onAddTag} />\r\n                                <input onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        this.onAddTag()\r\n                                        ev.target.blur()\r\n                                        ev.target.value = ''\r\n                                    }\r\n                                }} placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                            </div>\r\n                            <section>\r\n                                {this.state.tags.map((tag, idx) => {\r\n                                    return (\r\n                                        <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                            <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n\r\n                                            <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                                ev.target.blur()\r\n                                                this.onEditTag(idx)\r\n                                            }}\r\n                                                onKeyDown={(ev) => {\r\n                                                    if (ev.key === 'Enter') {\r\n                                                        ev.target.blur()\r\n                                                        this.onEditTag(idx)\r\n                                                    }\r\n                                                }}\r\n                                                onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    reloadProps = () => {\r\n        this.setState({ task: this.props.task })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n\r\n        const prevDate = moment(this.state.task.dueDate).format('DD/MMM/YYYY')\r\n        const changedDate = moment(date).format('DD/MMM/YYYY')\r\n        if (prevDate === changedDate) return\r\n\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n\r\n            const desc = `${this.props.loggedUser.fullName} changed task ${this.state.task.name} date from ${moment(this.props.task.dueDate).format('DD/MMM/YYYY')} to ${moment(this.state.task.dueDate).format('DD/MMM/YYYY')} at group -${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n\r\n        let desc = ''\r\n\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            this.setState({ task: { ...this.state.task, status: data } }, () => {\r\n\r\n                desc = `${this.props.loggedUser.fullName} changed task: ${this.state.task.name} status from ${this.props.task.status} to ${this.state.task.status} at group - ${this.props.group.name}`\r\n\r\n                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n                if (!this.state.isUpdatesShown) this.closeModal()\r\n            })\r\n        } else {\r\n            this.setState({ task: { ...this.state.task, priority: data } }, () => {\r\n\r\n                desc = `${this.props.loggedUser.fullName} changed task: ${this.state.task.name} priority from ${this.props.task.priority} to ${this.state.task.priority} at group - ${this.props.group.name}`\r\n\r\n                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n\r\n                this.closeModal()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        let desc = ''\r\n\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n\r\n            desc = `${this.props.loggedUser.fullName} sent an update at task: ${this.props.task.name} at group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        let desc = ''\r\n        const removedMember = this.state.task.members.find(member => member._id === memberId)\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} removed ${removedMember.fullName} from ${this.state.task.name} at group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        let desc = ''\r\n\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n\r\n            desc = `${this.props.loggedUser.fullName} tasked ${newUser.fullName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onEditTags = (tags, tagName, type) => {\r\n        let desc = ''\r\n        console.log('type:', type)\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            if (type === 'addTag') {\r\n                desc = `${this.props.loggedUser.fullName} added tag named ${tagName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            else if (type === 'removeTag') {\r\n                desc = `${this.props.loggedUser.fullName} removed tag named ${tagName} from ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isUpdatesShown &&\r\n                    <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                        <Updates task={this.state.task} updates={updates} members={members} priority={priority} status={status} dueDate={dueDate}\r\n                            loggedUser={this.props.loggedUser} users={this.props.users}\r\n                            sendNote={this.sendNote} handleChange={this.handleChange} handleDateChange={this.handleDateChange} onEditTags={this.onEditTags}\r\n                            onEditTask={this.props.onEditTask} closeModal={this.closeModal}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div className=\"task-color-remove\">\r\n                                    <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                    <div className='icon-container'>\r\n                                        <MdDelete className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id, this.props.group) }} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"task-title-updates flex align-center space-between grow\">\r\n                                    <h2>\r\n                                        <ContentEditable\r\n                                            onFocus={this.focusText}\r\n                                            className=\"cursor-initial content-editable\"\r\n                                            innerRef={this.contentEditable}\r\n                                            html={name}\r\n                                            disabled={false}\r\n                                            onChange={this.handleNameChange}\r\n                                            onBlur={() => {\r\n                                                const desc = `${this.props.loggedUser.fullName} changed task name from ${this.state.task.name} to ${name} at group - ${this.props.group.name}`\r\n\r\n                                                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n                                            }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </h2>\r\n\r\n\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative grow\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n                                {window.innerWidth > 380 && <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />}\r\n\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                {window.innerWidth > 450 &&\r\n                                    <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />}\r\n                                {window.innerWidth > 450 &&\r\n                                    <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                        openModal={this.openModal} handleChange={this.handleChange} />}\r\n                                {window.innerWidth > 450 &&\r\n                                    <Tags handleChange={this.handleChange} onEditTags={this.onEditTags}\r\n                                        task={this.state.task} isTagsShown={isTagsShown}\r\n                                        openModal={this.openModal} handleChange={this.handleChange} />}\r\n\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    reloadProps = () => {\r\n        this.setState({ ...this.state, name: this.props.group.name })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({ ...this.state, name: this.props.group.name, id: this.props.group.id })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        try {\r\n            this.props.onEditGroup(this.props.group.id, color, 'color')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    convertToData(property) {\r\n        const { tasks } = this.props.group;\r\n        const taskCount = tasks.length;\r\n        const percent = tasks.length / 100;\r\n        const data = tasks.reduce((acc, task) => {\r\n            const value = task[property]\r\n            if (!acc[value]) acc[value] = 0;\r\n            acc[value]++;\r\n            return acc;\r\n        }, {})\r\n        const res = [];\r\n        for (let key in data) {\r\n            data[key] /= percent;\r\n            res.push(<div key={key} style={{ width: data[key] ? `${data[key]}%` : '0' }}\r\n                data-title={data[key] ? ` ${key} ${taskCount * data[key] / 100}/${taskCount} ${data[key].toFixed(1)}%` : ''}\r\n                className={`precent-bar ${key.toLowerCase()}`}></div>)\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const priority = this.convertToData('priority')\r\n        const status = this.convertToData('status')\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const { group, index } = this.props;\r\n        return (\r\n            <Draggable draggableId={group.id} index={index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={group.id} className={`group ${window.innerWidth > 450 ? 'padding-y-45 padding-x-30' : 'padding-y-15'}`}\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n\r\n                                <h1 style={{ color: group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(group.id, this.state.name, 'name')\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\"  {...provided.dragHandleProps}>\r\n                             \r\n                                    <h3 style={{ color: this.props.group.color }}>Members</h3>\r\n\r\n                                <h3 style={{ color: this.props.group.color }}>Status</h3>\r\n                              \r\n                                    <h3 style={{ color: this.props.group.color }}>Due-Date</h3>\r\n                               \r\n                                    <h3 style={{ color: this.props.group.color }}>Priority</h3>\r\n                                \r\n                                    <h3 style={{ color: this.props.group.color }}>Tags</h3>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <div className=\"task-color\" style={{ backgroundColor: group.color }}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        {window.innerWidth > 450 &&\r\n                            <section className=\"group-precent-container flex\">\r\n                                <div className=\"group-precent flex\">\r\n                                    {status}\r\n                                </div>\r\n                                <div className=\"group-precent flex\">\r\n                                    {priority}\r\n                                </div>\r\n                            </section>\r\n                        }\r\n\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\n\r\n\r\nexport class MobileNav extends React.Component {\r\n\r\n    state = {\r\n        isMenuShown: false\r\n    }\r\n\r\n    toggleMenuModal = () => {\r\n        this.setState({ isMenuShown: !this.state.isMenuShown })\r\n    }\r\n\r\n    closeMenuModal = () => {\r\n        this.setState({ isMenuShown: false })\r\n    }\r\n\r\n    render() {\r\n        console.log('props id:', this.props)\r\n        const { loggedUser, onAddGroup, params} = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\" flex align-center space-between\">\r\n                    <GiHamburgerMenu onClick={this.toggleMenuModal} />\r\n                    <h1>{this.props.boardName}</h1>\r\n                    <button onClick={onAddGroup}>New Group</button>\r\n                </nav>\r\n                <section className={`${this.state.isMenuShown && 'animate-menu-modal'} menu-modal flex column align-center`}>\r\n                    <NavLink to=\"/\">\r\n                        <h3>Home</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/boards\">\r\n                        <h3>Boards List</h3>\r\n                    </NavLink>\r\n                    {params && <NavLink to={`/mob-activities/${params.id}`}>\r\n                        <h3>Activities</h3>\r\n                    </NavLink>}\r\n                    <NavLink to=\"/myweek\">\r\n                        <h3>My Week</h3>\r\n                    </NavLink>\r\n                    <NavLink to={`/user/${loggedUser._id}`}>\r\n                        <h3>My Profile</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/login\">\r\n                        <h3>Logout</h3>\r\n                    </NavLink>\r\n                </section>\r\n                {this.state.isMenuShown && <div className=\"modal-screen-wrapper\" onClick={this.closeMenuModal}></div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport moment from 'moment';\r\nimport { userService } from '../services/userService.js';\r\nimport lodash from 'lodash'\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\nimport { groupChanges } from '../store/actions/changesActions'\r\nimport { MobileNav } from '../cmps/MobileNav';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            setTimeout(async () => {\r\n                if (!this.props.boards || !this.props.boards.length) {\r\n                    await this.props.loadBoards();\r\n                    try {\r\n                        if (!this.props.users || !this.props.users.length) {\r\n                            await this.props.loadUsers();\r\n                        }\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                }\r\n            }, 2000);\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n    displayPopup(msg) {\r\n        console.log('showing popup:', msg);\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = async (newBoard, prevBoard, desc) => {\r\n        const { loggedUser } = this.props;\r\n\r\n        // switch (type) {\r\n        //     case 'changeBoardTitle':\r\n        //         desc = `${loggedUser.fullName} Changed the board title from ${prevBoard.name} to ${newBoard.name}`\r\n        //         break;\r\n        //     case 'changeBoardDesc':\r\n        //         desc = `${loggedUser.fullName} Changed ${prevBoard.name} description to ${newBoard.desc}`\r\n        //         break;\r\n        //     case 'addMemberToBoard':\r\n        //         desc = `${loggedUser.fullName} Invited a member to the board `\r\n        //         break;\r\n        //     case 'removeMemberFromBoard':\r\n        //         desc = `${loggedUser.fullName} Removed a member from the board`\r\n        //         break;\r\n        // }\r\n\r\n        this.props.updateBoard(newBoard, desc, loggedUser)\r\n        userService.notifyUsers(`${newBoard.name}: ${desc}`, newBoard.members, loggedUser)\r\n        this.displayPopup('Updated board.')\r\n\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        console.log('ADDING GROUP',)\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            this.props.addGroup(board, this.props.loggedUser);\r\n            userService.notifyUsers(`${board.name}: ${loggedUser.fullName} added a group.`, board.members, loggedUser)\r\n            this.props.clearFilter();\r\n            this.displayPopup('Added group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId);\r\n        const notif = `${board.name}: ${loggedUser.fullName} removed group ${group.name}`;\r\n        try {\r\n            this.props.removeGroup(groupId, board, this.props.loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (groupId, changedValue, key) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        if (group[key] === changedValue) return;\r\n        const originalValue = group[key];\r\n        group[key] = changedValue;\r\n        try {\r\n            const desc = `${group.name}: ${loggedUser.fullName} Changed ${key} from ${originalValue} to ${changedValue}`;\r\n            this.props.editGroup(group, board, desc, loggedUser)\r\n            userService.notifyUsers(desc, board.members, loggedUser);\r\n            this.displayPopup('Updated group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId, group) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            const task = group.tasks.find(task => task.id === taskId);\r\n            const notif = `${loggedUser.fullName} Removed the task ${task.name} from ${group.name}`;\r\n            this.props.removeTask(taskId, board, group, loggedUser);\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed task.');\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n\r\n        const { loggedUser } = this.props;\r\n        console.log('user:', loggedUser);\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        const notif = ` ${board.name}: ${loggedUser.fullName} Added a task to ${group.name}`;\r\n        try {\r\n            this.props.addTask(groupId, taskName, board, loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser)\r\n            this.props.clearFilter()\r\n            this.displayPopup('Added task.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onEditTask = async (task, prevTask, desc) => {\r\n        if (lodash.isEqual(task, prevTask)) return console.log('same');\r\n\r\n        const board = this._getCurrBoard()\r\n        const { loggedUser } = this.props;\r\n\r\n        this.props.editTask(task, board, desc, this.props.loggedUser)\r\n        userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n        this.displayPopup('Updated task.')\r\n\r\n\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this._getCurrBoard()\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    const { loggedUser } = this.props;\r\n                    const desc = `${loggedUser.fullName} Moved ${newTaskToPaste.name} from ${newStartGroup.name} to ${newFinishGroup.name}`\r\n                    this.props.updateBoard(this._getCurrBoard(), desc, loggedUser)\r\n                    userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    _getCurrBoard = () => {\r\n\r\n        return this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const board = this._getCurrBoard()\r\n        const { users, filterBy } = this.props;\r\n        if (!board) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src=\"loading.gif\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        console.log('SHOW ME PARAMS FROM BOARD', this.props.match.params)\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        return (\r\n            <section className={`board ${window.innerWidth > 450 ? 'flex' : 'flex column'}`}>\r\n                {window.innerWidth > 450 ?\r\n                    <React.Fragment>\r\n                        <Navbar />\r\n                        <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                    </React.Fragment>\r\n                    :\r\n                    <MobileNav boardName={board.name} onAddGroup={this.onAddGroup} params={this.props.match.params} loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"board-container\">\r\n                    {window.innerWidth > 450 && <BoardHeader loggedUser={this.props.loggedUser} board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} users={users} />}\r\n                    <div className={`groups-container ${window.innerwidth > 450 && 'padding-x-30'}`} style={{ height: `${window.innerWidth < 450 && 94 + 'vh'}` }}>\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup}\r\n                                                onChangeGroupColor={this.onChangeGroupColor} group={group} users={board.members} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter,\r\n    groupChanges\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import { boardService } from '../../services/boardService'\r\nimport socketService from '../../services/socketService.js'\r\nimport { userService } from '../../services/userService.js'\r\n\r\nexport function groupChanges(desc, loggedUser, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.handleBoardChanges(desc, loggedUser, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n\r\n            const users = await userService.loadUsers();\r\n            const notification = {\r\n                byUser: {\r\n                    fullName: loggedUser.fullName,\r\n                    imgUrl: loggedUser.imgUrl\r\n                },\r\n                content: `${board.name}: ${desc}`,\r\n                createdAt: Date.now()\r\n            }\r\n            board.members.forEach(member => {\r\n                if (member._id === loggedUser._id) return;\r\n                let userToUpdate = users.find(user => user._id === member._id);\r\n                userToUpdate.notifications.unshift(notification);\r\n                userService.updateUser(userToUpdate);\r\n                socketService.emit('send-notif', { memberId: member._id, notification });\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t send activities/notif');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n\r\n\r\nimport { loadUsers } from '../store/actions/userActions';\r\nimport { addBoard, loadBoards } from '../store/actions/boardActions.js';\r\nimport { MobileNav } from '../cmps/MobileNav';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass _Boards extends Component {\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n    goToBoard = (boardId) => {\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n\r\n    onAddBoard = () => {\r\n        this.props.addBoard(this.props.loggedUser)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <React.Fragment>\r\n                <MobileNav loggedUser={this.props.loggedUser} />\r\n                <div className=\"boards-list flex column align-center relative\">\r\n                    {this.props.boards.map(board =>\r\n                        <div key={board._id} className=\"board-details flex column\" onClick={() => this.goToBoard(board._id)}>\r\n                            <div className=\"board-details-header flex  space-between\">\r\n                                <h2>{board.name}</h2>\r\n                                <div className=\"board-members-imgs\">\r\n                                    {board.members.map(member => <img className=\"member-img\" key={member._id} src={member.imgUrl} alt=\"\" />)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"board-details-main flex column wrap\">\r\n                                {board.groups.map(group => <p style={{ color: group.color }} key={group.id}>{group.name}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { signup, guestLogin } from '../store/actions/userActions.js'\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount() {\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, { resetForm }) => {\r\n        resetForm();\r\n        const { username, password, email, fullName } = values;\r\n        try {\r\n            await this.props.signup({ username, password, email, fullName });\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        } catch (err) {\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"fullName\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport { userService } from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: '',\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadBoards();\r\n        setTimeout(async () => {\r\n            const user = await userService.getUserById(this.props.match.params.id)\r\n            this.setState({ user: { ...user } })\r\n        }, 2000);\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        let { email, fullName, username, imgUrl, _id } = this.state.user;\r\n\r\n        if (!_id) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src='loading.gif' />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const { loggedUser } = this.props\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container\">\r\n\r\n                                <div className=\"user-modal-header padding-x-15 padding-y-15 flex justify-center align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-main\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" onSubmit={this.updateProfile}>\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction _UpcomingTasks(props) {\r\n\r\n    function getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    } \r\n\r\n    function moveToUserProfile(userId) {\r\n        props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    const { tasks, header } = props;\r\n\r\n    return <div className=\"upcoming-tasks\">\r\n        <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n        {tasks.map(task => <div\r\n            key={task.id}\r\n            className=\"task-preview space-between align-center\">\r\n            <div className=\"left-column\">\r\n                <p className=\"task-preview-name\">{task.name}</p>\r\n                <p className=\"task-location\">At: <span onClick={() => props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n            </div>\r\n            <section className=\"right-column flex align-center space-between\">\r\n                {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                <div className=\"user-img-container flex justify-center align-center\">\r\n                    {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                        <div onClick={() => moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                </div>\r\n                <div className=\"deadline-container flex align-center\"  onClick={() => props.history.push(`/board/${task.boardId}`)}>\r\n                    <h2 >{getDaysFromNow(task.dueDate)}</h2>\r\n                </div>\r\n            </section>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>{taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { IoIosArrowDropdown } from 'react-icons/io';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoards, updateBoard } from '../store/actions/boardActions'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class _mobActivities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n        isActivitiesShown: true,\r\n        isActivitiesNotReadShown: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.getBoardById(this.props.match.params.id)\r\n    }\r\n\r\n    getBoardById = (id) => {\r\n        const board = this.props.boards.find(board => board._id === id)\r\n        this.setState({ ...this.state, board })\r\n    }\r\n    get activities() {\r\n        const { activityLog } = this.state.board;\r\n        return [activityLog.filter(activity => activity.isRead), activityLog.filter(activity => !activity.isRead)]\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        console.log('Handling change',)\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.state.board.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.state.board.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    toggleActivities = () => {\r\n        this.setState({ isActivitiesShown: !this.state.isActivitiesShown })\r\n\r\n    }\r\n    toggleActivitiesNotRead = () => {\r\n        this.setState({ isActivitiesNotReadShown: !this.state.isActivitiesNotReadShown })\r\n    }\r\n\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.updateBoard(board)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.board) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <NavLink to={`/board/${this.props.match.params.id}`}>\r\n                        <AiOutlineClose />\r\n                    </NavLink>\r\n\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {/* Activities which are not read: */}\r\n                    <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            New Activities ({activitiesNotRead.length})\r\n                         <IoIosArrowDropdown className={this.state.isActivitiesNotReadShown ? \" toggle-btn rotate0\" : \" toggle-btn rotate90\"} onClick={this.toggleActivitiesNotRead} />\r\n                        </h1>\r\n                        {this.state.isActivitiesNotReadShown && activitiesNotRead.length !== 0 && activitiesNotRead.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                    <div className=\"user-img-container flex align-center\">\r\n                                        <div className=\"date-container\">\r\n                                            <p className=\"date-created\">\r\n                                                {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                            </p>\r\n                                        </div>\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                        <h2>{activity.byUser.fullName}</h2>\r\n                                    </div>\r\n                                    <div className=\"activity-desc-container flex align-center\">\r\n                                        <p>\r\n                                            {activity.desc}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {activitiesNotRead.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No new board activities!</h3>\r\n                        }\r\n                    </div>\r\n                    {/* Activities which are already read */}\r\n                    <div className=\"activity-list column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            Activities Read ({activities.length})\r\n                        <IoIosArrowDropdown onClick={this.toggleActivities} className={this.state.isActivitiesShown ? \"toggle-btn rotate0\" : \"toggle-btn rotate90\"} />\r\n                        </h1>\r\n                        {\r\n                            this.state.isActivitiesShown && activities.length !== 0 && activities.map((activity, idx) => {\r\n                                return (\r\n                                    <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                            <h2>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {activities.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No read board activities!</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateBoard\r\n}\r\n\r\nexport const mobActivities = connect(mapStateToProps, mapDispatchToProps)(_mobActivities);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Boards } from './pages/Boards.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\nimport { mobActivities } from './mobile-pages/mobActivities.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/boards',\r\n        component: Boards\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    },\r\n    {\r\n        path: '/mob-activities/:id',\r\n        component: mobActivities\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD': \r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {      \r\n            \"_id\" : \"5f68936cf878123b2cd354436ce96d\",\r\n            \"username\" : \"guest\",\r\n            \"fullName\" : \"guest\",\r\n            \"password\" : \"\",\r\n            \"email\" : \"guest@gmail.com\",\r\n            \"notifications\" : [ ],\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}