{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","services/userService.js","store/actions/userActions.js","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","pages/Board.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","group","_makeid","groups","push","err","removeGroup","groupId","filter","id","updateGroup","updatedGroup","map","addTask","removeTask","updateTask","updatedTask","tasks","task","boards","boardToSave","echo","socketService","_id","boardCreator","newBoard","taskId","taskName","name","createdAt","members","priority","dueDate","Date","now","updates","lastUpdated","isSelected","posts","tags","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","state","this","props","className","to","Component","mapDispatchToProps","Home","connect","boardReducer","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","searchVal","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onBoardRemove","match","history","params","setTimeout","idx","findIndex","onToggleShown","toggleBoardbar","handleSearchChange","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","filteredBoards","Tooltip","enterDelay","TransitionComponent","Zoom","title","arrow","style","color","pathname","onClick","onChange","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","withRouter","Activities","isOrderReversed","filteredActivities","activityLog","activitiy","description","toLocaleLowerCase","byUser","fullName","reverseOrder","sort","activitiy1","activitiy2","onToggleActivities","boardName","data-title","size","activity","src","imgUrl","alt","Truncate","lines","ellipsis","width","moment","fromNow","setFilter","Filter","filterBy","onSetFilter","filterKey","filterValue","dates","forEach","date","format","formatted","getBoardDates","Fade","in","member","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onToggleFilters","editableName","React","createRef","editableDescription","searchInput","prevProps","prevState","onFocus","innerRef","html","disabled","onBlur","onEditBoard","onKeyDown","blur","onAddGroup","focus","ref","input","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","loggedUser","notifications","Fragment","notification","content","users","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","isRead","userId","user","userCred","isAdmin","birthDay","company","phoneNumber","newUser","username","password","userIdx","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","some","Navbar","userReducer","Members","usersToAdd","openModal","toUpperCase","isUsersShown","goToUserProfile","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","handleChange","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","taskState","UPLOAD_URL","formData","FormData","append","fetch","body","json","Updates","update","txt","files","newImg","sendNote","preventDefault","every","letter","onToggleImageModal","isImageModalShown","onSubmit","htmlFor","hidden","Tags","tag","onAddTag","tagName","elTagInput","current","_getRandomColor","onEditTags","onRemoveTag","onEditTag","elTag","JSON","parse","stringify","isTagsShown","_Task","isUpdatesShown","handleNameChange","valueOf","onEditTask","closeModal","newUpdates","find","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","newGroup","onEditGroup","elInputAdd","statusData","statusPercentage","taskCount","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","percent","reduce","acc","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_Board","boardDescription","applyFilter","filteredBoard","filterTasks","clearFilter","changedValue","originalValue","editGroup","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","splice","groupStart","groupEnd","newTasks","newTask","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","Board","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","UpcomingTasks","moveToUserProfile","header","groupName","isAfter","add","endOf","isBefore","_MyWeek","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","firstName","applySearch","path","App","routes","route","exact","hostname","initialState","userProfile","isLoading","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3f62096c.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    console.log('established connection');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction updateBoard(boardToSave, echo = true) {\r\n    if (echo) socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard() {\r\n    const board = {\r\n        boardCreator: {\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": 198465168486,\r\n        \"description\": 'Enter description here',\r\n        \"members\": [{\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": 'date',\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": 198465168486,\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": [{\r\n            \"id\": _makeid(),\r\n            \"createdAt\": 124124125124,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'removed task \"do the dishes\"',\r\n            \"task\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'do the dishes'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 12412541251,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'changed group name from project2 to project3',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project3'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 4514512352135,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'added group project2',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project2'\r\n            }\r\n        }\r\n        ]\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": 198465168486,\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": 1123124124241,\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": 214124124125,\r\n            \"updates\": [\r\n                {\r\n                    \"txt\": 'dont forget about this',\r\n                    \"member\": 'Roei Arazi'\r\n                },\r\n                {\r\n                    \"txt\": 'https://res.cloudinary.com/dtg7n0zye/image/upload/v1600008729/i70mbqxvm0qh1yeznsnf.jpg',\r\n                    \"member\": 'Liam Zety'\r\n                }\r\n            ],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        updateBoard(board)\r\n        return board\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board) {\r\n    board.groups = board.groups.filter(group => group.id !== groupId)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nasync function removeTask(taskId, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.filter(task => task.id !== taskId)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n\r\n}\r\n\r\nasync function addTask(groupId, taskName = 'Change Task Name', board) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: 1123124124241,\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    board.groups.map(group => {\r\n        if (group.id === groupId) group.tasks.push(task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n}\r\n\r\nfunction updateTask(updatedTask, board) {\r\n    console.log('hello from board service', updatedTask, \"board\", board)\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log('got board:', boardToSave);\r\n            boardService.updateBoard(boardToSave, false);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard();\r\n\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(boardId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(boardId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board) {\r\n    console.log('TASK FROM ACTIONS', task)\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"home\">\r\n                <h1>Home</h1>\r\n                <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                    <button>Start Here!</button>\r\n                </NavLink>\r\n                <NavLink to=\"/login\">\r\n                    <button>Login</button>\r\n                </NavLink>\r\n                <NavLink to=\"/signup\">\r\n                    <button>Sign-up</button>\r\n                </NavLink>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFilePlus, BsArrowsCollapse, BsArrowsExpand } from 'react-icons/bs';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate } from '../store/actions/boardActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    onBoardRemove = (boardId) => {\r\n        const { boards, match, history, removeBoard } = this.props\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        removeBoard(boardId);\r\n        this.props.showSnackbar('Removed board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                {\r\n                    isShown ? (\r\n                        <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                            <div className=\"board-bar-toggle-container\">\r\n                                <BsArrowsCollapse style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                    onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                            </div>\r\n                        </Tooltip>\r\n                    )\r\n                        : (\r\n                            <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                                <div className=\"board-bar-toggle-container\">\r\n                                    <BsArrowsExpand style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                        onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                                </div>\r\n                            </Tooltip>\r\n                        )\r\n                }\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFilePlus onClick={this.props.addBoard} />\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport Truncate from 'react-truncate';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        filteredActivities: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ filteredActivities: this.props.activityLog })\r\n    }\r\n\r\n    handleSearch = ({ target }) => {\r\n        const filteredActivities = this.props.activityLog.filter((activitiy) => {\r\n            return activitiy.description.toLowerCase()\r\n                .includes(target.value.toLocaleLowerCase())\r\n                ||\r\n                activitiy.byUser.fullName.toLowerCase()\r\n                    .includes(target.value.toLocaleLowerCase())\r\n        })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n    reverseOrder = () => {\r\n        const filteredActivities = this.state.filteredActivities.sort((activitiy1, activitiy2) => {\r\n            const res = this.state.isOrderReversed ? -1 : 1;\r\n            if (activitiy1.createdAt < activitiy2.createdAt) return -res;\r\n            if (activitiy1.createdAt > activitiy2.createdAt) return res;\r\n            return 0;\r\n        })\r\n        this.setState({ isOrderReversed: !this.state.isOrderReversed })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.filteredActivities) return <h1>Loading...</h1>\r\n        const { isOrderReversed, filteredActivities } = this.state;\r\n        return (\r\n            <section className=\"activities flex column padding-y-15\">\r\n\r\n                <header className=\"padding-x-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input onChange={this.handleSearch} type=\"text\" placeholder=\"Search\" />\r\n                        {isOrderReversed ?\r\n                            <div data-title=\"Sort\"><FaArrowUp size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            :\r\n                            <div data-title=\"Sort\"><FaArrowDown size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                        }\r\n                    </div>\r\n\r\n                </header>\r\n\r\n\r\n                <div className=\"activity-list column flex \">\r\n                    {filteredActivities.map((activity, idx) => {\r\n\r\n                        return (\r\n                            <div key={idx} className=\"activity padding-x-15 space-between flex align-center\">\r\n                                <div className=\"activity-desc-container flex align-center\">\r\n                                    <div className=\"user-img-container flex align-center justify-center\">\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <h2>{activity.byUser.fullName}</h2>\r\n                                    <p>\r\n                                        <Truncate lines={1} ellipsis={\"...\"} width={550}>\r\n                                            {activity.description}\r\n                                        </Truncate>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <p className=\"date-created\">{moment(activity.createdAt).fromNow()}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoRequestChanges, GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ ...this.props.board })\r\n        })\r\n        this.setState({ ...this.props.board })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ ...this.props.board })\r\n        }\r\n    }\r\n\r\n    handleChangeName = (ev) => {\r\n        this.setState({ name: ev.target.value })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ description: ev.target.value })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"board-header align-center padding-x-30 padding-y-45 \">\r\n                <div className=\"col-left flex column\">\r\n                    <h1>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.description} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                </div>\r\n                <div className=\"col-right flex align-center\">\r\n                    <button onClick={this.props.onAddGroup}>New Group</button>\r\n                    <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                        <input ref={(input) => { this.searchInput = input; }} placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                        <GoSearch />\r\n                    </div>\r\n                    <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                        <GoRequestChanges />\r\n                        <h2 >Activity Log</h2>\r\n                    </div>\r\n\r\n                    <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }} className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                        <VscListFilter />\r\n                        <h2>Filter</h2>\r\n                        {\r\n                            this.state.isFiltersOpen &&\r\n\r\n                            <Filter board={this.props.board} />\r\n\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                    <Activities onToggleActivities={this.onToggleActivities}\r\n                        boardName={this.props.board.name} activityLog={this.props.board.activityLog} />\r\n                </div>\r\n                {\r\n                    this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n                {\r\n                    this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex align-center column\">\r\n                                                <h2>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.byUser.fullName}\r\n                                                    </Truncate>\r\n                                                </h2>\r\n                                                <p>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.content}\r\n                                                    </Truncate>\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import httpService from \"./httpService\";\r\n\r\nlet users = [{\r\n    \"username\": 'frize',\r\n    \"fullName\": 'Roei Arazi',\r\n    \"password\": '3333',\r\n    \"email\": 'frize@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224132124'\r\n},\r\n{\r\n    \"username\": 'anstrio',\r\n    \"fullName\": 'Osher Kabada',\r\n    \"password\": '2222',\r\n    \"email\": 'anstrio@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224127124'\r\n},\r\n{\r\n    \"username\": 'smoking',\r\n    \"fullName\": 'Liam Zety',\r\n    \"password\": '1111',\r\n    \"email\": 'smoking@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224112124'\r\n}\r\n]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return user;\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return newUser;\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest mcgee',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function updateUser(loggedUser) {\r\n    const userIdx = users.findIndex(user => user._id === loggedUser._id)\r\n\r\n    try {\r\n        users[userIdx] = { ...loggedUser }\r\n    } catch (err) {\r\n        console.log('ERROR, couldnt update user', err);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}","import { userService } from \"../../services/userService\";\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaAd } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                        <li  className=\"icon-container\">\r\n                    <NavLink to=\"/\">\r\n                        <FaAd />\r\n                    </NavLink>\r\n                        </li>\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter cursor-pointer\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <li className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container\"><CgProfile /></li>\r\n                    </NavLink>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(_Navbar);","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <img alt=\"profile\" src={props.members[0].imgUrl} />\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div> : <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n            {(props.members.length !== 0) &&\r\n                <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{props.members.length}</span></div>}\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map(member =>\r\n                            <section key={member._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <AiOutlineMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map(user => {\r\n                            return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label className=\"date-picker\">\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative flex align-center\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name flex align-center justify-center\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(img, taskState) {\r\n    console.log('IMAGE?', img)\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React from 'react'\r\nimport { IoMdSend } from 'react-icons/io'\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        update: {\r\n            txt: ''\r\n        },\r\n        updates: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ updates: this.props.updates })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        }\r\n    }\r\n\r\n    uploadImg = async () => {\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        const newImg = {\r\n            member: this.props.loggedUser.fullName,\r\n            txt: res.url\r\n        }\r\n        const updates = [newImg, ...this.props.updates]\r\n        this.props.sendNote(updates)\r\n\r\n    }\r\n    sendNote = (ev) => {\r\n        console.log('TASK FRROM NOTE', this.props.task)\r\n        ev.preventDefault()\r\n        if (!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) return\r\n        const newNote = {\r\n            txt: this.state.update.txt,\r\n            member: this.props.loggedUser.fullName\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n\r\n        this.setState({ updates, update: { txt: '' } })\r\n\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.updates) return <h1>Loading...</h1>;\r\n\r\n        const { updates, onToggleImageModal, isImageModalShown } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column align-center\">\r\n                    <h1>Updates</h1>\r\n                    <div className=\"updates-header-options flex align-center space-between\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex justify-center align-center\">\r\n                            <input type=\"text\" placeholder=\"Text Note\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                            <IoMdSend onClick={this.sendNote} />\r\n                        </form>\r\n                        <div className=\"image-uploader\">\r\n                            <label htmlFor={this.props.task.id}>Upload Image</label>\r\n                            <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={isImageModalShown ? onToggleImageModal : () => { }} className=\"updates-container  flex column\">\r\n\r\n                    {updates.map((update, idx) => {\r\n\r\n                        if (update.txt.includes('https://res') || update.txt.includes('http://res')) {\r\n                            return <div key={idx} className=\"update-box flex wrap column\">\r\n                                <p className=\"member-name\">{update.member}</p>\r\n                                <img className=\"cursor-pointer\" onClick={() => {\r\n                                    onToggleImageModal(update.txt)\r\n                                }} src={update.txt} />\r\n                            </div>\r\n                        } else return <div key={idx} className=\"update-box\"><p className=\"member-name\" key={idx}>{update.member}</p>\r\n                            <p className=\"update-text\">{update.txt}</p>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { BsBookmarkPlus, BsFilePlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags)\r\n    }\r\n\r\n    onRemoveTag = (id) => {\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags)\r\n    }\r\n    onEditTag = (idx) => {\r\n        console.log('state:', this.state.tags[idx].txt)\r\n        console.log('props:', this.props.task.tags[idx].txt)\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) {\r\n            console.log('WIERD...',)\r\n            return\r\n        }\r\n        this.props.onEditTags(this.state.tags)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>\r\n                        )\r\n\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }} key={idx}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    {idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {this.props.isTagsShown &&\r\n                    <Fragment>\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <div className=\"tag-add-container  flex justify-center align-center\">\r\n                                <BsBookmarkPlus onClick={this.onAddTag} />\r\n                                <input placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                            </div>\r\n                            <section>\r\n                                {this.state.tags.map((tag, idx) => {\r\n                                    return (\r\n                                        <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                            <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n\r\n                                            <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                                ev.target.blur()\r\n                                                this.onEditTag(idx)\r\n                                            }}\r\n                                                onKeyDown={(ev) => {\r\n                                                    if (ev.key === 'Enter') {\r\n                                                        ev.target.blur()\r\n                                                        this.onEditTag(idx)\r\n                                                    }\r\n                                                }}\r\n                                                onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\nimport Truncate from 'react-truncate';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ task: this.props.task })\r\n        })\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            this.setState({ task: { ...this.state.task, status: data } }, () => {\r\n                this.props.onEditTask(this.state.task)\r\n                this.closeModal()\r\n            })\r\n        } else if (data === 'tag') {\r\n            console.log('IMHERE, data:', data, 'tag:', tags)\r\n            this.setState({ ...this.state, tags })\r\n            this.props.onEditTask(this.state, tags)\r\n        } else {\r\n            this.setState({ task: { ...this.state.task, priority: data } }, () => {\r\n                this.props.onEditTask(this.state.task)\r\n                this.closeModal()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onEditTags = (tags) => {\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                    <Updates task={this.state.task} isImageModalShown={this.state.isImageModalShown}\r\n                        loggedUser={this.props.loggedUser} updates={updates}\r\n                        onToggleImageModal={this.onToggleImageModal}\r\n                        uploadImg={this.uploadImg} sendNote={this.sendNote}\r\n                    />\r\n                </div>\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Delete Task\" arrow>\r\n                                    <div className='icon-container'>\r\n                                        <RiDeleteBack2Line className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id) }} />\r\n                                    </div>\r\n                                </Tooltip>\r\n                                <h2>\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"cursor-initial content-editable\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name}\r\n                                        disabled={false}\r\n                                        onChange={this.handleNameChange}\r\n                                        onBlur={() => {\r\n                                            this.props.onEditTask(this.state.task, this.state.task.name, name)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditTask(this.state.task, this.state.task.name, name)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n\r\n\r\n                                <div onClick={() => this.openModal('updates')} className=\"notes-container relative\"><BsChatDots />\r\n                                    {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                </div>\r\n\r\n\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                <Tags handleChange={this.handleChange} onEditTags={this.onEditTags}\r\n                                    task={this.state.task} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ ...this.state, ...this.props.group })\r\n        })\r\n        this.setState({ ...this.state, ...this.props.group })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        const newGroup = {\r\n            ...this.props.group,\r\n            color\r\n        }\r\n        try {\r\n            this.props.onEditGroup(newGroup, color, this.state.color)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    get statusPercentage(){\r\n        const {tasks} = this.props.group;\r\n        const percent = tasks.length / 100;\r\n        const data = tasks.reduce((acc, task) =>{\r\n            console.log('acc:', acc);\r\n            console.log('task:', task);\r\n            if(!acc[task.status]) acc[task.status] = 0;\r\n            acc[task.status]++;\r\n            return acc;\r\n        }, {})\r\n        for(let key in data){\r\n            data[key] /= percent;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const statusData = this.statusPercentage;\r\n        const taskCount = this.props.group.tasks.length;\r\n        console.log('tasks',taskCount);\r\n        return ( \r\n            <Draggable draggableId={this.props.group.id} index={this.props.index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={this.props.group.id} className=\"group padding-y-45\"\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: this.props.group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(this.props.group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n                                <h1 style={{ color: this.props.group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(this.state, this.state.name, name)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditGroup(this.state, this.state.name, name)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\">\r\n                                <h3 style={{color:this.props.group.color}}>Updates</h3>\r\n                                <h3 style={{color:this.props.group.color}}>Members</h3>\r\n                                <h3 style={{color:this.props.group.color}}>Status</h3>\r\n                                <h3 style={{color:this.props.group.color}}>Due-Date</h3>\r\n                                <h3 style={{color:this.props.group.color}}>Priority</h3>\r\n                                <h3 style={{color:this.props.group.color}}>Tags</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={this.props.group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {this.props.group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={this.props.group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\"> \r\n                            <div className=\"task-color\" style={{backgroundColor:this.props.group.color}}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(this.props.group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"group-status flex\">\r\n                            <div style={{width: `${statusData['Done']}%`}} data-title={`${statusData['Done']}%`} className=\"status-bar done\"></div>\r\n                            <div style={{width: `${statusData['Working on it']}%`}} data-title={`${statusData['Working on it']}%`} className=\"status-bar working\"></div>\r\n                            <div style={{width: `${statusData['Stuck']}%`}} data-title={`${statusData['Stuck']}%`} className=\"status-bar stuck\"></div>\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = (boardName, boardDescription) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (boardName === board.name && boardDescription === board.description) return;\r\n        this.props.updateBoard({ ...board, name: boardName, description: boardDescription })\r\n        this.props.showSnackbar('Updated board.')\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = () => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            this.props.addGroup(board);\r\n            this.props.clearFilter();\r\n            this.props.showSnackbar('Added group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = (groupId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            this.props.removeGroup(groupId, board)\r\n            this.props.showSnackbar('Removed group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = (group, changedValue, originalValue) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (changedValue === originalValue) return // No changes were made\r\n        try {\r\n            this.props.editGroup(group, board)\r\n            this.props.showSnackbar('Updated group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = (taskId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            this.props.removeTask(taskId, board)\r\n            this.props.showSnackbar('Removed task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            this.props.addTask(groupId, taskName, board)\r\n            this.props.clearFilter()\r\n            this.props.showSnackbar('Added task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditTask = (task, changedValue, originalValue) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        if(changedValue===originalValue) return\r\n\r\n        try {\r\n            this.props.editTask(task, board)\r\n            this.props.showSnackbar('Updated task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        const { users, filterBy } = this.props;\r\n        if (!board) return <h1>Loading..</h1>\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        board.members = users\r\n        return (\r\n            <section className=\"board\">\r\n                <Navbar />\r\n                <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                <div className=\"board-container\">\r\n                    <BoardHeader board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} />\r\n                    <div className=\"groups-container padding-x-30\">\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup} onChangeGroupColor={this.onChangeGroupColor} group={group} users={users} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport {signup, guestLogin} from '../store/actions/userActions.js'\r\n\r\nimport {loadBoards} from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount(){\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, {resetForm}) => {\r\n        resetForm();\r\n        const {username, password, email, fullName} = values;\r\n        try{\r\n            await this.props.signup({username, password, email, fullName});\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        }catch(err){\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () =>{\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\"type=\"text\" name=\"fullName\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport {userService} from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() { \r\n        this.props.loadBoards();\r\n        const user = await userService.getUserById(this.props.match.params.id)\r\n        this.setState({ user: { ...user} })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev)\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        const { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        const { loggedUser} = this.props\r\n\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container padding-x-15 padding-y-15\">\r\n\r\n                                <div className=\"user-modal-col align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-col\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" action=\"\">\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction _UpcomingTasks(props) {\r\n\r\n    function getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    } \r\n\r\n    function moveToUserProfile(userId) {\r\n        props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    const { tasks, header } = props;\r\n\r\n    return <div className=\"upcoming-tasks\">\r\n        <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n        {tasks.map(task => <div\r\n            key={task.id}\r\n            className=\"task-preview space-between align-center\">\r\n            <div className=\"left-column\">\r\n                <p className=\"task-preview-name\">{task.name}</p>\r\n                <p className=\"task-location\">At: <span onClick={() => props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n            </div>\r\n            <section className=\"right-column flex align-center space-between\">\r\n                {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                <div className=\"user-img-container flex justify-center align-center\">\r\n                    {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                        <div onClick={() => moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                </div>\r\n                <div className=\"deadline-container flex align-center\"  onClick={() => props.history.push(`/board/${task.boardId}`)}>\r\n                    <h2 >{getDaysFromNow(task.dueDate)}</h2>\r\n                </div>\r\n            </section>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>{taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {      \r\n            \"_id\" : \"5f68936cf878123b2cdce96d\",\r\n            \"username\" : \"frize\",\r\n            \"fullName\" : \"Roei Arazi\",\r\n            \"password\" : \"3333\",\r\n            \"email\" : \"frize@gmail.com\",\r\n            \"imgUrl\" : \"https://via.placeholder.com/250\",\r\n            \"isAdmin\" : true,\r\n            \"boards\" : [],\r\n            \"notifications\" : [ \r\n                {\r\n                byUser: \r\n                {\r\n                    fullName: \"Liam Zety\",\"imgUrl\" : \"https://via.placeholder.com/250\" \r\n                },\r\n                content:\"just uploaded the logo!\",\r\n                createdAt:Date.now()\r\n            }],\r\n            \"birthDay\" : \"2nd August 1997\",\r\n            \"company\" : \"adidas\",\r\n            \"phoneNumber\" : \"0224132124\"\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}