{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Reply.jsx","cmps/task-cmps/Update.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","pages/Board.jsx","store/actions/changesActions.js","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","loggedUser","group","_makeid","Date","now","groups","push","handleBoardChanges","fullName","err","removeGroup","groupId","filter","currGroup","isGroup","id","name","updateGroup","updatedGroup","desc","map","addTask","taskName","task","createdAt","members","priority","dueDate","updates","lastUpdated","isSelected","posts","tags","groupIdx","findIndex","tasks","removeTask","taskId","currTask","isTask","updateTask","updatedTask","boards","boardCreator","_id","imgUrl","newBoard","changes","changedAt","isRead","byUser","activityLog","boardToSave","socketService","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","state","this","props","className","to","Component","mapDispatchToProps","Home","connect","boardReducer","users","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","logout","notifications","forEach","notification","userId","user","userCred","_handleLogin","isAdmin","birthDay","company","phoneNumber","newUser","username","password","sessionStorage","clear","setItem","JSON","stringify","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","searchVal","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onAddBoard","onBoardRemove","match","history","params","setTimeout","idx","onToggleShown","toggleBoardbar","handleSearchChange","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","filteredBoards","data-title","onClick","style","color","location","pathname","transform","onChange","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","userReducer","withRouter","Activities","isOrderReversed","isFilterOpen","filterBy","handleChange","toggleFilter","dates","reduce","acc","activity","moment","format","Object","keys","activities","date","member","description","activitiesNotRead","getActivityDates","getActivityMembers","applyFilter","onToggleActivities","boardName","Fade","in","onSetFilter","onClearLog","src","alt","setFilter","Filter","filterKey","filterValue","formatted","getBoardDates","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","isUsersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onEditBoard","onToggleFilters","onToggleUsers","onRemoveMemberFromBoard","onAddUserToBoard","find","goToUserProfile","editableName","React","createRef","editableDescription","searchInput","prevProps","prevState","usersToAdd","some","activitiesRead","onFocus","innerRef","html","disabled","onBlur","onKeyDown","blur","toUpperCase","onAddGroup","focus","ref","input","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","Fragment","content","fromNow","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","onLogout","Navbar","Members","openModal","isUsersShown","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","UPLOAD_URL","formData","FormData","append","fetch","body","json","Reply","txt","isEditMode","isOptionsModal","toggleEditMode","replyTxt","updateReply","newReply","newReplies","update","replies","reply","updateNote","removeReply","replyId","splice","toggleOptionsModal","Update","onReply","newUpdate","every","letter","makeid","userName","removeUpdate","updateId","sendNote","onToggleEditUpdate","editUpdate","newUpdates","borderTop","Updates","isLoading","imageUploaded","files","preventDefault","newNotes","closeModal","onSubmit","htmlFor","class","hidden","Tags","tag","onAddTag","tagName","elTagInput","current","_getRandomColor","onEditTags","onRemoveTag","tagToRemove","onEditTag","elTag","parse","Truncate","lines","ellipsis","width","isTagsShown","_Task","isUpdatesShown","isImageModalShown","reloadProps","handleNameChange","prevDate","valueOf","onEditTask","prevData","removedMember","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","onToggleImageModal","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","onEditGroup","elInputAdd","property","taskCount","percent","toFixed","convertToData","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_Board","boardDescription","toUpdateChanges","currBoard","_getCurrBoard","groupChanges","filteredBoard","filterTasks","clearFilter","changedValue","originalValue","editGroup","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","groupStart","groupEnd","newTasks","newTask","newGroup","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","userToUpdate","unshift","Board","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","UpcomingTasks","moveToUserProfile","header","groupName","isAfter","add","endOf","isBefore","_MyWeek","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","firstName","applySearch","path","App","routes","route","exact","window","hostname","initialState","userProfile","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2ddec8cc.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    console.log('established connection');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask,\r\n    handleBoardChanges\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard(loggedUser) {\r\n    const board = {\r\n        boardCreator: {\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": Date.now(),\r\n        \"description\": 'Enter description here',\r\n        \"members\": [{\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": Date.now(),\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": Date.now(),\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": []\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board, loggedUser) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": Date.now(),\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": Date.now(),\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": Date.now(),\r\n            \"updates\": [],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        const desc = `${loggedUser.fullName} Added a new group.`\r\n        return handleBoardChanges(desc, loggedUser, board)\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board, loggedUser) {\r\n    let group = null;\r\n    board.groups = board.groups.filter(currGroup => {\r\n        const isGroup = currGroup.id === groupId;\r\n        if (isGroup) group = currGroup;\r\n        return !isGroup;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed group: ${group.name}`\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction removeTask(taskId, board, group, loggedUser) {\r\n    let task = null\r\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    board.groups[groupIdx].tasks = board.groups[groupIdx].tasks.filter(currTask => {\r\n        const isTask = currTask.id === taskId\r\n        if (isTask) task = currTask;\r\n        return !isTask;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed task: ${task.name} from group ${group.name}`;\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction addTask(groupId, taskName, board, loggedUser) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: Date.now(),\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n    const desc = `${loggedUser.fullName} Added a new task: ${taskName} to group ${board.groups[groupIdx].name}`\r\n    board.groups[groupIdx].tasks.push(task)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateTask(updatedTask, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction handleBoardChanges(desc, loggedUser, board) {\r\n    const changes = {\r\n        id: _makeid(),\r\n        changedAt: Date.now(),\r\n        isRead: false,\r\n        desc,\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n    }\r\n    const updatedBoard = {...board, activityLog: [changes, ...board.activityLog, ] }\r\n    return updateBoard(updatedBoard)\r\n}\r\n\r\n\r\nfunction updateBoard(boardToSave) {\r\n    socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave) {\r\n    console.log('show board to save', boardToSave)\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return dispatch => {\r\n        try {\r\n            boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard(loggedUser);\r\n\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board, desc, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board, group, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board, group, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board, desc, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"home flex column\">\r\n                <div className=\"home-header flex space-between align-center\">\r\n                <h1>Home</h1>\r\n                <div className=\"home-header-right flex\">\r\n                <NavLink to=\"/login\">\r\n                    <button className=\"home-header-btn\">Login</button>\r\n                </NavLink>\r\n                <NavLink to=\"/signup\">\r\n                    <button className=\"home-header-btn\">Sign-up</button>\r\n                </NavLink>\r\n                </div>\r\n                </div>\r\n                <main className=\"home-main flex justify-center align-center column\">\r\n                <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                    <button className=\"guest-button\">Start Here!</button>\r\n                </NavLink>\r\n                </main>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","import httpService from \"./httpService\";\r\n\r\nlet users = [{\r\n    \"username\": 'frize',\r\n    \"fullName\": 'Roei Arazi',\r\n    \"password\": '3333',\r\n    \"email\": 'frize@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224132124'\r\n},\r\n{\r\n    \"username\": 'anstrio',\r\n    \"fullName\": 'Osher Kabada',\r\n    \"password\": '2222',\r\n    \"email\": 'anstrio@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224127124'\r\n},\r\n{\r\n    \"username\": 'smoking',\r\n    \"fullName\": 'Liam Zety',\r\n    \"password\": '1111',\r\n    \"email\": 'smoking@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224112124'\r\n}\r\n]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser,\r\n    logout\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    updateUser(loggedUser)\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return _handleLogin(newUser)\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\n\r\nasync function updateUser(user) {\r\n    httpService.put(`user/${user._id}`, user)\r\n    return user\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        try {\r\n            userService.logout();\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t logout');\r\n            throw err;\r\n        }\r\n    }\r\n}","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate, loadBoards } from '../store/actions/boardActions.js';\r\nimport { updateUser } from '../store/actions/userActions.js'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\nimport { AiOutlineRight } from 'react-icons/ai';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        socketService.on('add-delete-board', () => {\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [...this.props.loggedUser.notifications, notification] })\r\n        })\r\n\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('add-delete-board')\r\n        socketService.off('accept-notif')\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    onAddBoard = () =>{\r\n        socketService.emit('add-delete-board')\r\n        this.props.addBoard(this.props.loggedUser)\r\n    }\r\n\r\n    onBoardRemove = (boardId) => {\r\n        const { boards, match, history, removeBoard } = this.props\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        removeBoard(boardId);\r\n        socketService.emit('add-delete-board')\r\n        this.props.showSnackbar('Removed board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        console.log('got board:', this.props.boards);\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                <div data-title=\"Toggle Board\" onClick={this.onToggleShown} className=\"board-bar-toggle-container\">\r\n                    <AiOutlineRight style={{ color: this.props.location.pathname.includes('/myweek') && '#151515', transform: isShown && 'rotate(180deg)' }}\r\n                        className=\"board-bar-toggle\" />\r\n                </div>\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate,\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n    }\r\n\r\n    get activities() {\r\n        const { activityLog } = this.props;\r\n        return [activityLog.filter(activity => activity.isRead), activityLog.filter(activity => !activity.isRead)]\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.props.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.props.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.description.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    // onClearLog = () => {\r\n    //     const activityLog = this.props.activityLog.filter(activity => null)\r\n    //     console.log('activityLog', activityLog)\r\n    //     this.props.clearLog(activityLog)\r\n    // }\r\n\r\n    render() {\r\n        if (!this.props.activityLog) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n\r\n                        <div className=\"filter-outer-container relative\">\r\n                            <button onClick={this.toggleFilter}>Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.props.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {activitiesNotRead.length !== 0 && (\r\n                        <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                            <h1>New Activities</h1>\r\n                            {activitiesNotRead.map((activity, idx) => {\r\n\r\n                                return (\r\n                                    <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                            <h2>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                    {activities.length !== 0 &&\r\n                        <Fragment>\r\n\r\n                            <div className=\"activity-list column flex  padding-y-15\">\r\n                                <h1>Activities Read</h1>\r\n\r\n                                {activities.map((activity, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                            <div className=\"user-img-container flex align-center\">\r\n                                                <div className=\"date-container\">\r\n                                                    <p className=\"date-created\">\r\n                                                        {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                                <h2>{activity.byUser.fullName}</h2>\r\n                                            </div>\r\n                                            <div className=\"activity-desc-container flex align-center\">\r\n                                                <p>\r\n                                                    {activity.desc}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n\r\n                </div>\r\n                {activities.length === 0 && <h1 className=\"padding-x-15\">No recent board activities!</h1>}\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n \r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoRequestChanges, GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { AiOutlineMinus, AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { lightGreen } from '@material-ui/core/colors';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        isUsersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ board: this.props.board })\r\n        })\r\n        this.setState({ board: this.props.board, _id: this.props.board._id })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ board: this.props.board })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n    }\r\n    handleChangeName = (ev) => {\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n        let board = this.props.board\r\n\r\n        if (this.state.isActivitiesOpen) {\r\n            board = {\r\n                ...board,\r\n                activityLog: board.activityLog.map(activity => {\r\n                    activity.isRead = true\r\n                    return activity\r\n                })\r\n            }\r\n\r\n        }\r\n        this.props.onEditBoard(board.name, board.desc, false, 'openModal', board.members, board.activityLog)\r\n\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    onToggleUsers = () => {\r\n        this.setState({ isUsersOpen: !this.state.isUsersOpen })\r\n    }\r\n\r\n    onRemoveMemberFromBoard = (memberId) => {\r\n        this.setState({ board: { ...this.state.board, members: this.state.board.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'removeMemberFromBoard', this.state.board.members)\r\n        })\r\n    }\r\n\r\n    onAddUserToBoard = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ board: { ...this.state.board, members: [...this.state.board.members, newUser] } }, () => {\r\n            this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'addMemberToBoard', this.state.board.members)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.onEditBoard(board.name, board.desc, false, 'clearLog', board.members, board.activityLog)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        const { members } = this.state.board\r\n        const { users } = this.props\r\n        const usersToAdd = users.filter(user => !members.some(member => member._id === user._id))\r\n        const activitiesNotRead = this.props.board.activityLog.filter(activity => !activity.isRead)\r\n        const activitiesRead = this.props.board.activityLog.filter(activity => activity.isRead)\r\n        return (\r\n            <section className=\"board-header flex column padding-x-30\">\r\n                <div className=\"board-header-header flex space-between grow align-center\">\r\n                    <h1 className=\"flex align-center\">\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.board.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'changeBoardTitle')\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'changeBoardTitle')\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <div className=\"board-header-right relative flex align-center\">\r\n                        <div className=\"board-users flex justify-center\" onClick={this.onToggleUsers}>\r\n                            {members.length === 0 && <div className=\"user-img-container\"> <CgProfile /></div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    <img src={member.imgUrl} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        {this.state.isUsersOpen &&\r\n                            <div className=\"users-modal absolute\">\r\n                                <div className=\"board-users-box\">\r\n                                    <h3>Board Members</h3>\r\n                                    {members.map((member, idx) =>\r\n                                        <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(member._id)}>\r\n                                                {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{member.fullName}</p>\r\n                                            </div>\r\n                                            <AiOutlineMinus onClick={() => this.onRemoveMemberFromBoard(member._id)} />\r\n                                        </section>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"site-users-box\">\r\n                                    <h3>Site Users</h3>\r\n                                    {usersToAdd.map(user => {\r\n                                        return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex  align-center\" onClick={() => this.goToUserProfile(user._id)}>\r\n                                                {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                                    <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{user.fullName}</p>\r\n                                            </div>\r\n                                            <FiPlus onClick={() => this.onAddUserToBoard(user._id)} />\r\n                                        </section>\r\n                                    })}\r\n                                </div>\r\n\r\n                            </div>}\r\n                        <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                            {/* <GoRequestChanges /> */}\r\n                            <h2> Activities <span style={{ color: activitiesNotRead.length !== 0 ? '#0085ff' : '' }}>{activitiesNotRead.length}</span> / {activitiesRead.length + activitiesNotRead.length}</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"board-header-footer flex align-center space-between\">\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.board.desc} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'changeBoardDesc')\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'changeBoardDesc')\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                    <div className=\"header-options flex\">\r\n                        <button onClick={this.props.onAddGroup}>New Group</button>\r\n                        <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                            <input ref={(input) => { this.searchInput = input; }} placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                            <GoSearch />\r\n                        </div>\r\n                        <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }} className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                            <VscListFilter />\r\n                            <h2>Filter</h2>\r\n                            {\r\n                                this.state.isFiltersOpen &&\r\n\r\n                                <Filter board={this.props.board} />\r\n\r\n                            }\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                        <Activities onClearLog={this.onClearLog} onToggleActivities={this.onToggleActivities}\r\n                            boardName={this.state.board.name} activityLog={this.props.board.activityLog} />\r\n                    </div>\r\n                    {\r\n                        this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                    }\r\n                    {\r\n                        this.state.isUsersOpen && <div onClick={this.onToggleUsers} className='modal-screen-wrapper'></div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex column\">\r\n                                                <h2>\r\n                                                        {notification.byUser.fullName}\r\n                                                </h2>\r\n                                                <p>\r\n                                                        {notification.content}\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { FaAd, FaRegUser } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { BiLogOut } from 'react-icons/bi'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications, logout } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <li className=\"icon-container cursor-pointer\">\r\n                        <NavLink to=\"/\">\r\n                            <FaAd />\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container cursor-pointer\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <li className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container\"><FaRegUser /></li>\r\n                    </NavLink>\r\n                    <li className=\"icon-container\" ><BiLogOut onClick={this.onLogout} /></li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications,\r\n    logout\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar));","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <div className=\"member-img-container relative\">\r\n                {props.members.map(member=> <img className=\"member-img\" src={member.imgUrl} alt=\"\" />)}\r\n                <FiPlus className=\"no-members-icon-plus absolute\" />\r\n                </div>\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div> \r\n                :\r\n                 <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map((member,idx) =>\r\n                            <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <AiOutlineMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map((user,idx) => {\r\n                            return <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label className=\"date-picker\">\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative flex align-center\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name flex align-center justify-center\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(img) {\r\n    console.log('IMAGE?', img)\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\n\r\n\r\nexport class Reply extends React.Component {\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n\r\n    toggleEditMode = (replyTxt) => {\r\n        this.setState({ isEditMode: !this.state.isEditMode, txt: replyTxt })\r\n    }\r\n\r\n    updateReply = (newReply) => {\r\n        if (newReply.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newReply.txt = this.state.txt\r\n        const newReplies = this.props.update.replies.map(reply => {\r\n            return reply.id === newReply.id ? newReply : reply\r\n        })\r\n\r\n        const update = { ...this.props.update, replies: newReplies }\r\n        this.props.updateNote(update)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    removeReply = (replyId) => {\r\n        const idx = this.props.update.replies.findIndex(reply => reply.id === replyId)\r\n        const newUpdate = { ...this.props.update }\r\n        const update = newUpdate.replies.splice(idx, 1)\r\n        this.props.updateNote(update)\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { reply, idx } = this.props\r\n        return (\r\n\r\n            <div key={idx} className=\"reply-box flex column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n\r\n                <div className=\"reply-content flex align-center\">\r\n                    <img src={reply.member.imgUrl} alt=\"\" />\r\n                    <p className=\"reply-name\">{reply.member.fullName}</p>\r\n                    {!this.state.isEditMode ?\r\n                        <p className=\"reply-text\">{reply.txt}</p>\r\n                        :\r\n                        <div className=\"edit-box flex\">\r\n                            <textarea name=\"txt\" onChange={this.handleChange} value={this.state.txt}></textarea>\r\n                            <AiOutlineSend className=\"update-reply-btn\" onClick={() => this.updateReply(reply)} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeReply(reply.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.toggleEditMode(reply.txt)\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\nimport { Reply } from './Reply';\r\n\r\nexport class Update extends React.Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n\r\n    onReply = (newUpdate) => {\r\n        if (!this.state.txt || this.state.txt.split('').every(letter => letter === ' ')) return\r\n        const newReply = {\r\n            txt: this.state.txt,\r\n            createdAt: Date.now(),\r\n            id: this.props.makeid(),\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const update = this.props.updates.find(update => update.id === newUpdate.id)\r\n        update.replies = [...update.replies, newReply]\r\n        this.props.updateNote(update)\r\n\r\n        this.setState({ txt: '' })\r\n    }\r\n\r\n    removeUpdate = (updateId) => {\r\n        const updates = this.props.updates.filter(update => update.id !== updateId)\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    onToggleEditUpdate = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    editUpdate = (newUpdate) => {\r\n        if (newUpdate.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newUpdate.txt = this.state.txt\r\n        const newUpdates = this.props.updates.map(update => {\r\n            return update.id === newUpdate.id ? newUpdate : update\r\n        })\r\n\r\n        this.props.sendNote(newUpdates)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { update, idx } = this.props\r\n\r\n        return (\r\n            <div key={idx} className=\"update-box flex wrap column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeUpdate(update.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.onToggleEditUpdate()\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n                {/* <button className=\"remove-update-btn\" onClick={() => this.removeUpdate(update.id)}>X</button> */}\r\n                <div className=\"update-box-header flex align-center\">\r\n                    <img src={update.member.imgUrl} alt=\"\" />\r\n                    <p className=\"member-name\">{update.member.fullName}</p>\r\n                </div>\r\n\r\n\r\n                {this.state.isEditMode ?\r\n                    <div className=\"update-box-edit flex column relative\">\r\n                        <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                        <AiOutlineSend className=\"submit-edit-btn absolute\" onClick={() => this.editUpdate(update)} />\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                    :\r\n                    <div className=\"update-box-main flex column\">\r\n                        {update.txt && <p className=\"update-text\">{update.txt}</p>}\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                }\r\n                {/* <p className=\"edit-update-btn\" onClick={this.onToggleEditUpdate}>Edit</p> */}\r\n                <div className=\"update-box-footer flex column\">\r\n\r\n                    {update.replies &&\r\n                        <div className=\"replies-box flex column\" style={{ borderTop: `${update.replies.length && '1px solid rgba(109, 109, 109, 0.35)'}` }}>\r\n                            {update.replies.map((reply, idx) =>\r\n                                <Reply key={idx} reply={reply} idx={idx} update={this.props.update}\r\n                                    updateNote={this.props.updateNote} />\r\n                            )}</div>\r\n                    }\r\n                    {!this.state.isEditMode &&\r\n                        <div className=\"reply-footer flex space-between align-center\">\r\n                            <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                            <button className=\"reply-button\" onClick={() => this.onReply(update)}>Reply</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { BiImage } from 'react-icons/bi';\r\nimport { MdDone } from 'react-icons/md';\r\n\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\nimport { Update } from './Update';\r\n\r\n\r\nfunction makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        reply: {\r\n            txt: ''\r\n        },\r\n        update: {\r\n            id: '',\r\n            txt: '',\r\n            imgUrl: '',\r\n            replies: []\r\n        },\r\n        isLoading: false,\r\n        imageUploaded: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ imageUploaded: false })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else if (ev.target.name === 'txt') {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        } else {\r\n            this.setState({ reply: { ...this.state.reply, txt: ev.target.value } })\r\n        }\r\n    }\r\n\r\n    uploadImg = async () => {\r\n        this.setState({ isLoading: true })\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        this.setState({ update: { ...this.state.update, imgUrl: res.url }, isLoading: false, imageUploaded: true })\r\n    }\r\n\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if ((!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) && !this.state.update.imgUrl) return\r\n        const newNote = {\r\n            id: makeid(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.update.txt,\r\n            imgUrl: this.state.update.imgUrl,\r\n            replies: [],\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n        this.setState({ update: { txt: '', imgUrl: '' }, imageUploaded: false })\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    updateNote = (newUpdate) => {\r\n        const newNotes = [...this.props.updates].map(update => update.id === newUpdate.id ? newUpdate : update)\r\n        this.props.sendNote(newNotes)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.updates) return <h1>Loading...</h1>;\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column\">\r\n                    <AiOutlineClose onClick={this.props.closeModal} />\r\n                    <h1>{this.props.task.name}</h1>\r\n                    <div className=\"updates-header-options flex column\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex align-center\">\r\n                            <textarea name=\"txt\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                        </form>\r\n\r\n                        <div className=\"updates-btns flex align-center space-between\">\r\n                            <div className=\"image-uploader flex\">\r\n                                <label data-title=\"Upload Image\" htmlFor={this.props.task.id}>{this.state.isLoading ? <div class=\"loadingio-spinner-spinner-gvjl1rpqs7q\"><div class=\"ldio-subadnemdcd\">\r\n                                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                                </div></div> : <BiImage />}\r\n                                </label>\r\n                                <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                                {this.state.imageUploaded && <div className=\"image-uploaded flex align-center\"><MdDone /><p> Image Ready!</p></div>}\r\n                            </div>\r\n                            {this.state.isLoading ? <p>Image is uploading..</p> : <button onClick={this.sendNote}>Send</button>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"updates-container\">\r\n                    {updates.map((update, idx) => <Update update={update} key={idx} idx={idx}\r\n                        updates={updates} loggedUser={this.props.loggedUser}\r\n                        sendNote={this.props.sendNote}\r\n                        updateNote={this.updateNote} makeid={makeid} />)}\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { BsBookmarkPlus, BsFilePlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagName, 'addTag')\r\n    }\r\n\r\n    onRemoveTag = (id) => {\r\n        const tagToRemove = this.state.tags.find(tag => tag.id === id)\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagToRemove.txt, 'removeTag')\r\n    }\r\n    onEditTag = (idx, tagName, type) => {\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) {\r\n            return\r\n        }\r\n        this.props.onEditTags(this.state.tags, tagName, type)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>\r\n                        )\r\n\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }} key={idx}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    {idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {this.props.isTagsShown &&\r\n                    <Fragment>\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <div className=\"tag-add-container  flex justify-center align-center\">\r\n                                <BsBookmarkPlus onClick={this.onAddTag} />\r\n                                <input onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        this.onAddTag()\r\n                                        ev.target.blur()\r\n                                        ev.target.value = ''\r\n                                    }\r\n                                }} placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                            </div>\r\n                            <section>\r\n                                {this.state.tags.map((tag, idx) => {\r\n                                    return (\r\n                                        <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                            <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n\r\n                                            <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                                ev.target.blur()\r\n                                                this.onEditTag(idx)\r\n                                            }}\r\n                                                onKeyDown={(ev) => {\r\n                                                    if (ev.key === 'Enter') {\r\n                                                        ev.target.blur()\r\n                                                        this.onEditTag(idx)\r\n                                                    }\r\n                                                }}\r\n                                                onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    reloadProps = () => {\r\n        this.setState({ task: this.props.task })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        const prevDate = this.state.task.dueDate;\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, moment(date).valueOf(), prevDate, 'date')\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n        console.log('got data:', data);\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            const prevData = this.state.task.status;\r\n            this.setState({ task: { ...this.state.task, status: data } }, () => {\r\n                console.log('in callback');\r\n                this.props.onEditTask(this.state.task, this.props.group, data, prevData, 'status')\r\n                this.closeModal()\r\n            })\r\n        } else {\r\n            const prevData = this.state.task.priority;\r\n            this.setState({ task: { ...this.state.task, priority: data } }, () => {\r\n                this.props.onEditTask(this.state.task, this.props.group, data, prevData, 'priority')\r\n                this.closeModal()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, true, false, 'sendNote')\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        const removedMember = this.state.task.members.find(member => member._id === memberId)\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, removedMember, false, 'removeFromTask')\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, newUser, false, 'addToTask')\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onEditTags = (tags, tagName, type) => {\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, tagName, false, type)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                    <Updates closeModal={this.closeModal} task={this.state.task} isImageModalShown={this.state.isImageModalShown}\r\n                        loggedUser={this.props.loggedUser} updates={updates}\r\n                        uploadImg={this.uploadImg} sendNote={this.sendNote} closeModal={this.closeModal}\r\n                    />\r\n                </div>\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div className=\"task-color-remove\">\r\n                                    <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                    <div className='icon-container'>\r\n                                        <MdDelete className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id, this.props.group) }} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"task-title-updates flex align-center space-between grow\">\r\n                                    <h2>\r\n                                        <ContentEditable\r\n                                            onFocus={this.focusText}\r\n                                            className=\"cursor-initial content-editable\"\r\n                                            innerRef={this.contentEditable}\r\n                                            html={name}\r\n                                            disabled={false}\r\n                                            onChange={this.handleNameChange}\r\n                                            onBlur={() => {\r\n                                                this.props.onEditTask(this.state.task, this.props.group, this.state.task.name, name, 'name')\r\n                                            }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                    this.props.onEditTask(this.state.task, this.props.group, this.state.task.name, name, 'name')\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </h2>\r\n\r\n\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative grow\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                <Tags handleChange={this.handleChange} onEditTags={this.onEditTags}\r\n                                    task={this.state.task} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    reloadProps = () =>{\r\n        this.setState({ ...this.state, name: this.props.group.name })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({ ...this.state, name: this.props.group.name, id: this.props.group.id })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        try {\r\n            this.props.onEditGroup(this.props.group.id, color, 'color')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    convertToData(property) {\r\n        const { tasks } = this.props.group;\r\n        const taskCount = tasks.length;\r\n        const percent = tasks.length / 100;\r\n        const data = tasks.reduce((acc, task) => {\r\n            const value = task[property]\r\n            if(!acc[value]) acc[value] = 0;\r\n            acc[value]++;\r\n            return acc;\r\n        }, {})\r\n        const res = [];\r\n        for (let key in data) {\r\n            data[key] /= percent;\r\n            res.push(<div key={key} style={{ width: data[key] ? `${data[key]}%` : '0' }}\r\n                data-title={data[key] ? ` ${key} ${taskCount * data[key] / 100}/${taskCount} ${data[key].toFixed(1)}%` : ''}\r\n                className={`precent-bar ${key.toLowerCase()}`}></div>)\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1> \r\n        const priority = this.convertToData('priority')\r\n        const status = this.convertToData('status')\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const { group, index } = this.props;\r\n        return (\r\n            <Draggable draggableId={group.id} index={index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={group.id} className=\"group padding-y-45\"\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n                                <h1 style={{ color: group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(group.id, this.state.name, 'name')\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditGroup(group.id, this.state.name, 'name')\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\">\r\n                                <h3 style={{ color: this.props.group.color }}>Members</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Status</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Due-Date</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Priority</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Tags</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <div className=\"task-color\" style={{ backgroundColor: group.color }}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        <section className=\"group-precent-container flex\">\r\n                            <div className=\"group-precent flex\">\r\n                                {status}\r\n                            </div>\r\n                            <div className=\"group-precent flex\">\r\n                                {priority}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport moment from 'moment';\r\n\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\nimport { groupChanges } from '../store/actions/changesActions'\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = async (boardName, boardDescription, toUpdateChanges = false, type, members, activityLog) => {\r\n        const currBoard = this._getCurrBoard()\r\n\r\n        const newBoard = {\r\n            ...currBoard,\r\n            name: boardName,\r\n            desc: boardDescription,\r\n            members: members ? members : currBoard.members,\r\n            activityLog: activityLog ? activityLog : currBoard.activityLog\r\n        }\r\n\r\n        if (toUpdateChanges) {\r\n            switch (type) {\r\n                case 'changeBoardTitle':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Changed the board title from ${currBoard.name} to ${boardName}`, this.props.loggedUser, newBoard)\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                    break;\r\n                case 'changeBoardDesc':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Changed ${currBoard.name} description to ${boardDescription}`, this.props.loggedUser, newBoard)\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                    break;\r\n                case 'addMemberToBoard':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Invited a member to the board `, this.props.loggedUser, newBoard)\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                    break;\r\n                case 'removeMemberFromBoard':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Removed a member from the board`, this.props.loggedUser, newBoard)\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard)\r\n        this.props.showSnackbar('Updated board.')\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            // await this.props.groupChanges(`${this.props.loggedUser.fullName} Added a new group`)\r\n            this.props.addGroup(board, this.props.loggedUser);\r\n            this.props.clearFilter();\r\n            this.props.showSnackbar('Added group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            this.props.removeGroup(groupId, board, this.props.loggedUser)\r\n            this.props.showSnackbar('Removed group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (groupId, changedValue, key) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        if (group[key] === changedValue) return;\r\n        const originalValue = group[key];\r\n        group[key] = changedValue;\r\n        try {\r\n            const desc = `${group.name}: ${loggedUser.fullName} Changed ${originalValue} title to ${changedValue}`\r\n            // await this.props.groupChanges(`${this.props.loggedUser.fullName} Changed ${originalValue} title to ${changedValue}`, this.props.loggedUser, board)\r\n            this.props.editGroup(group, board, desc, loggedUser)\r\n            this.props.showSnackbar('Updated group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId, group) => {\r\n        const board = this._getCurrBoard()\r\n        try {\r\n\r\n            this.props.removeTask(taskId, board, group, this.props.loggedUser)\r\n            this.props.showSnackbar('Removed task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            this.props.addTask(groupId, taskName, board, this.props.loggedUser)\r\n            this.props.clearFilter()\r\n            this.props.showSnackbar('Added task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onEditTask = async (task, group, changedValue = true, originalValue = false, type) => {\r\n        const board = this._getCurrBoard()\r\n        const { loggedUser } = this.props;\r\n        if (changedValue === originalValue) return\r\n        let desc = ''\r\n        switch (type) {\r\n            case 'name':\r\n                desc = `${loggedUser.fullName} changed task name from ${originalValue} to ${changedValue} at group - ${group.name}`\r\n\r\n                break;\r\n            case 'sendNote':\r\n                desc = `${loggedUser.fullName} sent an update at task: ${task.name} at group - ${group.name}`\r\n                break;\r\n            case 'status':\r\n                desc = `${loggedUser.fullName} changed task: ${task.name} status from ${originalValue} to ${changedValue} at group - ${group.name}`\r\n                break;\r\n            case 'priority':\r\n                desc = `${loggedUser.fullName} changed task: ${task.name} priority from ${originalValue} to ${changedValue} at group - ${group.name}`\r\n                break;\r\n            case 'date':\r\n                desc = `${loggedUser.fullName} changed task ${task.name} date from ${moment(originalValue).format('DD/MMM/YYYY')} to ${moment(changedValue).format('DD/MMM/YYYY')} at group - ${group.name}`\r\n\r\n                break;\r\n            case 'removeFromTask':\r\n                desc = `${loggedUser.fullName} removed ${changedValue.fullName} from ${task.name} at group - ${group.name}`\r\n\r\n                break;\r\n            case 'addToTask':\r\n                desc = `${loggedUser.fullName} tasked ${changedValue.fullName} to ${task.name} on group - ${group.name}`\r\n\r\n                break;\r\n            case 'addTag':\r\n                desc = `${loggedUser.fullName} added tag named ${changedValue} to ${task.name} on group - ${group.name}`\r\n                break;\r\n            case 'removeTag':\r\n                desc = `${loggedUser.fullName} removed tag named ${changedValue} from ${task.name} on group - ${group.name}`\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.props.editTask(task, board, desc, loggedUser)\r\n        this.props.showSnackbar('Updated task.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this._getCurrBoard()\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} Moved ${newTaskToPaste.name} from ${newStartGroup.name} to ${newFinishGroup.name}`, this.props.loggedUser, board)\r\n                    this.props.updateBoard(this._getCurrBoard())\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    _getCurrBoard = () => {\r\n        return this.props.boards.find(board => board._id === this.state.boardId)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        const board = this._getCurrBoard()\r\n        const { users, filterBy } = this.props;\r\n        if (!board) return <h1>Loading..</h1>\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        return (\r\n            <section className=\"board\">\r\n                <Navbar />\r\n                <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                <div className=\"board-container\">\r\n                    <BoardHeader board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} users={users} />\r\n                    <div className=\"groups-container padding-x-30\">\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup}\r\n                                                onChangeGroupColor={this.onChangeGroupColor} group={group} users={board.members} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter,\r\n    groupChanges\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import { boardService } from '../../services/boardService'\r\nimport socketService from '../../services/socketService.js'\r\nimport { userService } from '../../services/userService.js'\r\n\r\nexport function groupChanges(desc, loggedUser, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.handleBoardChanges(desc, loggedUser, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n\r\n            const users = await userService.loadUsers();\r\n            const notification = {\r\n                byUser: {\r\n                    fullName: loggedUser.fullName,\r\n                    imgUrl: loggedUser.imgUrl\r\n                },\r\n                content: `${board.name}: ${desc}`,\r\n                createdAt: Date.now()\r\n            }\r\n            board.members.forEach(member => {\r\n                if (member._id === loggedUser._id) return;\r\n                let userToUpdate = users.find(user => user._id === member._id);\r\n                userToUpdate.notifications.unshift(notification);\r\n                userService.updateUser(userToUpdate);\r\n                socketService.emit('send-notif', { memberId: member._id, notification });\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t send activities/notif');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { signup, guestLogin } from '../store/actions/userActions.js'\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount() {\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, { resetForm }) => {\r\n        resetForm();\r\n        const { username, password, email, fullName } = values;\r\n        try {\r\n            await this.props.signup({ username, password, email, fullName });\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        } catch (err) {\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"fullName\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport {userService} from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() { \r\n        this.props.loadBoards();\r\n        const user = await userService.getUserById(this.props.match.params.id)\r\n        this.setState({ user: { ...user} })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        const { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        const { loggedUser} = this.props\r\n\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container\">\r\n\r\n                                <div className=\"user-modal-header padding-x-15 padding-y-15 flex justify-center align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-main\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" onSubmit={this.updateProfile}>\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction _UpcomingTasks(props) {\r\n\r\n    function getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    } \r\n\r\n    function moveToUserProfile(userId) {\r\n        props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    const { tasks, header } = props;\r\n\r\n    return <div className=\"upcoming-tasks\">\r\n        <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n        {tasks.map(task => <div\r\n            key={task.id}\r\n            className=\"task-preview space-between align-center\">\r\n            <div className=\"left-column\">\r\n                <p className=\"task-preview-name\">{task.name}</p>\r\n                <p className=\"task-location\">At: <span onClick={() => props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n            </div>\r\n            <section className=\"right-column flex align-center space-between\">\r\n                {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                <div className=\"user-img-container flex justify-center align-center\">\r\n                    {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                        <div onClick={() => moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                </div>\r\n                <div className=\"deadline-container flex align-center\"  onClick={() => props.history.push(`/board/${task.boardId}`)}>\r\n                    <h2 >{getDaysFromNow(task.dueDate)}</h2>\r\n                </div>\r\n            </section>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>{taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD': \r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {      \r\n            \"_id\" : \"5f68936cf878123b2cdce96d\",\r\n            \"username\" : \"frize\",\r\n            \"fullName\" : \"Roei Arazi\",\r\n            \"password\" : \"3333\",\r\n            \"email\" : \"frize@gmail.com\",\r\n            \"imgUrl\" : \"https://via.placeholder.com/250\",\r\n            \"isAdmin\" : true,\r\n            \"boards\" : [],\r\n            \"notifications\" : [ \r\n                {\r\n                byUser: \r\n                {\r\n                    fullName: \"Liam Zety\",\"imgUrl\" : \"https://via.placeholder.com/250\" \r\n                },\r\n                content:\"just uploaded the logo!\",\r\n                createdAt:Date.now()\r\n            }],\r\n            \"birthDay\" : \"2nd August 1997\",\r\n            \"company\" : \"adidas\",\r\n            \"phoneNumber\" : \"0224132124\"\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}