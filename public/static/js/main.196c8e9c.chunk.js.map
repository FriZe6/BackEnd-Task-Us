{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","services/userService.js","store/actions/userActions.js","cmps/Navbar.jsx","services/cloudinaryService.js","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","pages/Board.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","pages/MyWeek.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","group","_makeid","groups","push","err","removeGroup","groupId","filter","id","updateGroup","updatedGroup","map","addTask","removeTask","updateTask","updatedTask","tasks","task","boards","boardToSave","echo","socketService","_id","boardCreator","lastUpdated","isSelected","posts","tags","fullName","newBoard","taskId","taskName","name","createdAt","members","priority","dueDate","Date","now","updates","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","state","this","props","className","to","Component","mapDispatchToProps","Home","connect","boardReducer","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onBoardRemove","match","history","params","setTimeout","idx","findIndex","onToggleShown","toggleBoardbar","updatedBoard","recieveUpdate","isBoardbarShown","Tooltip","enterDelay","TransitionComponent","Zoom","title","arrow","style","color","pathname","includes","onClick","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","withRouter","Activities","isOrderReversed","filteredActivities","handleSearch","target","activityLog","activitiy","description","toLowerCase","value","toLocaleLowerCase","byUser","reverseOrder","sort","activitiy1","activitiy2","onToggleActivities","boardName","onChange","data-title","size","activity","src","imgUrl","alt","Truncate","lines","ellipsis","width","moment","fromNow","setFilter","Filter","filterBy","onSetFilter","filterKey","filterValue","dates","forEach","date","format","formatted","getBoardDates","Fade","in","member","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onToggleFilters","editableName","React","createRef","editableDescription","prevProps","prevState","onFocus","innerRef","html","disabled","onBlur","onEditBoard","onKeyDown","blur","onAddGroup","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","loggedUser","notifications","Fragment","notification","content","users","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","isRead","userId","user","userCred","isAdmin","birthDay","company","phoneNumber","newUser","username","password","userIdx","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","some","Navbar","userReducer","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","Members","usersToAdd","openModal","toUpperCase","isUsersShown","goToUserProfile","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","handleChange","selected","handleDateChange","dateFormat","Priority","isPriorityShown","Updates","isImagesShown","isNotesShown","update","txt","toggleUpdates","sendNote","preventDefault","every","letter","newNote","onSubmit","htmlFor","hidden","Tags","handleNameChange","elTag","_Task","isUpdatesShown","isTagsShown","onEditTask","newImg","newUpdates","closeModal","find","contentEditable","elTaskName","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","backgroundColor","onRemoveTask","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","newGroup","onEditGroup","elInputAdd","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","current","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_Board","boardDescription","applyFilter","filteredBoard","JSON","parse","stringify","filterTasks","tag","clearFilter","changedValue","originalValue","editGroup","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","splice","groupStart","groupEnd","newTasks","newTask","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","Board","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","_MyWeek","searchVal","moveToUserProfile","maxDaysLeft","minDaysLeft","isBefore","add","isAfter","task1","task2","endOf","upcomingTasks","getUpcomingTasks","firstName","getDaysFromNow","path","App","routes","route","exact","hostname","initialState","userProfile","isLoading","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.196c8e9c.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    console.log('established connection');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    console.log('socket:', socket);\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction updateBoard(boardToSave, echo = true) {\r\n    if (echo) socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard() {\r\n    const board = {\r\n        boardCreator: {\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": 198465168486,\r\n        \"description\": 'Enter description here',\r\n        \"members\": [{\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": 'date',\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": 198465168486,\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                lastUpdated: 'yesterday',\r\n                isSelected: false,\r\n                posts: [],\r\n                tags: ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                lastUpdated: 'yesterday',\r\n                isSelected: false,\r\n                posts: [],\r\n                tags: ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n            }]\r\n        }],\r\n        \"activityLog\": [{\r\n            \"id\": _makeid(),\r\n            \"createdAt\": 124124125124,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'removed task \"do the dishes\"',\r\n            \"task\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'do the dishes'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 12412541251,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                fullName: 'shucks mcgee'\r\n            },\r\n            \"description\": 'changed group name from project2 to project3',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project3'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 4514512352135,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'added group project2',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project2'\r\n            }\r\n        }\r\n        ]\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    console.log('got from database:', newBoard);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": 198465168486,\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": 1123124124241,\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": 214124124125,\r\n            \"updates\": [\r\n                {\r\n                    \"txt\": 'dont forget about this',\r\n                    \"member\": 'Roei Arazi'\r\n                },\r\n                {\r\n                    \"txt\": 'https://res.cloudinary.com/dtg7n0zye/image/upload/v1600008729/i70mbqxvm0qh1yeznsnf.jpg',\r\n                    \"member\": 'Liam Zety'\r\n                }\r\n            ],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        updateBoard(board)\r\n        return board\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board) {\r\n    board.groups = board.groups.filter(group => group.id !== groupId)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nasync function removeTask(taskId, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.filter(task => task.id !== taskId)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n\r\n}\r\n\r\nasync function addTask(groupId, taskName = 'Change Task Name', board) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: 1123124124241,\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n    }\r\n    board.groups.map(group => {\r\n        if (group.id === groupId) group.tasks.push(task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n\r\n}\r\n\r\nfunction updateTask(updatedTask, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave, false);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard();\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(boardId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(boardId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board);\r\n            dispatch({ type: 'EDIT_TASK', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"home\">\r\n                <h1>Home</h1>\r\n                <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                    <button>Start Here!</button>\r\n                </NavLink>\r\n                <NavLink to=\"/login\">\r\n                    <button>Login</button>\r\n                </NavLink>\r\n                <NavLink to=\"/signup\">\r\n                    <button>Sign-up</button>\r\n                </NavLink>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFilePlus, BsArrowsCollapse, BsArrowsExpand } from 'react-icons/bs';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate } from '../store/actions/boardActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: ''\r\n    } \r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            console.log('got board:', updatedBoard);\r\n             this.props.recieveUpdate(updatedBoard)\r\n            });\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n \r\n    onBoardRemove = async (boardId) => {\r\n        const { boards, match, history, removeBoard } = this.props\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        await removeBoard(boardId);\r\n        await this.props.showSnackbar('Removed board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                {\r\n                    isShown ? (\r\n                        <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                            <div className=\"board-bar-toggle-container\">\r\n                                <BsArrowsCollapse style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                    onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                            </div>\r\n                        </Tooltip>\r\n                    )\r\n\r\n                        : (\r\n                            <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                                <div className=\"board-bar-toggle-container\">\r\n                                    <BsArrowsExpand style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                        onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                                </div>\r\n                            </Tooltip>\r\n                        )\r\n                }\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFilePlus onClick={this.props.addBoard} />\r\n                </div>}\r\n                {isShown && <input type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && boards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n                {/* <Popup /> */}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport Truncate from 'react-truncate';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        filteredActivities: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ filteredActivities: this.props.activityLog })\r\n    }\r\n\r\n    handleSearch = ({ target }) => {\r\n        const filteredActivities = this.props.activityLog.filter((activitiy) => {\r\n            return activitiy.description.toLowerCase()\r\n                .includes(target.value.toLocaleLowerCase())\r\n                ||\r\n                activitiy.byUser.fullName.toLowerCase()\r\n                    .includes(target.value.toLocaleLowerCase())\r\n        })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n    reverseOrder = () => {\r\n        const filteredActivities = this.state.filteredActivities.sort((activitiy1, activitiy2) => {\r\n            const res = this.state.isOrderReversed ? -1 : 1;\r\n            if (activitiy1.createdAt < activitiy2.createdAt) return -res;\r\n            if (activitiy1.createdAt > activitiy2.createdAt) return res;\r\n            return 0;\r\n        })\r\n        this.setState({ isOrderReversed: !this.state.isOrderReversed })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.filteredActivities) return <h1>Loading...</h1>\r\n        const { isOrderReversed, filteredActivities } = this.state;\r\n        return (\r\n            <section className=\"activities flex column padding-y-15\">\r\n\r\n                <header className=\"padding-x-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input onChange={this.handleSearch} type=\"text\" placeholder=\"Search\" />\r\n                        {isOrderReversed ?\r\n                            <div data-title=\"test\"><FaArrowUp size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            :\r\n                            <div data-title=\"test\"><FaArrowDown size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                        }\r\n                    </div>\r\n\r\n                </header>\r\n\r\n\r\n                <div className=\"activity-list column flex \">\r\n                    {filteredActivities.map(activity => {\r\n\r\n                        return (\r\n                            <div key={activity.id} className=\"activity padding-x-15 space-between flex align-center\">\r\n                                <div className=\"activity-desc-container flex align-center\">\r\n                                    <div className=\"user-img-container flex align-center justify-center\">\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <h2>{activity.byUser.fullName}</h2>\r\n                                    <p>\r\n                                        <Truncate lines={1} ellipsis={\"...\"} width={550}>\r\n                                            {activity.description}\r\n                                        </Truncate>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <p className=\"date-created\">{moment(activity.createdAt).fromNow()}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoRequestChanges, GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n\r\n        this.setState({ ...this.props.board })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ ...this.props.board })\r\n        }\r\n    }\r\n\r\n    handleChangeName = (ev) => {\r\n        this.setState({ name: ev.target.value })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ description: ev.target.value })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"board-header align-center padding-x-30 padding-y-45 \">\r\n                <div className=\"col-left flex column\">\r\n                    <h1>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.description} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                </div>\r\n                <div className=\"col-right flex align-center\">\r\n                    <button onClick={this.props.onAddGroup}>New Group</button>\r\n                    <div className=\"search-outer-container flex align-center\">\r\n                        <input placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                        <GoSearch />\r\n                    </div>\r\n                    <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                        <GoRequestChanges />\r\n                        <h2 >Activity Log</h2>\r\n                    </div>\r\n\r\n                    <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }} className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                        <VscListFilter />\r\n                        <h2>Filter</h2>\r\n                        {\r\n                            this.state.isFiltersOpen &&\r\n\r\n                            <Filter board={this.props.board} />\r\n\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                    <Activities onToggleActivities={this.onToggleActivities}\r\n                        boardName={this.props.board.name} activityLog={this.props.board.activityLog} />\r\n                </div>\r\n                {\r\n                    this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n                {\r\n                    this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex align-center column\">\r\n                                                <h2>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.byUser.fullName}\r\n                                                    </Truncate>\r\n                                                </h2>\r\n                                                <p>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.content}\r\n                                                    </Truncate>\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import httpService from \"./httpService\";\r\n\r\nlet users = [{\r\n    \"username\": 'frize',\r\n    \"fullName\": 'Roei Arazi',\r\n    \"password\": '3333',\r\n    \"email\": 'frize@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224132124'\r\n},\r\n{\r\n    \"username\": 'anstrio',\r\n    \"fullName\": 'Osher Kabada',\r\n    \"password\": '2222',\r\n    \"email\": 'anstrio@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224127124'\r\n},\r\n{\r\n    \"username\": 'smoking',\r\n    \"fullName\": 'Liam Zety',\r\n    \"password\": '1111',\r\n    \"email\": 'smoking@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas', \r\n    \"phoneNumber\": '0224112124'\r\n}\r\n]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return user;\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try{\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return newUser;\r\n    }catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest mcgee',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function updateUser(loggedUser) {\r\n    const userIdx = users.findIndex(user => user._id === loggedUser._id)\r\n\r\n    try {\r\n        users[userIdx] = {...loggedUser}\r\n        console.log('in user service:', loggedUser);\r\n    } catch (err) {\r\n        console.log('ERROR, couldnt update user', err);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}","import { userService } from \"../../services/userService\";\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaAd } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/\">\r\n                        <FaAd />\r\n                    </NavLink>\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <div className=\"icon-container\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter cursor-pointer\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </div>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <div className=\"icon-container\"><BsCalendar /></div>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li><CgProfile /></li>\r\n                    </NavLink>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(_Navbar);","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(ev) {\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <img alt=\"profile\" src={props.members[0].imgUrl} />\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div> : <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n            {(props.members.length !== 0) &&\r\n                <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{props.members.length}</span></div>}\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map(member =>\r\n                            <section key={member._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <AiOutlineMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map(user => {\r\n                            return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label>\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React from 'react'\r\nimport { IoMdSend } from 'react-icons/io'\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        isImagesShown: false,\r\n        isNotesShown: false,\r\n        update: {\r\n            txt: ''\r\n        },\r\n        updates: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ updates: this.props.updates })\r\n    }\r\n\r\n    toggleUpdates = (data) => {\r\n        if (data === 'images') {\r\n            this.setState({ isImagesShown: true })\r\n            this.setState({ isNotesShown: false })\r\n        } else {\r\n            this.setState({ isImagesShown: false })\r\n            this.setState({ isNotesShown: true })\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n    }\r\n\r\n    sendNote = async (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) return\r\n        const newNote = {\r\n            txt: this.state.update.txt,\r\n            member: this.props.loggedUser.fullName\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n\r\n        await this.setState({ updates, update: { txt: '' } })\r\n\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.updates) return <h1>Loading...</h1>;\r\n\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column align-center\">\r\n                    <h1>Updates</h1>\r\n                    <div className=\"updates-header-options flex align-center space-between\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex justify-center align-center\">\r\n                            <input type=\"text\" placeholder=\"Text Note\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                            <IoMdSend onClick={this.sendNote} />\r\n                        </form>\r\n                        <div className=\"image-uploader\">\r\n                            <label htmlFor=\"task-imgs\">Upload Image</label>\r\n                            <input type=\"file\" id=\"task-imgs\" onChange={this.props.uploadImg} hidden />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"updates-container flex column\">\r\n\r\n                    {updates.map((update, idx) => {\r\n\r\n                        if (update.txt.includes('https://res') || update.txt.includes('http://res')) {\r\n                            return <div key={idx} className=\"update-box flex wrap column\"><p className=\"member-name\">{update.member}</p> <img src={update.txt} /></div>\r\n                        } else return <div key={idx} className=\"update-box\"><p className=\"member-name\" key={idx}>{update.member}</p> <p className=\"update-text\">{update.txt}</p></div>\r\n                    })}\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n// import ContentEditable from 'react-contenteditable';\r\n// import Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n        txt: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elTag = React.createRef();\r\n    }\r\n\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ txt: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"label-container relative\">\r\n            <h1>tags</h1>\r\n                {/* <div onClick={() => this.props.openModal('tags')} className=\"tags\">\r\n                    <div className=\"task-label-name\">\r\n                        {this.props.tags.map((tag, idx) => {\r\n                            return (\r\n                                <p key={idx}>\r\n                                    <Truncate lines={1} ellipsis={\"...\"} width={100}>\r\n                                        {idx === this.props.tags.length - 1 ? tag.txt : tag.txt + \",\"}\r\n                                    </Truncate>\r\n                                </p>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    {this.props.isTagsShown &&\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <section>\r\n                                {this.props.tags.map((tag, idx) => {\r\n                                    console.log('tag', tag)\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <p key={idx} style={{ color: tag.color }}>\r\n                                                <ContentEditable\r\n                                                    onFocus={this.focusText}\r\n                                                    className=\"content-editable cursor-initial\"\r\n                                                    innerRef={this.elTag}\r\n                                                    html={idx === this.props.tags.length - 1 ? tag.txt : tag.txt + \",\"} // innerHTML of the editable div\r\n                                                    disabled={false}       // use true to disable editing\r\n                                                    onChange={() => this.props.handleChange('tag', this.state.txt)} // handle innerHTML change\r\n                                                    onBlur={() => {\r\n                                                        this.props.onEditTask('tag', this.state.txt)\r\n                                                    }}\r\n                                                    onKeyDown={(ev) => {\r\n                                                        if (ev.key === 'Enter') {\r\n                                                            ev.target.blur()\r\n                                                            this.props.onEditTask('tag', this.state.txt)\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </p>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n                        </div>\r\n                    }\r\n\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\nimport Truncate from 'react-truncate';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        this.setState({ ...this.props.task })\r\n        this.setState({\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({ dueDate: date })\r\n        this.props.onEditTask(this.state)\r\n    }\r\n\r\n    handleChange = async (data, tags) => {\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            await this.setState({ status: data })\r\n            this.props.onEditTask(this.state)\r\n        } else if (data === 'tag') {\r\n            console.log('IMHERE, data:', data, 'tag:', tags)\r\n            await this.setState({ ...this.state, tags })\r\n            this.props.onEditTask(this.state, tags)\r\n        } else {\r\n            await this.setState({ priority: data })\r\n            this.props.onEditTask(this.state)\r\n        }\r\n\r\n    }\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev)\r\n        const newImg = {\r\n            member: this.props.loggedUser.fullName,\r\n            txt: res.url\r\n        }\r\n        this.setState({ updates: [newImg, ...this.state.updates] })\r\n        this.props.onEditTask(this.state)\r\n    }\r\n\r\n    sendNote = async (newUpdates) => {\r\n        await this.setState({ updates: [...newUpdates] })\r\n        this.props.onEditTask(this.state)\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: !this.state.isStatusShown })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: !this.state.isUsersShown })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: !this.state.isUpdatesShown })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: !this.state.isPriorityShown })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: !this.state.isTagsShown })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = async (memberId) => {\r\n        await this.setState({ members: this.state.members.filter(member => member._id !== memberId) })\r\n        this.props.onEditTask(this.state)\r\n    }\r\n\r\n    onAddUserToTask = async (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        await this.setState({ members: [...this.state.members, newUser] })\r\n        this.props.onEditTask(this.state)\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const elTaskName = this.state.name;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n        console.log(this.state);\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                    <Updates loggedUser={this.props.loggedUser}\r\n                        updates={this.state.updates} uploadImg={this.uploadImg} sendNote={this.sendNote}\r\n                    />\r\n                </div>\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={this.state.id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={this.props.task.id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Delete Task\" arrow>\r\n                                    <div className='icon-container'>\r\n                                        <RiDeleteBack2Line className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(this.state.id) }} />\r\n                                    </div>\r\n                                </Tooltip>\r\n                                <h2>\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"cursor-initial content-editable\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={elTaskName} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleNameChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditTask(this.state)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditTask(this.state)\r\n                                                // this.ChangeEditState()\r\n                                            }\r\n                                        }}\r\n                                        />\r\n                                </h2>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n\r\n                                <div>\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative\"><BsChatDots />\r\n                                        {(this.state.updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{this.state.updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Members members={this.state.members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={this.state.status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={this.state.dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={this.state.priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                <Tags handleChange={this.handleChange} onEditTask={this.props.onEditTask} tags={this.state.tags} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        this.setState({ ...this.state, ...this.props.group })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = async (color) => {\r\n        const newGroup = {\r\n            ...this.props.group,\r\n            color\r\n        }\r\n        try {\r\n            await this.props.onEditGroup(newGroup, color, this.state.color)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n\r\n        return (\r\n            <Draggable draggableId={this.props.group.id} index={this.props.index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={this.props.group.id} className=\"group padding-y-45\"\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: this.props.group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(this.props.group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n                                <h1 style={{ color: this.props.group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(this.state, this.state.name, name)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditTask(this.state)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\">\r\n\r\n                                <h3>Updates</h3>\r\n                                <h3>Members</h3>\r\n                                <h3>Status</h3>\r\n                                <h3>Due-Date</h3>\r\n                                <h3>Priority</h3>\r\n                                <h3>Tags</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={this.props.group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {this.props.group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={this.props.group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(this.props.group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport socketService from '../services/socketService';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = async (boardName, boardDescription) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (boardName === board.name && boardDescription === board.description) return;\r\n        this.props.updateBoard({ ...board, name: boardName, description: boardDescription })\r\n        await this.props.showSnackbar('Updated board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                console.log('TASK?', task)\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase()) ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            await this.props.addGroup(board);\r\n            this.props.clearFilter();\r\n            await this.props.showSnackbar('Added group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            await this.props.removeGroup(groupId, board)\r\n            await this.props.showSnackbar('Removed group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (group, changedValue, originalValue) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (changedValue === originalValue) return // No changes were made\r\n        try {\r\n            await this.props.editGroup(group, board)\r\n            await this.props.showSnackbar('Updated group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            await this.props.removeTask(taskId, board)\r\n            await this.props.showSnackbar('Removed task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            await this.props.addTask(groupId, taskName, board)\r\n            this.props.clearFilter()\r\n            this.props.showSnackbar('Added task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditTask = async (task) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            await this.props.editTask(task, board)\r\n            await this.props.showSnackbar('Updated task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    await this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    await this.props.updateBoard(board)\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        console.log(this.props.boards);\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        const { users, filterBy } = this.props;\r\n        if (!board) return <h1>Loading..</h1>\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        board.members = users\r\n        return (\r\n            <section className=\"board\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"board-container\">\r\n                    <BoardHeader board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} />\r\n                    <div className=\"groups-container padding-x-30\">\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup} onChangeGroupColor={this.onChangeGroupColor} group={group} users={users} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport {signup, guestLogin} from '../store/actions/userActions.js'\r\n\r\nimport {loadBoards} from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount(){\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, {resetForm}) => {\r\n        resetForm();\r\n        const {username, password, email, fullName} = values;\r\n        try{\r\n            await this.props.signup({username, password, email, fullName});\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        }catch(err){\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () =>{\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\"type=\"text\" name=\"fullName\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport {userService} from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() { \r\n        this.props.loadBoards();\r\n        const user = await userService.getUserById(this.props.match.params.id)\r\n        this.setState({ user: { ...user} })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev)\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        const { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        const { loggedUser} = this.props\r\n\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container padding-x-15 padding-y-15\">\r\n\r\n                                <div className=\"user-modal-col align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-col\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" action=\"\">\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: '',\r\n        isOrderReversed: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = -5) {\r\n        const tasks = [];\r\n        const { boards } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    const now = Date.now();\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    return moment(task.dueDate).isBefore(moment(now).add(maxDaysLeft, 'days'))\r\n                        && moment(now).isAfter(moment(task.dueDate).add(minDaysLeft, 'days'))\r\n                }));\r\n            })\r\n        })\r\n        tasks.sort((task1, task2) => {\r\n            const res = this.state.isOrderReversed ? -1 : 1;\r\n            if (task1.dueDate < task2.dueDate) return -res;\r\n            if (task1.dueDate > task2.dueDate) return res;\r\n            return 0;\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n    getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment(Date.now()).add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('dddd')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    reverseOrder = () => {\r\n        this.setState({ isOrderReversed: !this.state.isOrderReversed })\r\n    }\r\n\r\n    moveToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    render() {\r\n        let upcomingTasks = this.getUpcomingTasks(7);\r\n        const { searchVal, isOrderReversed } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        if (searchVal) upcomingTasks = upcomingTasks.filter(task => task.name.toLowerCase().includes(searchVal.toLocaleLowerCase()))\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>Welcome to My Week</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-container flex space-between align-center\">\r\n                        <h2>Upcoming:</h2>\r\n                        <input onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                        {isOrderReversed ?\r\n                            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Order by date\" arrow>\r\n                                <div><FaArrowUp size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            </Tooltip> :\r\n                            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Order by date\" arrow>\r\n                                <div><FaArrowDown size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            </Tooltip>\r\n                        }\r\n                    </div>\r\n                    {upcomingTasks.length ?\r\n                        <section className=\"upcoming-tasks-container\">\r\n\r\n                            <div className=\"upcoming-tasks\">\r\n                                {upcomingTasks.map(task => <div\r\n                                    key={task.id}\r\n                                    className=\"task-preview space-between align-center padding-x-15\">\r\n                                    <div>\r\n                                        <h2>{task.name}</h2>\r\n                                        <p className=\"task-location\">Board: <span onClick={() => this.props.history.push(`/board/${task.boardId}`)}>{task.boardName}</span></p>\r\n                                    </div>\r\n                                    <div className={`label-box ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div>\r\n                                    <div className=\"user-img-container flex justify-center align-center\">\r\n                                        {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => this.moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} />:\r\n                                        <div onClick={() => this.moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                                    </div>\r\n                                    <h2>{this.getDaysFromNow(task.dueDate)}</h2>\r\n                                </div>)}\r\n                            </div>\r\n                        </section> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(withRouter(_MyWeek));","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board=> board._id===action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {\r\n        _id: \"5f687cfa6be1584574513e59\",\r\n        username: 'frize',\r\n        fullName: 'Roei Arazi',\r\n        password: '3333',\r\n        email: 'frize@gmail.com',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [\r\n            { createdAt: Date.now(), isRead: false, content: \"notification liam\", byUser: { _id: 'asfasdfq12d1wd', fullName: 'Roei Arazi', imgUrl: 'https://via.placeholder.com/100' } },\r\n            { createdAt: Date.now(), isRead: false, content: \"notification doll\", byUser: { _id: 'asfasdfq12d1wd', fullName: 'Roei Arazi', imgUrl: 'https://via.placeholder.com/100' } }\r\n        ],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124'\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}