{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","services/userService.js","store/actions/userActions.js","pages/Home.jsx","store/actions/systemActions.js","cmps/Dashboard.jsx","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Reply.jsx","cmps/task-cmps/Update.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","mobile-pages/MobileNav.jsx","pages/Board.jsx","store/actions/changesActions.js","pages/Boards.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","mobile-pages/mobActivities.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","loggedUser","group","_makeid","Date","now","groups","push","handleBoardChanges","fullName","err","removeGroup","groupId","filter","currGroup","isGroup","id","name","updateGroup","updatedGroup","desc","map","addTask","taskName","task","createdAt","members","priority","dueDate","updates","lastUpdated","isSelected","posts","tags","groupIdx","findIndex","tasks","removeTask","taskId","currTask","isTask","updateTask","updatedTask","boards","boardCreator","_id","imgUrl","newBoard","changes","changedAt","isRead","byUser","activityLog","boardToSave","socketService","length","text","possible","i","charAt","Math","floor","random","dispatch","type","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","logout","notifyUsers","getCurrUser","JSON","parse","sessionStorage","getItem","users","notifications","forEach","notification","userId","user","userCred","_handleLogin","isAdmin","birthDay","company","phoneNumber","newUser","username","password","content","clear","member","userToUpdate","find","unshift","setItem","stringify","_Home","this","video","React","createRef","props","className","to","onClick","current","play","ref","autoPlay","muted","src","alt","Component","mapDispatchToProps","Home","connect","state","boardReducer","showSnackbar","msg","dispath","hideSnackbar","Dashboard","d3","append","_Boardbar","selectedBoardId","isSnackbarOpen","isShown","searchVal","onAddBoard","notif","onBoardRemove","match","history","params","displayPopup","idx","onToggleShown","toggleBoardbar","setState","handleSearchChange","ev","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","setTimeout","filteredBoards","style","color","location","pathname","transform","onChange","placeholder","paddingLeft","key","onMoveToBoard","stopPropagation","Boardbar","userReducer","withRouter","_Activities","isOrderReversed","isFilterOpen","filterBy","isActivitiesShown","isActivitiesNotReadShown","handleChange","toggleFilter","moveToProfile","toggleActivities","toggleActivitiesNotRead","split","firstName","lastName","initials","toUpperCase","dates","reduce","acc","activity","moment","format","Object","keys","activities","date","activitiesNotRead","getActivityDates","getActivityMembers","applyFilter","onToggleActivities","boardName","Fade","in","onSetFilter","onClearLog","getInitials","setFilter","Filter","filterKey","filterValue","formatted","getBoardDates","isFiltersOpen","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isUsersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onEditBoard","onToggleFilters","handleMenuOpen","currentTarget","handleMenuClose","onToggleUsers","onRemoveMemberFromBoard","onAddUserToBoard","goToUserProfile","editableName","editableDescription","searchInput","prevProps","prevState","firstNameChar","lastNameChar","isFiltering","values","some","usersToAdd","activitiesRead","onFocus","innerRef","html","disabled","onBlur","onKeyDown","blur","_getMemeberInitials","onAddGroup","focus","input","Activities","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","Fragment","fromNow","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","onLogout","Navbar","Members","openModal","isUsersShown","onRemoveMemberFromTask","onAddUserToTask","Status","isStatusShown","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","UPLOAD_URL","formData","FormData","fetch","body","json","Reply","txt","isEditMode","isOptionsModal","toggleEditMode","replyTxt","updateReply","newReply","newReplies","update","replies","reply","updateNote","removeReply","replyId","splice","toggleOptionsModal","Update","onReply","newUpdate","every","letter","makeid","userName","removeUpdate","updateId","sendNote","onToggleEditUpdate","editUpdate","newUpdates","borderTop","Updates","isLoading","imageUploaded","files","preventDefault","newNotes","closeModal","onSubmit","data-title","htmlFor","class","hidden","Tags","tag","onAddTag","tagName","elTagInput","_getRandomColor","onEditTags","onRemoveTag","tagToRemove","onEditTag","elTag","Truncate","lines","ellipsis","width","isTagsShown","_Task","isUpdatesShown","isImageModalShown","reloadProps","handleNameChange","valueOf","onEditTask","removedMember","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","onToggleImageModal","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","onEditGroup","elInputAdd","property","taskCount","percent","round","toFixed","convertToBar","window","innerWidth","Menu","role","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","MobileNav","isMenuShown","toggleMenuModal","closeMenuModal","_Board","filteredBoard","filterTasks","_getCurrBoard","clearFilter","changedValue","originalValue","editGroup","prevTask","lodash","isEqual","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","groupStart","groupEnd","newTasks","newTask","newGroup","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","innerwidth","height","groupChanges","Board","_Boards","goToBoard","Boards","_Login","onLogin","resetForm","onGuestLogin","responseFacebook","email","picture","facebookId","userID","initialValues","validate","formValues","errors","autoComplete","component","appId","fields","cssClass","callback","href","Login","_Signup","onSignup","confirm","test","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","UpcomingTasks","moveToUserProfile","header","groupName","isAfter","add","endOf","isBefore","_MyWeek","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","applySearch","MyWeek","_mobActivities","getBoardById","path","App","routes","route","exact","hostname","initialState","userProfile","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4abd27e1.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask,\r\n    handleBoardChanges\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard(loggedUser) {\r\n    const board = {\r\n        boardCreator: {\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": Date.now(),\r\n        \"desc\": 'Enter description here',\r\n        \"members\": [{\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": Date.now(),\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": Date.now(),\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": []\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board, loggedUser) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": Date.now(),\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": Date.now(),\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": Date.now(),\r\n            \"updates\": [],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        const desc = `${loggedUser.fullName} Added a new group.`\r\n        return handleBoardChanges(desc, loggedUser, board)\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board, loggedUser) {\r\n    let group = null;\r\n    board.groups = board.groups.filter(currGroup => {\r\n        const isGroup = currGroup.id === groupId;\r\n        if (isGroup) group = currGroup;\r\n        return !isGroup;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed group: ${group.name}`\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction removeTask(taskId, board, group, loggedUser) {\r\n    let task = null\r\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    board.groups[groupIdx].tasks = board.groups[groupIdx].tasks.filter(currTask => {\r\n        const isTask = currTask.id === taskId\r\n        if (isTask) task = currTask;\r\n        return !isTask;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed task: ${task.name} from group ${group.name}`;\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction addTask(groupId, taskName, board, loggedUser) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: Date.now(),\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n    const desc = `${loggedUser.fullName} Added a new task: ${taskName} to group ${board.groups[groupIdx].name}`\r\n    board.groups[groupIdx].tasks.push(task)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction updateTask(updatedTask, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\n\r\nfunction handleBoardChanges(desc, loggedUser, board) {\r\n    if (!desc) return updateBoard(board)\r\n    const changes = {\r\n        id: _makeid(),\r\n        changedAt: Date.now(),\r\n        isRead: false,\r\n        desc,\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n    }\r\n    const updatedBoard = { ...board, activityLog: [changes, ...board.activityLog,] }\r\n    return updateBoard(updatedBoard)\r\n}\r\n\r\n\r\nfunction updateBoard(boardToSave) {\r\n    socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave, desc, loggedUser) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const board = boardService.handleBoardChanges(desc, loggedUser, boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard(loggedUser);\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board, desc, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board, group, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board, group, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board, desc, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import httpService from './httpService';\r\nimport socketService from './socketService'\r\n\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser,\r\n    logout,\r\n    notifyUsers,\r\n    getCurrUser\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    updateUser(loggedUser)\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        const user = await httpService.post('auth/login', userCred);\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return _handleLogin(newUser)\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    try {\r\n        const user = await login({ username: 'guest', password: '123456' });\r\n        user.notifications = [{\r\n            byUser: {\r\n                _id: '5f6c5f7e27ed4400175ce1ac',\r\n                imgUrl: 'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600938007/ybmioy3x7smnwhptho3x.jpg',\r\n                fullName: 'Liam Zety'\r\n            },\r\n            content: 'Liam Zety Removed a you from the board Caljul20',\r\n            createdAt: Date.now() - 1000 * 60 * 2\r\n        },\r\n        {\r\n            byUser: {\r\n                _id: '5f6c5ef927ed4400175ce1a7',\r\n                imgUrl:'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937821/pd8tx7oddwp2wghsp9qt.jpg',\r\n                fullName: 'Osher Kabeda'\r\n            },\r\n            content: 'board: Osher Kabeda Tasked you to task - Learn the ropes',\r\n            createdAt: Date.now() - 1000 * 60 * 3\r\n        },\r\n        {\r\n            byUser: {\r\n                _id: '5f6c5f0227ed4400175ce1aa',\r\n                imgUrl: 'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937750/ztfvuok0olgwarb9kabo.jpg',\r\n                fullName: 'Roei Arazi'\r\n            },\r\n            content: 'board: Roei Arazi Added you to the board - Caljul20',\r\n            createdAt: Date.now() - 1000 * 60 * 4\r\n        }\r\n        ]\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\n\r\nasync function updateUser(user) {\r\n    httpService.put(`user/${user._id}`, user)\r\n    return user\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction getCurrUser(){\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n    return user;\r\n}\r\n\r\nasync function notifyUsers(content, members, loggedUser) {\r\n    const users = await loadUsers();\r\n    if (members === 'add') members = [...users]\r\n    const notification = {\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n        content,\r\n        createdAt: Date.now()\r\n    }\r\n    members.forEach(member => {\r\n        if (member._id === loggedUser._id) return;\r\n        let userToUpdate = users.find(user => user._id === member._id);\r\n        if (!userToUpdate) {\r\n            console.log('can\\'t updated user:', userToUpdate);\r\n            return;\r\n        }\r\n        userToUpdate.notifications.unshift(notification);\r\n        userService.updateUser(userToUpdate);\r\n        socketService.emit('send-notif', { userId: member._id, notification });\r\n    })\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        try {\r\n            userService.logout();\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t logout');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { guestLogin } from '../store/actions/userActions'\r\n\r\nclass _Home extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.video = React.createRef();\r\n\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return (\r\n            <div className=\"loader-container flex justify-center align-center\">\r\n                <img src=\"loading.gif\" alt=\"\" />\r\n            </div>\r\n        )\r\n        return (\r\n            <section className=\"home flex column\">\r\n                <main className=\"home-main flex align-center  \">\r\n                    <div className=\"home-login-sign-cta absolute\">\r\n                        <NavLink to=\"/login\">\r\n                            <button>Login</button>\r\n                        </NavLink>\r\n                        <NavLink to=\"/signup\">\r\n                            <button>Sign-up</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-left flex align-center justify-center\">\r\n\r\n                        <video onClick={() => this.video.current.play()} ref={this.video} autoPlay muted src=\"taskus-home-video.mp4\"></video>\r\n                    </div>\r\n                    <div className=\"col-right flex align-center justify-center padding-x-30  column\">\r\n                        <h1>Join the future.</h1>\r\n\r\n                        <p>The next step in multi-planning and productivity! <br />\r\n                            <span>Task-us </span> will help you keep track of hundreds of tasks. <br />\r\n                            An efficient way to manage your co-workers / employees. <br />\r\n                            Half the hassle and twice the fun.\r\n                        </p>\r\n\r\n                        <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                            <button onClick={this.props.guestLogin} className=\"guest-button \">Try As a Guest!</button>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </main>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    guestLogin\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n    // setTimeout(dispatch =>{\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, {Component} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nexport class Dashboard extends Component{\r\n\r\n    componentDidMount(){\r\n        this.ref = React.createRef();\r\n        d3.select(this.ref.current)\r\n        .append('p')\r\n        .text('I\\'m here!')\r\n    }\r\n\r\n    render(){\r\n        return <div ref={this.ref}>\r\n\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate, loadBoards } from '../store/actions/boardActions.js';\r\nimport { updateUser } from '../store/actions/userActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\nimport { userService } from '../services/userService.js';\r\nimport { AiOutlineRight } from 'react-icons/ai';\r\nimport { Dashboard } from './Dashboard'\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        socketService.on('reloadBoards', () => {\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [notification, ...this.props.loggedUser.notifications] })\r\n        })\r\n\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('reloadBoards')\r\n        socketService.off('accept-notif')\r\n    }\r\n\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    onAddBoard = async () => {\r\n        const { loggedUser } = this.props;\r\n        await this.props.addBoard(this.props.loggedUser)\r\n        const notif = `${loggedUser.fullName} added a new board`\r\n        userService.notifyUsers(notif, 'add', loggedUser)\r\n        socketService.emit('add-delete-board')\r\n    }\r\n\r\n    onBoardRemove = async (boardId) => {\r\n        const { boards, match, history, removeBoard, loggedUser } = this.props\r\n        const board = boards.find(board => board._id === boardId);\r\n        const notif = `${loggedUser.fullName} deleted ${board.name}`;\r\n        userService.notifyUsers(notif, board.members, loggedUser)\r\n        const { id } = match.params;\r\n        if (boards.length === 1) {\r\n            return;\r\n        }\r\n        await removeBoard(boardId);\r\n        socketService.emit('add-delete-board')\r\n        this.displayPopup('Removed board.');\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                <div onClick={this.onToggleShown} className=\"board-bar-toggle-container\">\r\n                    <AiOutlineRight style={{ color: this.props.location.pathname.includes('/myweek') && '#151515', transform: isShown && 'rotate(180deg)' }}\r\n                        className=\"board-bar-toggle\" />\r\n                </div>\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            style={{ paddingLeft: this.props.loggedUser._id === board.boardCreator._id ? '' : '25px' }}\r\n                            className=\"flex align-center cursor-pointer\"\r\n                            key={idx}\r\n                            onClick={() => this.onMoveToBoard(board._id)}\r\n                        >\r\n                            {\r\n                                this.props.loggedUser._id === board.boardCreator._id &&\r\n                                <MdDelete onClick={ev => {\r\n                                    ev.stopPropagation()\r\n                                    this.onBoardRemove(board._id)\r\n                                }\r\n                                } />\r\n\r\n                            }\r\n\r\n                            <h5 style={{ color: this.props.loggedUser._id === board.boardCreator._id ? \"#0085ff\" : \"#333333\" }}>\r\n                                {board.name}\r\n                            </h5>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Dashboard />\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate,\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { IoIosArrowDropdown } from 'react-icons/io';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass _Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n        isActivitiesShown: true,\r\n        isActivitiesNotReadShown: true\r\n    }\r\n\r\n    get activities() {\r\n        const { activityLog } = this.props;\r\n        const {_id} = this.props.loggedUser;\r\n        return [activityLog.filter(activity => activity[_id]), activityLog.filter(activity => !activity[_id])]\r\n    }\r\n\r\n    getInitials(fullName) {\r\n        const [firstName, lastName] = fullName.split(' ');\r\n        let initials = firstName.charAt(0).toUpperCase();\r\n        if (lastName) initials += lastName.charAt(0).toUpperCase();\r\n        return initials;\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    moveToProfile = (userId) =>{\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.props.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.props.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    toggleActivities = () => {\r\n        this.setState({ isActivitiesShown: !this.state.isActivitiesShown })\r\n\r\n    }\r\n    toggleActivitiesNotRead = () => {\r\n        this.setState({ isActivitiesNotReadShown: !this.state.isActivitiesNotReadShown })\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.activityLog) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {members.map((member, idx) => <button\r\n                                                        className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.props.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n\r\n                <div className=\"all-activities-container\">\r\n                    {/* Activities which are not read: */}\r\n                    <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            New Activities ({activitiesNotRead.length})\r\n                         <IoIosArrowDropdown className={this.state.isActivitiesNotReadShown ? \" toggle-btn rotate0\" : \" toggle-btn rotate90\"} onClick={this.toggleActivitiesNotRead} />\r\n                        </h1>\r\n                        {this.state.isActivitiesNotReadShown && activitiesNotRead.length !== 0 && activitiesNotRead.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                    <div className=\"user-img-container flex align-center\">\r\n                                        <div className=\"date-container\">\r\n                                            <p className=\"date-created\">\r\n                                                {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                            </p>\r\n                                        </div>\r\n                                        {activity.byUser.imgUrl ? <img onClick={() => this.moveToProfile(activity.byUser._id)} src={activity.byUser.imgUrl} alt=\"\" />:\r\n                                        <div onClick={() => this.moveToProfile(activity.byUser._id)} className=\"member-letter flex align-center justify-center\">{this.getInitials(activity.byUser.fullName)}</div>}\r\n                                        <h2 onClick={() => this.moveToProfile(activity.byUser._id)}>{activity.byUser.fullName}</h2>\r\n                                    </div>\r\n                                    <div className=\"activity-desc-container flex align-center\">\r\n                                        <p>\r\n                                            {activity.desc}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {activitiesNotRead.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No new board activities!</h3>\r\n                        }\r\n                    </div>\r\n                    {/* Activities which are already read */}\r\n                    <div className=\"activity-list column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            Activities Read ({activities.length})\r\n                        <IoIosArrowDropdown onClick={this.toggleActivities} className={this.state.isActivitiesShown ? \"toggle-btn rotate0\" : \"toggle-btn rotate90\"} />\r\n                        </h1>\r\n                        {\r\n                            this.state.isActivitiesShown && activities.length !== 0 && activities.map((activity, idx) => {\r\n                                return (\r\n                                    <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            {activity.byUser.imgUrl ? <img onClick={() => this.moveToProfile(activity.byUser._id)} src={activity.byUser.imgUrl} alt=\"\" />:\r\n                                        <div onClick={() => this.moveToProfile(activity.byUser._id)} className=\"member-letter flex align-center justify-center\">{this.getInitials(activity.byUser.fullName)}</div>}\r\n                                            <h2 onClick={() => this.moveToProfile(activity.byUser._id)}>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {activities.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No read board activities!</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(_Activities)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={props.isFiltersOpen}>\r\n\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member, idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\nimport { FiMinus } from 'react-icons/fi';\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        isUsersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ board: this.props.board })\r\n        })\r\n        this.setState({ board: this.props.board, _id: this.props.board._id })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ board: this.props.board })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n    }\r\n    handleChangeName = (ev) => {\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        let board = this.props.board;\r\n        const{_id} = this.props.loggedUser;\r\n\r\n        if (this.state.isActivitiesOpen) {\r\n            board = {\r\n                ...board,\r\n                activityLog: board.activityLog.map(activity => {\r\n                    activity[_id] = true\r\n                    return activity\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n        this.props.onEditBoard(board)\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    onToggleUsers = () => {\r\n        this.setState({ isUsersOpen: !this.state.isUsersOpen })\r\n    }\r\n\r\n    onRemoveMemberFromBoard = (memberId) => {\r\n        const user = this.state.board.members.find(member => member._id === memberId)\r\n        const desc = `${this.props.loggedUser.fullName} removed ${user.fullName} from ${this.state.board.name}`\r\n        this.setState({ board: { ...this.state.board, members: this.state.board.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditBoard(this.state.board, desc)\r\n        })\r\n    }\r\n    onAddUserToBoard = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        const desc = `${this.props.loggedUser.fullName} invited ${newUser.fullName} to ${this.state.board.name}`\r\n\r\n        this.setState({ board: { ...this.state.board, members: [...this.state.board.members, newUser] } }, () => {\r\n            this.props.onEditBoard(this.state.board, desc)\r\n        })\r\n    }\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.onEditBoard(board)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n\r\n    render() {\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        const { members } = this.state.board\r\n        const { users, loggedUser, filterBy } = this.props;\r\n        const isFiltering = Object.values(filterBy).some(value => value)\r\n        const usersToAdd = users.filter(user => !members.some(member => member._id === user._id))\r\n        const activitiesNotRead = this.props.board.activityLog.filter(activity => !activity[loggedUser._id])\r\n        const activitiesRead = this.props.board.activityLog.filter(activity => activity[loggedUser._id])\r\n\r\n\r\n        return (\r\n            <section className=\"board-header flex column padding-x-30\">\r\n                <div className=\"board-header-header flex space-between grow align-center\">\r\n                    <h1 className=\"flex align-center\">\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.board.name}\r\n                            disabled={false}\r\n                            onChange={this.handleChangeName}\r\n                            onBlur={() => {\r\n                                const desc = `${loggedUser.fullName} Changed the board title from ${this.props.board.name} to ${this.state.board.name}`\r\n                                const board = {\r\n                                    ...this.props.board,\r\n                                    name: this.state.board.name\r\n                                }\r\n\r\n                                this.props.onEditBoard(board, desc)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <div className=\"board-header-right relative flex align-center\">\r\n                        <div className=\"board-users flex justify-center\" onClick={this.onToggleUsers}>\r\n                            {members.length === 0 && <div className=\"no-members-container relative\">\r\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/847/847969.svg\" alt=\"\" />\r\n                                <FiPlus className=\"no-members-icon-plus\" />\r\n                            </div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    {\r\n                                        member.imgUrl ? <img src={member.imgUrl} alt=\"\" />\r\n                                            :\r\n                                            <div className=\"member-letter\">\r\n                                                {this._getMemeberInitials(member)[0]}\r\n                                                {this._getMemeberInitials(member)[1]}\r\n                                            </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        {this.state.isUsersOpen &&\r\n                            <div className=\"users-modal absolute\">\r\n                                <div className=\"board-users-box\">\r\n                                    <h3>Board Members</h3>\r\n                                    {members.map((member, idx) =>\r\n                                        <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(member._id)}>\r\n                                                {member.imgUrl\r\n                                                    ? <img src={member.imgUrl} alt=\"profile\" />\r\n                                                    : <div className=\"member-letter\">\r\n                                                        {this._getMemeberInitials(member)[0]}\r\n                                                        {this._getMemeberInitials(member)[1]}\r\n                                                    </div>}\r\n                                                <p className=\"member-name\">{member.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser._id === \"5f68936cf878123b2cd354436ce96d\" ||\r\n                                                    this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiMinus onClick={() => this.onRemoveMemberFromBoard(member._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"site-users-box\">\r\n                                    <h3>Site Users</h3>\r\n                                    {usersToAdd.map(user => {\r\n                                        return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex  align-center\" onClick={() => this.goToUserProfile(user._id)}>\r\n                                                {\r\n                                                    user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" />\r\n                                                        : <div className=\"member-letter\">\r\n                                                            {this._getMemeberInitials(user)[0]}\r\n                                                            {this._getMemeberInitials(user)[1]}\r\n                                                        </div>\r\n                                                }\r\n                                                <p className=\"member-name\">{user.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser._id === \"5f68936cf878123b2cd354436ce96d\" ||\r\n                                                    this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiPlus onClick={() => this.onAddUserToBoard(user._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    })}\r\n                                </div>\r\n\r\n                            </div>}\r\n                        <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                            <h2>\r\n                                Activities {\" \"}\r\n                                <span style={{ color: activitiesNotRead.length !== 0 ? '#0085ff' : '' }}>\r\n                                    {activitiesNotRead.length}\r\n                                </span> {\" \"} / {activitiesRead.length + activitiesNotRead.length}\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"board-header-footer flex align-center space-between\">\r\n                    <h3>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.board.desc} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                const desc = `${loggedUser.fullName} Changed ${this.state.board.name} description to ${this.state.board.desc}`\r\n\r\n                                const board = {\r\n                                    ...this.props.board,\r\n                                    desc: this.state.board.desc\r\n                                }\r\n\r\n                                this.props.onEditBoard(board, desc)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h3>\r\n                    <div className=\"header-options flex\">\r\n                        <button className=\"new-group-btn\" onClick={this.props.onAddGroup}>New Group</button>\r\n                        <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                            <input ref={(input) => { this.searchInput = input; }} placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                            <GoSearch />\r\n                        </div>\r\n                        <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }}\r\n\r\n                            className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                            {isFiltering && <div className=\"filter-active-indicator\"></div>}\r\n                            <VscListFilter className={isFiltering ? 'filter-active' : ''} />\r\n                            <h2 className={isFiltering ? 'filter-active' : ''}>Filter</h2>\r\n\r\n                            <Filter isFiltersOpen={this.state.isFiltersOpen} board={this.props.board} />\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                        <Activities loggedUser={loggedUser} onClearLog={this.onClearLog} onToggleActivities={this.onToggleActivities}\r\n                            boardName={this.state.board.name} activityLog={this.props.board.activityLog} />\r\n                    </div>\r\n                    {\r\n                        this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                    }\r\n                    {\r\n                        this.state.isUsersOpen && <div onClick={this.onToggleUsers} className='modal-screen-wrapper'></div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div onClick={() => this.props.goToUserProfile(notification.byUser._id)} className=\"user-img-container cursor-pointer\">\r\n                                                {\r\n                                                    notification.byUser.imgUrl ?\r\n                                                        <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                                        :\r\n                                                        <div className=\"member-letter\" >\r\n                                                            {this._getMemeberInitials(notification.byUser)[0]}\r\n                                                            {this._getMemeberInitials(notification.byUser)[1]}\r\n                                                        </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex column\">\r\n                                                <h2 className=\"cursor-pointer\" onClick={() => this.props.goToUserProfile(notification.byUser._id)}>\r\n                                                    {notification.byUser.fullName}\r\n                                                </h2>\r\n                                                <p>\r\n                                                    {notification.content}\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { FaRegUser } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { BiLogOut } from 'react-icons/bi'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications, logout } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    goToUserProfile = (id) => {\r\n        this.props.history.push(`/user/${id}`)\r\n    }\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\"> \r\n                    <NavLink to=\"/\">\r\n                        <img className=\"logo-navbar\" src=\"taskus-nav.png\" alt=\"\" />\r\n                    </NavLink>\r\n\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container cursor-pointer\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <div className=\"notifications-counter\">\r\n                                    <p >\r\n                                        {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                    </p>\r\n                                </div>\r\n\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications goToUserProfile={this.goToUserProfile} removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to={loggedUser ? \"/myweek\" : '/login'}>\r\n                        <li className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container\"><FaRegUser /></li>\r\n                    </NavLink>\r\n                    <li className=\"icon-container\" ><BiLogOut onClick={this.onLogout} /></li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications,\r\n    logout\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar));","import { Fade } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { FiMinus } from 'react-icons/fi'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n\r\n\r\n    function _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n\r\n\r\n    }\r\n\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? <div className=\"member-img-container flex relative \">\r\n                {props.members.map(member => member.imgUrl ?\r\n                    <img key={member._id} className=\"member-img\" src={member.imgUrl} alt=\"\" />\r\n                    :\r\n                    <div key={member._id} className=\"member-letter \">\r\n                        {_getMemeberInitials(member)[0]}\r\n                        {_getMemeberInitials(member)[1]}\r\n                    </div>\r\n\r\n\r\n                )\r\n                }\r\n                <FiPlus className=\"no-members-icon-plus absolute\" />\r\n            </div>\r\n                :\r\n                <div className=\"no-members-container\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/847/847969.svg\" alt=\"\" className=\"no-members-icon\" />\r\n                    <FiPlus className=\"no-members-icon-plus\" />\r\n                </div>}\r\n\r\n            <Fade in={props.isUsersShown} >\r\n                <div className=\"users-modal modal-fade-in absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map((member, idx) =>\r\n                            <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <FiMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map((user, idx) => {\r\n                            return <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">\r\n                                            {_getMemeberInitials(user)[0]}\r\n                                            {_getMemeberInitials(user)[1]}\r\n                                        </div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n            </Fade>\r\n\r\n        </div>\r\n    )\r\n}","import { Fade } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport function Status(props) {\r\n\r\n    return (\r\n\r\n        <div className=\"label-container relative flex align-center \">\r\n\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                    <p>{props.status}</p>\r\n                </div>\r\n                <Fade in={props.isStatusShown} >\r\n                    <div className=\"label-list absolute flex column align-center modal-fade-in\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Fade } from '@material-ui/core';\r\nimport React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props) {\r\n    return (\r\n        <label className=\"date-picker\">\r\n            <Fade >\r\n                <DatePicker\r\n                    selected={props.dueDate}\r\n                    onChange={props.handleDateChange}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n            </Fade >\r\n        </label>\r\n    )\r\n}","import { Fade } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport function Priority(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                    <p>{props.priority}</p>\r\n                </div>\r\n                <Fade in={props.isPriorityShown} >\r\n                    <div className=\"label-list absolute flex column align-center modal-fade-in\">\r\n                        <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange(\"Low\")}>\r\n                            <p>Low</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                            <p>Medium</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange(\"High\")}>\r\n                            <p>High</p>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(img) {\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\n\r\n\r\nexport class Reply extends React.Component {\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n\r\n    toggleEditMode = (replyTxt) => {\r\n        this.setState({ isEditMode: !this.state.isEditMode, txt: replyTxt })\r\n    }\r\n\r\n    updateReply = (newReply) => {\r\n        if (newReply.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newReply.txt = this.state.txt\r\n        const newReplies = this.props.update.replies.map(reply => {\r\n            return reply.id === newReply.id ? newReply : reply\r\n        })\r\n\r\n        const update = { ...this.props.update, replies: newReplies }\r\n        this.props.updateNote(update)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    removeReply = (replyId) => {\r\n        const idx = this.props.update.replies.findIndex(reply => reply.id === replyId)\r\n        const newUpdate = { ...this.props.update }\r\n        const update = newUpdate.replies.splice(idx, 1)\r\n        this.props.updateNote(update)\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { reply, idx } = this.props\r\n        return (\r\n\r\n            <div key={idx} className=\"reply-box flex column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n\r\n                <div className=\"reply-content flex align-center\">\r\n                    <img src={reply.member.imgUrl} alt=\"\" />\r\n                    <p className=\"reply-name\">{reply.member.fullName}</p>\r\n                    {!this.state.isEditMode ?\r\n                        <p className=\"reply-text\">{reply.txt}</p>\r\n                        :\r\n                        <div className=\"edit-box flex\">\r\n                            <textarea name=\"txt\" onChange={this.handleChange} value={this.state.txt}></textarea>\r\n                            <AiOutlineSend className=\"update-reply-btn\" onClick={() => this.updateReply(reply)} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeReply(reply.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.toggleEditMode(reply.txt)\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\nimport { Reply } from './Reply';\r\n\r\nexport class Update extends React.Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n\r\n\r\n    onReply = (newUpdate) => {\r\n        if (!this.state.txt || this.state.txt.split('').every(letter => letter === ' ')) return\r\n        const newReply = {\r\n            txt: this.state.txt,\r\n            createdAt: Date.now(),\r\n            id: this.props.makeid(),\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const update = this.props.updates.find(update => update.id === newUpdate.id)\r\n        update.replies = [...update.replies, newReply]\r\n        this.props.updateNote(update)\r\n\r\n        this.setState({ txt: '' })\r\n    }\r\n\r\n    removeUpdate = (updateId) => {\r\n        const updates = this.props.updates.filter(update => update.id !== updateId)\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    onToggleEditUpdate = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    editUpdate = (newUpdate) => {\r\n        if (newUpdate.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newUpdate.txt = this.state.txt\r\n        const newUpdates = this.props.updates.map(update => {\r\n            return update.id === newUpdate.id ? newUpdate : update\r\n        })\r\n\r\n        this.props.sendNote(newUpdates)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { update, idx } = this.props\r\n\r\n        return (\r\n            <div key={idx} className=\"update-box flex wrap column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeUpdate(update.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.onToggleEditUpdate()\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n                {/* <button className=\"remove-update-btn\" onClick={() => this.removeUpdate(update.id)}>X</button> */}\r\n                <div className=\"update-box-header flex align-center\">\r\n                    <img src={update.member.imgUrl} alt=\"\" />\r\n                    <p className=\"member-name\">{update.member.fullName}</p>\r\n                </div>\r\n\r\n\r\n                {this.state.isEditMode ?\r\n                    <div className=\"update-box-edit flex column relative\">\r\n                        <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                        <AiOutlineSend className=\"submit-edit-btn absolute\" onClick={() => this.editUpdate(update)} />\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                    :\r\n                    <div className=\"update-box-main flex column\">\r\n                        {update.txt && <p className=\"update-text\">{update.txt}</p>}\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                }\r\n                {/* <p className=\"edit-update-btn\" onClick={this.onToggleEditUpdate}>Edit</p> */}\r\n                <div className=\"update-box-footer flex column\">\r\n\r\n                    {update.replies &&\r\n                        <div className=\"replies-box flex column\" style={{ borderTop: `${update.replies.length && '1px solid rgba(109, 109, 109, 0.35)'}` }}>\r\n                            {update.replies.map((reply, idx) =>\r\n                                <Reply key={idx} reply={reply} idx={idx} update={this.props.update}\r\n                                    updateNote={this.props.updateNote} />\r\n                            )}</div>\r\n                    }\r\n                    {!this.state.isEditMode &&\r\n                        <div className=\"reply-footer flex space-between align-center\">\r\n                            <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                            <button className=\"reply-button\" onClick={() => this.onReply(update)}>Reply</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { BiImage } from 'react-icons/bi';\r\nimport { MdDone } from 'react-icons/md';\r\n\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\nimport { Update } from './Update';\r\n\r\n\r\nfunction makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        reply: {\r\n            txt: ''\r\n        },\r\n        update: {\r\n            id: '',\r\n            txt: '',\r\n            imgUrl: '',\r\n            replies: []\r\n        },\r\n        isLoading: false,\r\n        imageUploaded: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ imageUploaded: false })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else if (ev.target.name === 'txt') {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        } else {\r\n            this.setState({ reply: { ...this.state.reply, txt: ev.target.value } })\r\n        }\r\n    }\r\n\r\n    uploadImg = async () => {\r\n        this.setState({ isLoading: true })\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        this.setState({ update: { ...this.state.update, imgUrl: res.url }, isLoading: false, imageUploaded: true })\r\n    }\r\n\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if ((!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) && !this.state.update.imgUrl) return\r\n        const newNote = {\r\n            id: makeid(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.update.txt,\r\n            imgUrl: this.state.update.imgUrl,\r\n            replies: [],\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n        this.setState({ update: { txt: '', imgUrl: '' }, imageUploaded: false })\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    updateNote = (newUpdate) => {\r\n        const newNotes = [...this.props.updates].map(update => update.id === newUpdate.id ? newUpdate : update)\r\n        this.props.sendNote(newNotes)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.updates) return <h1>Loading...</h1>;\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column\">\r\n                    <AiOutlineClose onClick={this.props.closeModal} />\r\n                    <h1>{this.props.task.name}</h1>\r\n                    <div className=\"updates-header-options flex column\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex align-center\">\r\n                            <textarea name=\"txt\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                        </form>\r\n\r\n                        <div className=\"updates-btns flex align-center space-between\">\r\n                            <div className=\"image-uploader flex\">\r\n                                <label data-title=\"Upload Image\" htmlFor={this.props.task.id}>{this.state.isLoading ? <div class=\"loadingio-spinner-spinner-gvjl1rpqs7q\"><div class=\"ldio-subadnemdcd\">\r\n                                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                                </div></div> : <BiImage />}\r\n                                </label>\r\n                                <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                                {this.state.imageUploaded && <div className=\"image-uploaded flex align-center\"><MdDone /><p> Image Ready!</p></div>}\r\n                            </div>\r\n                            {this.state.isLoading ? <p>Image is uploading..</p> : <button onClick={this.sendNote}>Send</button>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`updates-container  ${!updates.length ? \"flex justify-center align-center\" : \"\"} `}>\r\n                    {\r\n                        !updates.length ? <h1>There are no posts to show.</h1> :\r\n\r\n                            updates.map((update, idx) => <Update update={update} key={idx} idx={idx}\r\n                                updates={updates} loggedUser={this.props.loggedUser}\r\n                                sendNote={this.props.sendNote}\r\n                                updateNote={this.updateNote} makeid={makeid} />)\r\n\r\n                    }\r\n\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { BsBookmarkPlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\nimport { Fade } from '@material-ui/core';\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagName, 'addTag')\r\n    }\r\n\r\n    onRemoveTag = (id) => {\r\n        const tagToRemove = this.state.tags.find(tag => tag.id === id)\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagToRemove.txt, 'removeTag')\r\n    }\r\n    onEditTag = (idx, tagName, type) => {\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) {\r\n            return\r\n        }\r\n        this.props.onEditTags(this.state.tags, tagName, type)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return []\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>\r\n                        )\r\n\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    {idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <Fade in={this.props.isTagsShown}>\r\n                    <div className=\"label-list tags-modal absolute flex column align-center \">\r\n                        <div className=\"tag-add-container  flex justify-center align-center\">\r\n                            <BsBookmarkPlus onClick={(ev) => {\r\n                                this.elTagInput.current.value = ''\r\n                                this.onAddTag()\r\n                            }} />\r\n                            <input onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.onAddTag()\r\n                                    ev.target.value = ''\r\n                                }\r\n                            }} placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                        </div>\r\n                        <section>\r\n                            {this.state.tags.map((tag, idx) => {\r\n                                return (\r\n                                    <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                        <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n\r\n                                        <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                            ev.target.blur()\r\n                                            this.onEditTag(idx)\r\n                                        }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                }\r\n                                            }}\r\n                                            onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    reloadProps = () => {\r\n        this.setState({ task: this.props.task })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n\r\n        const prevDate = moment(this.state.task.dueDate).format('DD/MMM/YYYY')\r\n        const changedDate = moment(date).format('DD/MMM/YYYY')\r\n        if (prevDate === changedDate) return\r\n\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n\r\n            const desc = `${this.props.loggedUser.fullName} changed task ${this.state.task.name} date from ${moment(this.props.task.dueDate).format('DD/MMM/YYYY')} to ${moment(this.state.task.dueDate).format('DD/MMM/YYYY')} at group -${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n\r\n        let desc = ''\r\n\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            this.setState({ task: { ...this.state.task, status: data } }, () => {\r\n\r\n                desc = `${this.props.loggedUser.fullName} changed task: ${this.state.task.name} status from ${this.props.task.status} to ${this.state.task.status} at group - ${this.props.group.name}`\r\n\r\n                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n                if (!this.state.isUpdatesShown) this.closeModal()\r\n            })\r\n        } else {\r\n            this.setState({ task: { ...this.state.task, priority: data } }, () => {\r\n\r\n                desc = `${this.props.loggedUser.fullName} changed task: ${this.state.task.name} priority from ${this.props.task.priority} to ${this.state.task.priority} at group - ${this.props.group.name}`\r\n\r\n                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n\r\n                this.closeModal()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        let desc = ''\r\n\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n\r\n            desc = `${this.props.loggedUser.fullName} sent an update at task: ${this.props.task.name} at group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        let desc = ''\r\n        const removedMember = this.state.task.members.find(member => member._id === memberId)\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} removed ${removedMember.fullName} from ${this.state.task.name} at group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        let desc = ''\r\n\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n\r\n            desc = `${this.props.loggedUser.fullName} tasked ${newUser.fullName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onEditTags = (tags, tagName, type) => {\r\n        let desc = ''\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            if (type === 'addTag') {\r\n                desc = `${this.props.loggedUser.fullName} added tag named ${tagName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            else if (type === 'removeTag') {\r\n                desc = `${this.props.loggedUser.fullName} removed tag named ${tagName} from ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {isUpdatesShown &&\r\n                    <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                        <Updates task={this.state.task} updates={updates} members={members} priority={priority} status={status} dueDate={dueDate}\r\n                            loggedUser={this.props.loggedUser} users={this.props.users}\r\n                            sendNote={this.sendNote} handleChange={this.handleChange} handleDateChange={this.handleDateChange} onEditTags={this.onEditTags}\r\n                            onEditTask={this.props.onEditTask} closeModal={this.closeModal}\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div className=\"task-color-remove\">\r\n                                    <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                    <div className='icon-container'>\r\n                                        <MdDelete className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id, this.props.group) }} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"task-title-updates flex align-center space-between grow\">\r\n                                    <h2>\r\n                                        <ContentEditable\r\n                                            onFocus={this.focusText}\r\n                                            className=\"cursor-initial content-editable\"\r\n                                            innerRef={this.contentEditable}\r\n                                            html={name}\r\n                                            disabled={false}\r\n                                            onChange={this.handleNameChange}\r\n                                            onBlur={() => {\r\n                                                const desc = `${this.props.loggedUser.fullName} changed task name from ${this.state.task.name} to ${name} at group - ${this.props.group.name}`\r\n\r\n                                                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n                                            }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </h2>\r\n\r\n\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative grow\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n\r\n                                <Tags onEditTags={this.onEditTags}\r\n                                    task={this.state.task} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n\r\n\r\n\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} alt=\"\" />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    reloadProps = () => {\r\n        this.setState({ ...this.state, name: this.props.group.name })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({ ...this.state, name: this.props.group.name, id: this.props.group.id })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        try {\r\n            this.props.onEditGroup(this.props.group.id, color, 'color')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    convertToBar(property) {\r\n        const { tasks } = this.props.group;\r\n        const taskCount = tasks.length;\r\n        const percent = tasks.length / 100;\r\n        const data = tasks.reduce((acc, task) => {\r\n            const value = task[property]\r\n            acc[value] = acc[value] ? ++acc[value] : 1; \r\n            return acc;\r\n        }, {})\r\n        const res = [];\r\n        for (let key in data) {\r\n            data[key] /= percent;\r\n            res.push(<div key={key} style={{ width: data[key] ? `${data[key]}%` : '0' }}\r\n                data-title={data[key] ? ` ${key} ${Math.round(taskCount * data[key] / 100)}/${taskCount} ${data[key].toFixed(1)}%` : ''}\r\n                className={`precent-bar ${key.toLowerCase()}`}></div>)\r\n        }\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const priority = this.convertToBar('priority')\r\n        const status = this.convertToBar('status')\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const { group, index } = this.props;\r\n        return (\r\n            <Draggable draggableId={group.id} index={index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={group.id} className={`group ${window.innerWidth > 450 ? 'padding-y-45 padding-x-30' : 'padding-y-15'}`}\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n\r\n                                <h1 style={{ color: group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(group.id, this.state.name, 'name')\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\"  {...provided.dragHandleProps}>\r\n                             \r\n                                    <h3 style={{ color: this.props.group.color }}>Members</h3>\r\n\r\n                                <h3 style={{ color: this.props.group.color }}>Status</h3>\r\n                              \r\n                                    <h3 style={{ color: this.props.group.color }}>Due-Date</h3>\r\n                               \r\n                                    <h3 style={{ color: this.props.group.color }}>Priority</h3>\r\n                                \r\n                                    <h3 style={{ color: this.props.group.color }}>Tags</h3>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <div className=\"task-color\" style={{ backgroundColor: group.color }}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        {window.innerWidth > 450 &&\r\n                            <section className=\"group-precent-container flex\">\r\n                                <div className=\"group-precent flex\">\r\n                                    {status}\r\n                                </div>\r\n                                <div className=\"group-precent flex\">\r\n                                    {priority}\r\n                                </div>\r\n                            </section>\r\n                        }\r\n\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { BiLogOut } from 'react-icons/bi';\r\nimport { FaRegUser } from 'react-icons/fa';\r\nimport { BsCalendar, BsCardList } from 'react-icons/bs';\r\nimport { MdNotificationsActive } from 'react-icons/md';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\n\r\nexport class MobileNav extends React.Component {\r\n\r\n    state = {\r\n        isMenuShown: false\r\n    }\r\n\r\n    toggleMenuModal = () => {\r\n        this.setState({ isMenuShown: !this.state.isMenuShown })\r\n    }\r\n\r\n    closeMenuModal = () => {\r\n        this.setState({ isMenuShown: false })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser, params, members, boardName } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\" flex align-center space-between\">\r\n                    <div className=\"mobile-nav-left flex\">\r\n\r\n                    <GiHamburgerMenu onClick={this.toggleMenuModal} />\r\n                    <h1>{boardName ? boardName : loggedUser.fullName}</h1>\r\n                    </div>\r\n\r\n                    {boardName &&\r\n                        <div className=\"board-users-container flex\">\r\n\r\n                            {members.length === 0 && <div className=\"user-img-container\"> <CgProfile /></div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    {\r\n                                        member.imgUrl ? <img className=\"member-img\" src={member.imgUrl} alt=\"\" />\r\n                                            :\r\n                                            <img src=\"https://www.flaticon.com/svg/static/icons/svg/847/847969.svg\" alt=\"\" />\r\n\r\n                                    }\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    }\r\n\r\n\r\n                </nav>\r\n                <section className={`${this.state.isMenuShown && 'animate-menu-modal'} menu-modal flex column align-center`}>\r\n                    <NavLink to=\"/\">\r\n                        <AiOutlineHome />  <h3>Home</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/boards\">\r\n                        <BsCardList /> <h3>Boards List</h3>\r\n                    </NavLink>\r\n                    {params && <NavLink to={`/mob-activities/${params.id}`}>\r\n                        <MdNotificationsActive /> <h3>Activities</h3>\r\n                    </NavLink>}\r\n                    <NavLink to=\"/myweek\">\r\n                        <BsCalendar /> <h3>My Week</h3>\r\n                    </NavLink>\r\n                    <NavLink to={`/user/${loggedUser._id}`}>\r\n                        <FaRegUser /> <h3>My Profile</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/login\">\r\n                        <BiLogOut /> <h3>Logout</h3>\r\n                    </NavLink>\r\n                </section>\r\n                {this.state.isMenuShown && <div className=\"modal-screen-wrapper\" onClick={this.closeMenuModal}></div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport { userService } from '../services/userService.js';\r\nimport lodash from 'lodash'\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\nimport { groupChanges } from '../store/actions/changesActions'\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n            }\r\n\r\n            if (!this.props.users || !this.props.users.length) {\r\n                await this.props.loadUsers();\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = async (newBoard, desc) => {\r\n        const { loggedUser } = this.props;\r\n\r\n        this.props.updateBoard(newBoard, desc, loggedUser)\r\n        userService.notifyUsers(`${newBoard.name}: ${desc}`, newBoard.members, loggedUser)\r\n        if (desc) this.displayPopup('Updated board.')\r\n\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            this.props.addGroup(board, this.props.loggedUser);\r\n            userService.notifyUsers(`${board.name}: ${loggedUser.fullName} added a group.`, board.members, loggedUser)\r\n            this.props.clearFilter();\r\n            this.displayPopup('Added group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId);\r\n        const notif = `${board.name}: ${loggedUser.fullName} removed group ${group.name}`;\r\n        try {\r\n            this.props.removeGroup(groupId, board, this.props.loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (groupId, changedValue, key) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        if (group[key] === changedValue) return;\r\n        const originalValue = group[key];\r\n        group[key] = changedValue;\r\n        try {\r\n            const desc = `${group.name}: ${loggedUser.fullName} Changed ${key} from ${originalValue} to ${changedValue}`;\r\n            this.props.editGroup(group, board, desc, loggedUser)\r\n            userService.notifyUsers(desc, board.members, loggedUser);\r\n            this.displayPopup('Updated group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId, group) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            const task = group.tasks.find(task => task.id === taskId);\r\n            const notif = `${loggedUser.fullName} Removed the task ${task.name} from ${group.name}`;\r\n            this.props.removeTask(taskId, board, group, loggedUser);\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed task.');\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        const notif = ` ${board.name}: ${loggedUser.fullName} Added a task to ${group.name}`;\r\n        try {\r\n            this.props.addTask(groupId, taskName, board, loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser)\r\n            this.props.clearFilter()\r\n            this.displayPopup('Added task.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onEditTask = async (task, prevTask, desc) => {\r\n        if (lodash.isEqual(task, prevTask)) return;\r\n\r\n        const board = this._getCurrBoard()\r\n        const { loggedUser } = this.props;\r\n\r\n        this.props.editTask(task, board, desc, this.props.loggedUser)\r\n        userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n        this.displayPopup('Updated task.')\r\n\r\n\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this._getCurrBoard()\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    const { loggedUser } = this.props;\r\n                    const desc = `${loggedUser.fullName} Moved ${newTaskToPaste.name} from ${newStartGroup.name} to ${newFinishGroup.name}`\r\n                    this.props.updateBoard(this._getCurrBoard(), desc, loggedUser)\r\n                    userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    _getCurrBoard = () => {\r\n\r\n        return this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const board = this._getCurrBoard()\r\n        const { users, filterBy } = this.props;\r\n\r\n        if (!board) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src=\"loading.gif\" alt=\"\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        return (\r\n            <section className={`board ${window.innerWidth > 450 ? 'flex' : 'flex column'}`}>\r\n                {window.innerWidth > 450 ?\r\n                    <React.Fragment>\r\n                        <Navbar />\r\n                        <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                    </React.Fragment>\r\n                    :\r\n                    <MobileNav boardName={board.name} members={board.members} params={this.props.match.params} loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"board-container\">\r\n                    {window.innerWidth > 450 && <BoardHeader filterBy={filterBy} loggedUser={this.props.loggedUser} board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} users={users} />}\r\n                    <div className={`groups-container ${window.innerwidth > 450 && 'padding-x-30'}`} style={{ height: `${window.innerWidth < 450 && 94 + 'vh'}` }}>\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}\r\n                                        >\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup}\r\n                                                onChangeGroupColor={this.onChangeGroupColor} group={group} users={board.members} />\r\n                                        })}\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                        {window.innerWidth < 450 &&\r\n                            <BsFillPlusCircleFill className=\"group-add-btn\" onClick={this.onAddGroup} />\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter,\r\n    groupChanges\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import { boardService } from '../../services/boardService'\r\nimport socketService from '../../services/socketService.js'\r\nimport { userService } from '../../services/userService.js'\r\n\r\nexport function groupChanges(desc, loggedUser, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.handleBoardChanges(desc, loggedUser, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n\r\n            const users = await userService.loadUsers();\r\n            const notification = {\r\n                byUser: {\r\n                    fullName: loggedUser.fullName,\r\n                    imgUrl: loggedUser.imgUrl\r\n                },\r\n                content: `${board.name}: ${desc}`,\r\n                createdAt: Date.now()\r\n            }\r\n            board.members.forEach(member => {\r\n                if (member._id === loggedUser._id) return;\r\n                let userToUpdate = users.find(user => user._id === member._id);\r\n                userToUpdate.notifications.unshift(notification);\r\n                userService.updateUser(userToUpdate);\r\n                socketService.emit('send-notif', { memberId: member._id, notification });\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t send activities/notif');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n\r\n\r\nimport { loadUsers } from '../store/actions/userActions';\r\nimport { addBoard, loadBoards } from '../store/actions/boardActions.js';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\n\r\nclass _Boards extends Component {\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n    goToBoard = (boardId) => {\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n\r\n\r\n    onAddBoard = () => {\r\n        this.props.addBoard(this.props.loggedUser)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <React.Fragment>\r\n                <MobileNav loggedUser={this.props.loggedUser} />\r\n                <div className=\"boards-list flex column align-center relative\">\r\n                    {this.props.boards.map(board =>\r\n                        <div key={board._id} className=\"board-details flex column\" onClick={() => this.goToBoard(board._id)}>\r\n                            <div className=\"board-details-header flex  space-between\">\r\n                                <h2>{board.name}</h2>\r\n                                <div className=\"board-members-imgs\">\r\n                                    {board.members.map(member => <img className=\"member-img\" key={member._id} src={member.imgUrl} alt=\"\" />)}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"board-details-main flex column wrap\">\r\n                                {board.groups.map(group => <p style={{ color: group.color }} key={group.id}>{group.name}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard,\r\n    loadUsers\r\n}\r\n\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaFacebookF, FaUserCircle } from 'react-icons/fa';\r\nimport FacebookLogin from 'react-facebook-login'\r\n\r\nimport { login, guestLogin, signup } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    responseFacebook = async(response) => {\r\n        const user={\r\n            username: response.name,\r\n            email: response.email,\r\n            imgUrl: response.picture.data.url,\r\n            facebookId: response.userID\r\n        }\r\n        // await this.props.signup(user, 'facebook')\r\n        await this.props.login(user)\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n      }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" autoComplete=\"curren-username\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"password\" autoComplete=\"current-password\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit flex\">Login</button>\r\n                    <div type=\"button\" className=\"facebook-btn-container\">        \r\n                    <FaFacebookF />\r\n                    <FacebookLogin\r\n                        appId=\"632288707652598\"\r\n                        fields=\"name,email,picture\"\r\n                        cssClass=\"facebook-btn\"\r\n                        callback={this.responseFacebook} />\r\n                         </div>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            \r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards,\r\n    signup\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { signup, guestLogin } from '../store/actions/userActions.js'\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount() {\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, { resetForm }) => {\r\n        resetForm();\r\n        const { username, password, email, fullName } = values;\r\n        try {\r\n            await this.props.signup({ username, password, email, fullName });\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        } catch (err) {\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"fullName\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"password\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"password\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport { userService } from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: '',\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadBoards();\r\n        setTimeout(async () => { //for loading extravaganza\r\n            const user = await userService.getUserById(this.props.match.params.id)\r\n            this.setState({ user: { ...user } })\r\n        }, 2000);\r\n    }\r\n\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.setState({ user: {} }, () => {\r\n                setTimeout(async () => { //for loading extravaganza\r\n                    const user = await userService.getUserById(this.props.match.params.id)\r\n                    this.setState({ user: { ...user } })\r\n\r\n                }, 2000)\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        let { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src='loading.gif' alt=\"\" />\r\n                </div>\r\n            )\r\n        }\r\n        const [firstName, lastName] = fullName.split(' ');\r\n        let initials = firstName.charAt(0).toUpperCase();\r\n        if (lastName) initials += lastName.charAt(0).toUpperCase()\r\n        const guestId = '5f6efc73805dbf6054d58794';\r\n        const { loggedUser } = this.props\r\n        return (\r\n\r\n            <section className={`user-profile flex ${window.innerWidth < 450 && 'column'}`}>\r\n                {window.innerWidth > 450 ?\r\n                    <React.Fragment>\r\n                        <Navbar />\r\n                        <Boardbar />\r\n                    </React.Fragment>\r\n                    : <MobileNav loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"user-container relative\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        {imgUrl ? <img className=\"user-profile-big\" src={imgUrl} alt=\"\" /> :\r\n                            <div className=\"user-profile-big flex align-center justify-center\">{initials}</div>}\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {(loggedUser._id === _id && loggedUser._id !== guestId) ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container absolute\">\r\n\r\n                                <div className=\"user-modal-header padding-x-15 padding-y-15 flex justify-center align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-main\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" onSubmit={this.updateProfile}>\r\n                                        <input value={this.state.user.email} autoComplete=\"current-email\" onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} autoComplete=\"current-username\" onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} autoComplete=\"current-password\" onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} autoComplete=\"current-fullname\" onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction _UpcomingTasks(props) {\r\n\r\n    function getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    } \r\n\r\n    function moveToUserProfile(userId) {\r\n        props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    const { tasks, header } = props;\r\n\r\n    return <div className=\"upcoming-tasks\">\r\n        <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n        {tasks.map(task => <div\r\n            key={task.id}\r\n            className=\"task-preview space-between align-center\">\r\n            <div className=\"left-column\">\r\n                <p className=\"task-preview-name\">{task.name}</p>\r\n                <p className=\"task-location\">At: <span onClick={() => props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n            </div>\r\n            <section className=\"right-column flex align-center space-between\">\r\n                {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                <div className=\"user-img-container flex justify-center align-center\">\r\n                    {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                        <div onClick={() => moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                </div>\r\n                <div className=\"deadline-container flex align-center\"  onClick={() => props.history.push(`/board/${task.boardId}`)}>\r\n                    <h2 >{getDaysFromNow(task.dueDate)}</h2>\r\n                </div>\r\n            </section>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\nimport moment from 'moment';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            // <React.Fragment>\r\n            <section className=\"my-week flex\">\r\n\r\n            {window.innerWidth > 450 ?\r\n                <React.Fragment>\r\n                    <Navbar />\r\n                    <Boardbar />\r\n                </React.Fragment> \r\n            :\r\n            <MobileNav loggedUser={this.props.loggedUser} />\r\n        }\r\n\r\n                <div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}\r\n                                {taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section >\r\n            // </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { IoIosArrowDropdown } from 'react-icons/io';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoards, updateBoard } from '../store/actions/boardActions'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport class _mobActivities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n        isActivitiesShown: true,\r\n        isActivitiesNotReadShown: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.getBoardById(this.props.match.params.id)\r\n    }\r\n\r\n    getBoardById = (id) => {\r\n        const board = this.props.boards.find(board => board._id === id)\r\n        this.setState({ ...this.state, board })\r\n    }\r\n    get activities() {\r\n        const { activityLog } = this.state.board;\r\n        return [activityLog.filter(activity => activity.isRead), activityLog.filter(activity => !activity.isRead)]\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.state.board.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.state.board.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    toggleActivities = () => {\r\n        this.setState({ isActivitiesShown: !this.state.isActivitiesShown })\r\n\r\n    }\r\n    toggleActivitiesNotRead = () => {\r\n        this.setState({ isActivitiesNotReadShown: !this.state.isActivitiesNotReadShown })\r\n    }\r\n\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.updateBoard(board)\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.board) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <NavLink to={`/board/${this.props.match.params.id}`}>\r\n                        <AiOutlineClose />\r\n                    </NavLink>\r\n\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {/* Activities which are not read: */}\r\n                    <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            New Activities ({activitiesNotRead.length})\r\n                         <IoIosArrowDropdown className={this.state.isActivitiesNotReadShown ? \" toggle-btn rotate0\" : \" toggle-btn rotate90\"} onClick={this.toggleActivitiesNotRead} />\r\n                        </h1>\r\n                        {this.state.isActivitiesNotReadShown && activitiesNotRead.length !== 0 && activitiesNotRead.map((activity, idx) => {\r\n                            return (\r\n                                <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                    <div className=\"user-img-container flex align-center\">\r\n                                        <div className=\"date-container\">\r\n                                            <p className=\"date-created\">\r\n                                                {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                            </p>\r\n                                        </div>\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                        <h2>{activity.byUser.fullName}</h2>\r\n                                    </div>\r\n                                    <div className=\"activity-desc-container flex align-center\">\r\n                                        <p>\r\n                                            {activity.desc}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        {activitiesNotRead.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No new board activities!</h3>\r\n                        }\r\n                    </div>\r\n                    {/* Activities which are already read */}\r\n                    <div className=\"activity-list column flex  padding-y-15\">\r\n                        <h1 className=\"flex space-between\">\r\n                            Activities Read ({activities.length})\r\n                        <IoIosArrowDropdown onClick={this.toggleActivities} className={this.state.isActivitiesShown ? \"toggle-btn rotate0\" : \"toggle-btn rotate90\"} />\r\n                        </h1>\r\n                        {\r\n                            this.state.isActivitiesShown && activities.length !== 0 && activities.map((activity, idx) => {\r\n                                return (\r\n                                    <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                            <h2>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        {activities.length === 0 &&\r\n                            <h3 className=\"padding-x-15\">No read board activities!</h3>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateBoard\r\n}\r\n\r\nexport const mobActivities = connect(mapStateToProps, mapDispatchToProps)(_mobActivities);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Boards } from './pages/Boards.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\nimport { mobActivities } from './mobile-pages/mobActivities.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/boards',\r\n        component: Boards\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    },\r\n    {\r\n        path: '/mob-activities/:id',\r\n        component: mobActivities\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD': \r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {userService} from '../../services/userService'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedUser: userService.getCurrUser(),\r\n    // loggedUser: {\r\n    //     \"_id\": \"5f68936cf878123b2cd354436ce96d\",\r\n    //     \"username\": \"guest\",\r\n    //     \"fullName\": \"Guest User\",\r\n    //     \"password\": \"\",\r\n    //     \"email\": \"guest@gmail.com\",\r\n    //     \"imgUrl\": \"https://www.shareicon.net/data/2015/08/15/85434_guest_512x512.png\",\r\n    //     \"notifications\": [{\r\n    //         \"byUser\": {\r\n    //             \"_id\": \"5f6c5f7e27ed4400175ce1ac\",\r\n    //             \"imgUrl\": \"http://res.cloudinary.com/dtg7n0zye/image/upload/v1600938007/ybmioy3x7smnwhptho3x.jpg\",\r\n    //             \"fullName\": \"Liam Zety\"\r\n    //         },\r\n    //         \"content\": \"Liam Zety Removed a you from the board Caljul20\",\r\n    //         \"createdAt\": Date.now() - 1000 * 60 * 2\r\n    //     },\r\n    //     {\r\n    //         \"byUser\": {\r\n    //             \"_id\": \"5f6c5ef927ed4400175ce1a7\",\r\n    //             \"imgUrl\": \"http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937821/pd8tx7oddwp2wghsp9qt.jpg\",\r\n    //             \"fullName\": \"Osher Kabeda\"\r\n    //         },\r\n    //         \"content\": \"board: Osher Kabeda Tasked you to task - Learn the ropes\",\r\n    //         \"createdAt\": Date.now() - 1000 * 60 * 3\r\n    //     },\r\n    //     {\r\n    //         \"byUser\": {\r\n    //             \"_id\": \"5f6c5f0227ed4400175ce1aa\",\r\n    //             \"imgUrl\": \"http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937750/ztfvuok0olgwarb9kabo.jpg\",\r\n    //             \"fullName\": \"Roei Arazi\"\r\n    //         },\r\n    //         \"content\": \"board: Roei Arazi Added you to the board - Caljul20\",\r\n    //         \"createdAt\": Date.now() - 1000 * 60 * 4\r\n    //     }\r\n    //     ]\r\n    // },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}