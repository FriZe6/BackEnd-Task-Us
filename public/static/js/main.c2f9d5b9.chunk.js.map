{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","services/userService.js","store/actions/userActions.js","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Reply.jsx","cmps/task-cmps/Update.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","pages/Board.jsx","store/actions/changesActions.js","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","group","_makeid","Date","now","groups","push","err","removeGroup","groupId","filter","id","updateGroup","updatedGroup","map","addTask","taskName","task","name","createdAt","members","priority","dueDate","updates","lastUpdated","isSelected","posts","tags","newBoard","JSON","parse","stringify","forEach","tasks","removeTask","updateTask","updatedTask","handleBoardChanges","desc","loggedUser","changes","changedAt","isRead","byUser","_id","fullName","imgUrl","activityLog","boards","boardToSave","socketService","boardCreator","taskId","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","state","this","props","className","to","Component","mapDispatchToProps","Home","connect","boardReducer","users","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","logout","notifications","notification","userId","user","userCred","_handleLogin","isAdmin","birthDay","company","phoneNumber","newUser","username","password","sessionStorage","clear","setItem","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","searchVal","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onAddBoard","onBoardRemove","match","history","params","setTimeout","idx","findIndex","onToggleShown","toggleBoardbar","handleSearchChange","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","filteredBoards","data-title","onClick","style","color","location","pathname","transform","onChange","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","userReducer","withRouter","Activities","isOrderReversed","isFilterOpen","filterBy","handleChange","toggleFilter","dates","reduce","acc","activity","moment","format","Object","keys","activities","date","member","description","activitiesNotRead","getActivityDates","getActivityMembers","applyFilter","onToggleActivities","boardName","Fade","in","onSetFilter","onClearLog","src","alt","setFilter","Filter","filterKey","filterValue","formatted","getBoardDates","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","isUsersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onEditBoard","onToggleFilters","onToggleUsers","onRemoveMemberFromBoard","onAddUserToBoard","find","goToUserProfile","editableName","React","createRef","editableDescription","searchInput","prevProps","prevState","usersToAdd","some","activitiesRead","onFocus","innerRef","html","disabled","onBlur","onKeyDown","blur","toUpperCase","onAddGroup","focus","ref","input","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","Fragment","Truncate","lines","ellipsis","width","content","fromNow","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","onLogout","Navbar","Members","openModal","isUsersShown","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","UPLOAD_URL","formData","FormData","append","fetch","body","json","Reply","txt","isEditMode","toggleEditMode","replyTxt","updateReply","newReply","newReplies","update","replies","reply","updateNote","removeReply","replyId","splice","Update","onReply","newUpdate","every","letter","makeid","userName","removeUpdate","updateId","newUpdates","sendNote","onToggleEditUpdate","editUpdate","Updates","isLoading","imageUploaded","files","preventDefault","newNotes","closeModal","onSubmit","htmlFor","class","hidden","Tags","tag","onAddTag","tagName","elTagInput","current","_getRandomColor","onEditTags","onRemoveTag","tagToRemove","onEditTag","elTag","isTagsShown","_Task","isUpdatesShown","isImageModalShown","reloadProps","handleNameChange","prevDate","valueOf","onEditTask","prevData","removedMember","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","onToggleImageModal","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","onEditGroup","elInputAdd","property","taskCount","percent","toFixed","convertToData","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_Board","boardDescription","toUpdateChanges","currBoard","_getCurrBoard","groupChanges","filteredBoard","filterTasks","clearFilter","changedValue","originalValue","editGroup","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","groupStart","groupEnd","newTasks","newTask","newGroup","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","userToUpdate","unshift","Board","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","UpcomingTasks","moveToUserProfile","header","groupName","isAfter","add","endOf","isBefore","_MyWeek","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","firstName","applySearch","path","App","routes","route","exact","window","hostname","initialState","userProfile","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c2f9d5b9.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    console.log('established connection');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask,\r\n    handleBoardChanges\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nasync function updateBoard(boardToSave) {\r\n    socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard(loggedUser) {\r\n    console.log('LOGGED USER', loggedUser)\r\n    const board = {\r\n        boardCreator: {\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": Date.now(),\r\n        \"description\": 'Enter description here',\r\n        \"members\": [{\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": Date.now(),\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": Date.now(),\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": []\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": Date.now(),\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": Date.now(),\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": Date.now(),\r\n            \"updates\": [],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        updateBoard(board)\r\n        return board\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board) {\r\n    board.groups = board.groups.filter(group => group.id !== groupId)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nasync function removeTask(taskId, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.filter(task => task.id !== taskId)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n\r\n}\r\n\r\nfunction addTask(groupId, taskName, board) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: Date.now(),\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    const newBoard = JSON.parse(JSON.stringify(board))\r\n    newBoard.groups.forEach(group => {\r\n        if (group.id === groupId) group.tasks.push(task);\r\n    })\r\n    updateBoard(newBoard)\r\n    return newBoard;\r\n}\r\n\r\nfunction updateTask(updatedTask, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board\r\n}\r\nfunction handleBoardChanges(desc, loggedUser, board) {\r\n    const changes = {\r\n        id: _makeid(),\r\n        changedAt: Date.now(),\r\n        isRead: false,\r\n        desc,\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n    }\r\n    const updatedBoard = { ...board, activityLog: [changes, ...board.activityLog,] }\r\n    return updateBoard(updatedBoard)\r\n}\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave) {\r\n    console.log('show board to save', boardToSave)\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard(loggedUser);\r\n\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(boardId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(boardId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.addTask(groupId, taskName, board);\r\n            console.log('got board:', updatedBoard);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"home flex column\">\r\n                <div className=\"home-header flex space-between align-center\">\r\n                <h1>Home</h1>\r\n                <div className=\"home-header-right flex\">\r\n                <NavLink to=\"/login\">\r\n                    <button className=\"home-header-btn\">Login</button>\r\n                </NavLink>\r\n                <NavLink to=\"/signup\">\r\n                    <button className=\"home-header-btn\">Sign-up</button>\r\n                </NavLink>\r\n                </div>\r\n                </div>\r\n                <main className=\"home-main flex justify-center align-center column\">\r\n                <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                    <button className=\"guest-button\">Start Here!</button>\r\n                </NavLink>\r\n                </main>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","import httpService from \"./httpService\";\r\n\r\nlet users = [{\r\n    \"username\": 'frize',\r\n    \"fullName\": 'Roei Arazi',\r\n    \"password\": '3333',\r\n    \"email\": 'frize@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224132124'\r\n},\r\n{\r\n    \"username\": 'anstrio',\r\n    \"fullName\": 'Osher Kabada',\r\n    \"password\": '2222',\r\n    \"email\": 'anstrio@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224127124'\r\n},\r\n{\r\n    \"username\": 'smoking',\r\n    \"fullName\": 'Liam Zety',\r\n    \"password\": '1111',\r\n    \"email\": 'smoking@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224112124'\r\n}\r\n]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser,\r\n    logout\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    updateUser(loggedUser)\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return _handleLogin(newUser)\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\n\r\nasync function updateUser(user) {\r\n    httpService.put(`user/${user._id}`, user)\r\n    return user\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return dispatch => {\r\n        try {\r\n            userService.logout();\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t logout');\r\n            throw err;\r\n        }\r\n    }\r\n}","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate, loadBoards } from '../store/actions/boardActions.js';\r\nimport { updateUser } from '../store/actions/userActions.js'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\nimport { AiOutlineRight } from 'react-icons/ai';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        socketService.on('add-delete-board', () => {\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [...this.props.loggedUser.notifications, notification] })\r\n        })\r\n\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('add-delete-board')\r\n        socketService.off('accept-notif')\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    onAddBoard = () =>{\r\n        socketService.emit('add-delete-board')\r\n        this.props.addBoard(this.props.loggedUser)\r\n    }\r\n\r\n    onBoardRemove = (boardId) => {\r\n        const { boards, match, history, removeBoard } = this.props\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        removeBoard(boardId);\r\n        socketService.emit('add-delete-board')\r\n        this.props.showSnackbar('Removed board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        console.log('got board:', this.props.boards);\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                <div data-title=\"Toggle Board\" onClick={this.onToggleShown} className=\"board-bar-toggle-container\">\r\n                    <AiOutlineRight style={{ color: this.props.location.pathname.includes('/myweek') && '#151515', transform: isShown && 'rotate(180deg)' }}\r\n                        className=\"board-bar-toggle\" />\r\n                </div>\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate,\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n    }\r\n\r\n    get activities() {\r\n        const { activityLog } = this.props;\r\n        return [activityLog.filter(activity => activity.isRead), activityLog.filter(activity => !activity.isRead)]\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n\r\n    getActivityDates() {\r\n        const activities = this.props.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n\r\n    getActivityMembers() {\r\n        const activities = this.props.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n\r\n\r\n\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.description.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n    // onClearLog = () => {\r\n    //     const activityLog = this.props.activityLog.filter(activity => null)\r\n    //     console.log('activityLog', activityLog)\r\n    //     this.props.clearLog(activityLog)\r\n    // }\r\n\r\n    render() {\r\n        if (!this.props.activityLog) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n\r\n                        <div className=\"filter-outer-container relative\">\r\n                            <button onClick={this.toggleFilter}>Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.props.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {activitiesNotRead.length !== 0 && (\r\n                        <div className=\"activity-list-not-read column flex  padding-y-15\">\r\n                            <h1>New Activities</h1>\r\n                            {activitiesNotRead.map((activity, idx) => {\r\n\r\n                                return (\r\n                                    <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                        <div className=\"user-img-container flex align-center\">\r\n                                            <div className=\"date-container\">\r\n                                                <p className=\"date-created\">\r\n                                                    {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                </p>\r\n                                            </div>\r\n                                            <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                            <h2>{activity.byUser.fullName}</h2>\r\n                                        </div>\r\n                                        <div className=\"activity-desc-container flex align-center\">\r\n                                            <p>\r\n                                                {activity.desc}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n                        </div>\r\n\r\n                    )}\r\n\r\n                    {activities.length !== 0 &&\r\n                        <Fragment>\r\n\r\n                            <div className=\"activity-list column flex  padding-y-15\">\r\n                                <h1>Activities Read</h1>\r\n\r\n                                {activities.map((activity, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"activity  space-between flex align-center padding-y-15 \">\r\n                                            <div className=\"user-img-container flex align-center\">\r\n                                                <div className=\"date-container\">\r\n                                                    <p className=\"date-created\">\r\n                                                        {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                                <h2>{activity.byUser.fullName}</h2>\r\n                                            </div>\r\n                                            <div className=\"activity-desc-container flex align-center\">\r\n                                                <p>\r\n                                                    {activity.desc}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                                }\r\n\r\n                            </div>\r\n                        </Fragment>\r\n                    }\r\n\r\n                </div>\r\n                {activities.length === 0 && <h1 className=\"padding-x-15\">No recent board activities!</h1>}\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n \r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { GoRequestChanges, GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { AiOutlineMinus, AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { lightGreen } from '@material-ui/core/colors';\r\nimport { CgProfile } from 'react-icons/cg';\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        isUsersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ board: this.props.board })\r\n        })\r\n        this.setState({ board: this.props.board, _id: this.props.board._id })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            console.log('COMP DID UPDATE',)\r\n            this.setState({ board: this.props.board })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n    }\r\n    handleChangeName = (ev) => {\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } }, console.log('change name! ', this.state.board))\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ board: { ...this.state.board, description: ev.target.value } })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n        let board = this.props.board\r\n\r\n        if (this.state.isActivitiesOpen) {\r\n            board = {\r\n                ...board,\r\n                activityLog: board.activityLog.map(activity => {\r\n                    activity.isRead = true\r\n                    return activity\r\n                })\r\n            }\r\n\r\n        }\r\n        this.props.onEditBoard(board.name, board.description, false, 'openModal', board.members, board.activityLog)\r\n\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    onToggleUsers = () => {\r\n        this.setState({ isUsersOpen: !this.state.isUsersOpen })\r\n    }\r\n\r\n    onRemoveMemberFromBoard = (memberId) => {\r\n        this.setState({ board: { ...this.state.board, members: this.state.board.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'removeMemberFromBoard', this.state.board.members)\r\n        })\r\n    }\r\n\r\n    onAddUserToBoard = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ board: { ...this.state.board, members: [...this.state.board.members, newUser] } }, () => {\r\n            this.props.onEditBoard(this.state.board.name, this.state.board.desc, true, 'addMemberToBoard', this.state.board.members)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.onEditBoard(board.name, board.description, false, 'clearLog', board.members, board.activityLog)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        const { members } = this.state.board\r\n        const { users } = this.props\r\n        const usersToAdd = users.filter(user => !members.some(member => member._id === user._id))\r\n        const activitiesNotRead = this.props.board.activityLog.filter(activity => !activity.isRead)\r\n        const activitiesRead = this.props.board.activityLog.filter(activity => activity.isRead)\r\n        return (\r\n            <section className=\"board-header flex column padding-x-30\">\r\n                <div className=\"board-header-header flex space-between grow align-center\">\r\n                    <h1 className=\"flex align-center\">\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.board.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board.name, this.state.board.description, true, 'changeBoardTitle')\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.board.name, this.state.board.description, true, 'changeBoardTitle')\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <div className=\"board-header-right relative flex align-center\">\r\n                        <div className=\"board-users flex justify-center\" onClick={this.onToggleUsers}>\r\n                            {members.length === 0 && <div className=\"user-img-container\"> <CgProfile /></div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    <img src={member.imgUrl} />\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        {this.state.isUsersOpen &&\r\n                            <div className=\"users-modal absolute\">\r\n                                <div className=\"board-users-box\">\r\n                                    <h3>Board Members</h3>\r\n                                    {members.map((member, idx) =>\r\n                                        <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(member._id)}>\r\n                                                {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{member.fullName}</p>\r\n                                            </div>\r\n                                            <AiOutlineMinus onClick={() => this.onRemoveMemberFromBoard(member._id)} />\r\n                                        </section>\r\n                                    )}\r\n\r\n                                </div>\r\n                                <div className=\"site-users-box\">\r\n                                    <h3>Site Users</h3>\r\n                                    {usersToAdd.map(user => {\r\n                                        return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex  align-center\" onClick={() => this.goToUserProfile(user._id)}>\r\n                                                {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                                    <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                                <p className=\"member-name\">{user.fullName}</p>\r\n                                            </div>\r\n                                            <FiPlus onClick={() => this.onAddUserToBoard(user._id)} />\r\n                                        </section>\r\n                                    })}\r\n                                </div>\r\n\r\n                            </div>}\r\n                        <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                            {/* <GoRequestChanges /> */}\r\n                            <h2> Activities <span style={{ color: activitiesNotRead.length !== 0 ? '#0085ff' : '' }}>{activitiesNotRead.length}</span> / {activitiesRead.length + activitiesNotRead.length}</h2>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"board-header-footer flex align-center space-between\">\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.board.description} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.board.name, this.state.board.description, true, 'changeBoardDesc')\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.board.name, this.state.board.description, true, 'changeBoardDesc')\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                    <div className=\"header-options flex\">\r\n                        <button onClick={this.props.onAddGroup}>New Group</button>\r\n                        <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                            <input ref={(input) => { this.searchInput = input; }} placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                            <GoSearch />\r\n                        </div>\r\n                        <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }} className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                            <VscListFilter />\r\n                            <h2>Filter</h2>\r\n                            {\r\n                                this.state.isFiltersOpen &&\r\n\r\n                                <Filter board={this.props.board} />\r\n\r\n                            }\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                        <Activities onClearLog={this.onClearLog} onToggleActivities={this.onToggleActivities}\r\n                            boardName={this.state.board.name} activityLog={this.props.board.activityLog} />\r\n                    </div>\r\n                    {\r\n                        this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                    }\r\n                    {\r\n                        this.state.isUsersOpen && <div onClick={this.onToggleUsers} className='modal-screen-wrapper'></div>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex align-center column\">\r\n                                                <h2>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.byUser.fullName}\r\n                                                    </Truncate>\r\n                                                </h2>\r\n                                                <p>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.content}\r\n                                                    </Truncate>\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { FaAd, FaRegUser } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { BiLogOut } from 'react-icons/bi'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications, logout } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        this.props.history.push('/login')\r\n    }\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <li className=\"icon-container cursor-pointer\">\r\n                        <NavLink to=\"/\">\r\n                            <FaAd />\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container cursor-pointer\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <li className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container\"><FaRegUser /></li>\r\n                    </NavLink>\r\n                    <li className=\"icon-container\" ><BiLogOut onClick={this.onLogout} /></li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications,\r\n    logout\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar));","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <img alt=\"profile\" src={props.members[0].imgUrl} />\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div> : <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n            {(props.members.length !== 0) &&\r\n                <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{props.members.length}</span></div>}\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map((member,idx) =>\r\n                            <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <AiOutlineMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map((user,idx) => {\r\n                            return <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label className=\"date-picker\">\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative flex align-center\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name flex align-center justify-center\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(img) {\r\n    console.log('IMAGE?', img)\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\n\r\n\r\nexport class Reply extends React.Component{\r\n    state={\r\n        txt:'',\r\n        isEditMode: false\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n    toggleEditMode =(replyTxt)=>{\r\n        this.setState({isEditMode: !this.state.isEditMode, txt:replyTxt})\r\n    }\r\n       \r\n    updateReply= (newReply)=>{\r\n        if(newReply.txt===this.state.txt) return this.setState({isEditMode: false})\r\n        newReply.txt= this.state.txt\r\n        const newReplies= this.props.update.replies.map(reply=>{\r\n            return reply.id===newReply.id ? newReply : reply\r\n        } )\r\n\r\n        const update= {...this.props.update,replies:newReplies}\r\n        this.props.updateNote(update)\r\n        this.setState({isEditMode: false, txt: ''})\r\n    }\r\n\r\n    removeReply= (replyId)=>{\r\n        const idx= this.props.update.replies.findIndex(reply=> reply.id===replyId)\r\n        const newUpdate= {...this.props.update}\r\n        const update=newUpdate.replies.splice(idx, 1)\r\n        this.props.updateNote(update)\r\n    }\r\n\r\n\r\n    render(){\r\n        const {reply, idx}= this.props\r\n        return(\r\n            <div key={idx} className=\"reply-box flex column relative\">\r\n            <button className=\"remove-reply-btn absolute\" onClick={()=>this.removeReply(reply.id)}>X</button>\r\n            <div className=\"reply-content flex align-center\">\r\n            <img src={reply.member.imgUrl} alt=\"\" />\r\n            <p className=\"reply-name\">{reply.member.fullName}</p>\r\n            {!this.state.isEditMode ?\r\n            <p className=\"reply-text\">{reply.txt}</p> \r\n            :    \r\n            <div className=\"edit-box flex\">\r\n            <textarea name=\"txt\" onChange={this.handleChange} value={this.state.txt}></textarea>\r\n            <AiOutlineSend className=\"update-reply-btn\" onClick={()=>this.updateReply(reply)} />\r\n            </div>\r\n            }\r\n            </div>\r\n            <p className=\"edit-reply-btn\" onClick={()=>this.toggleEditMode(reply.txt)}>Edit</p>\r\n        </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { Reply } from './Reply';\r\n\r\nexport class Update extends React.Component {\r\n\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false\r\n    }\r\n\r\n\r\n    onReply = (newUpdate) => {\r\n        if (!this.state.txt || this.state.txt.split('').every(letter => letter === ' ')) return\r\n        const newReply = {\r\n            txt: this.state.txt,\r\n            createdAt: Date.now(),\r\n            id: this.props.makeid(),\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const update = this.props.updates.find(update => update.id === newUpdate.id)\r\n        update.replies = [...update.replies, newReply]\r\n        this.props.updateNote(update)\r\n\r\n        this.setState({ txt: '' })\r\n    }\r\n\r\n    removeUpdate = (updateId) => {\r\n        console.log(updateId);\r\n        console.log(this.props.updates);\r\n        const idx = this.props.updates.findIndex(update => update.id === updateId)\r\n        const updates = [...this.props.updates]\r\n        const newUpdates= updates.splice(idx, 1)\r\n\r\n        this.props.sendNote(newUpdates)\r\n    }\r\n\r\n    onToggleEditUpdate = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n\r\n    editUpdate = (newUpdate) => {\r\n        if (newUpdate.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newUpdate.txt = this.state.txt\r\n        const newUpdates = this.props.updates.map(update => {\r\n            return update.id === newUpdate.id ? newUpdate : update\r\n        })\r\n\r\n        this.props.sendNote(newUpdates)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { update, idx } = this.props\r\n        return (\r\n            <div key={idx} className=\"update-box flex wrap column relative\">\r\n                <button className=\"remove-update-btn\" onClick={()=>this.removeUpdate(update.id)}>X</button>\r\n                <div className=\"update-box-header flex align-center\">\r\n                    <img src={update.member.imgUrl} alt=\"\" />\r\n                    <p className=\"member-name\">{update.member.fullName}</p>\r\n                </div>\r\n\r\n\r\n                {this.state.isEditMode ?\r\n                    <div className=\"update-box-edit flex column relative\">\r\n                        <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                        <AiOutlineSend className=\"submit-edit-btn absolute\" onClick={()=>this.editUpdate(update)} />\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                    :\r\n                    <div className=\"update-box-main flex column\">\r\n                        {update.txt && <p className=\"update-text\">{update.txt}</p>}\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                }\r\n                <p className=\"edit-update-btn\" onClick={this.onToggleEditUpdate}>Edit</p>\r\n                <div className=\"update-box-footer flex column\">\r\n\r\n                    {update.replies &&\r\n                        <div className=\"replies-box flex column\">\r\n                            {update.replies.map((reply, idx) =>\r\n                                <Reply reply={reply} idx={idx} update={this.props.update}\r\n                                    updateNote={this.props.updateNote} />\r\n                            )}</div>\r\n                    }\r\n                    {!this.state.isEditMode &&\r\n                        <div className=\"reply-footer flex space-between align-center\">\r\n                            <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                            <button className=\"reply-button\" onClick={() => this.onReply(update)}>Reply</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { BiImage } from 'react-icons/bi';\r\nimport { MdDone } from 'react-icons/md';\r\n\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\nimport { Update } from './Update';\r\n\r\n\r\nfunction makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        reply: {\r\n            txt: ''\r\n        },\r\n        update: {\r\n            id: '',\r\n            txt: '',\r\n            imgUrl: '',\r\n            replies: []\r\n        },\r\n        isLoading: false,\r\n        imageUploaded: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ imageUploaded: false })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else if (ev.target.name === 'txt') {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        } else {\r\n            this.setState({ reply: { ...this.state.reply, txt: ev.target.value } })\r\n        }\r\n    }\r\n\r\n    uploadImg = async () => {\r\n        this.setState({ isLoading: true })\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        this.setState({ update: { ...this.state.update, imgUrl: res.url }, isLoading: false, imageUploaded: true })\r\n    }\r\n\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if ((!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) && !this.state.update.imgUrl) return\r\n        const newNote = {\r\n            id: makeid(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.update.txt,\r\n            imgUrl: this.state.update.imgUrl,\r\n            replies: [],\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n        this.setState({ update: { txt: '', imgUrl: '' },imageUploaded: false })\r\n        this.props.sendNote(updates)\r\n    }\r\n\r\n    updateNote = (newUpdate) => {\r\n        const newNotes = [...this.props.updates].map(update => update.id === newUpdate.id ? newUpdate : update)\r\n        this.props.sendNote(newNotes)\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.props.updates) return <h1>Loading...</h1>;\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column\">\r\n                    <AiOutlineClose onClick={this.props.closeModal} />\r\n                    <h1>{this.props.task.name}</h1>\r\n                    <div className=\"updates-header-options flex column\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex align-center\">\r\n                            <textarea name=\"txt\" value={this.state.update.txt} onChange={this.handleChange} />\r\n\r\n\r\n                        </form>\r\n                        <div className=\"updates-btns flex align-center space-between\">\r\n\r\n                            <div className=\"image-uploader flex\">\r\n                                <label htmlFor={this.props.task.id}>{this.state.isLoading ? <div class=\"loadingio-spinner-spinner-gvjl1rpqs7q\"><div class=\"ldio-subadnemdcd\">\r\n                                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                                </div></div> : <BiImage />}\r\n                                </label>\r\n                                <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                                {this.state.imageUploaded && <div className=\"image-uploaded flex align-center\"><MdDone /><p> Image Ready!</p></div>}\r\n                            </div>\r\n                            {this.state.isLoading ? <p>Image is uploading..</p> : <button onClick={this.sendNote}>Upload</button>}\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"updates-container\">\r\n                    {updates.map((update, idx) => <Update update={update} key={idx} idx={idx} \r\n                    updates={updates} loggedUser={this.props.loggedUser}\r\n                    sendNote={this.props.sendNote}\r\n                     updateNote={this.updateNote} makeid={makeid}/>)}             \r\n                </div>\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { BsBookmarkPlus, BsFilePlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagName, 'addTag')\r\n    }\r\n\r\n    onRemoveTag = (id) => {\r\n        const tagToRemove = this.state.tags.find(tag => tag.id === id)\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagToRemove.txt, 'removeTag')\r\n    }\r\n    onEditTag = (idx, tagName, type) => {\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) {\r\n            return\r\n        }\r\n        this.props.onEditTags(this.state.tags, tagName, type)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>\r\n                        )\r\n\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }} key={idx}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    {idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                {this.props.isTagsShown &&\r\n                    <Fragment>\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <div className=\"tag-add-container  flex justify-center align-center\">\r\n                                <BsBookmarkPlus onClick={this.onAddTag} />\r\n                                <input onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        this.onAddTag()\r\n                                        ev.target.blur()\r\n                                        ev.target.value = ''\r\n                                    }\r\n                                }} placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                            </div>\r\n                            <section>\r\n                                {this.state.tags.map((tag, idx) => {\r\n                                    return (\r\n                                        <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                            <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n\r\n                                            <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                                ev.target.blur()\r\n                                                this.onEditTag(idx)\r\n                                            }}\r\n                                                onKeyDown={(ev) => {\r\n                                                    if (ev.key === 'Enter') {\r\n                                                        ev.target.blur()\r\n                                                        this.onEditTag(idx)\r\n                                                    }\r\n                                                }}\r\n                                                onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    reloadProps = ()=>{\r\n        this.setState({ task: this.props.task })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard',this.reloadProps)\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        const prevDate = this.state.task.dueDate;\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, moment(date).valueOf(), prevDate, 'date')\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n        console.log('got data:', data);\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            const prevData = this.state.task.status;\r\n            this.setState({ task: { ...this.state.task, status: data } }, () => {\r\n                console.log('in callback');\r\n                this.props.onEditTask(this.state.task, this.props.group, data, prevData, 'status')\r\n                this.closeModal()\r\n            })\r\n        } else {\r\n            const prevData = this.state.task.priority;\r\n            this.setState({ task: { ...this.state.task, priority: data } }, () => {\r\n                this.props.onEditTask(this.state.task, this.props.group, data, prevData, 'priority')\r\n                this.closeModal()\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, true, false, 'sendNote')\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        const removedMember = this.state.task.members.find(member => member._id === memberId)\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, removedMember, false, 'removeFromTask')\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, newUser, false, 'addToTask')\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onEditTags = (tags, tagName, type) => {\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            this.props.onEditTask(this.state.task, this.props.group, tagName, false, type)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                    <Updates task={this.state.task} isImageModalShown={this.state.isImageModalShown}\r\n                        loggedUser={this.props.loggedUser} updates={updates}\r\n                        uploadImg={this.uploadImg} sendNote={this.sendNote} closeModal={this.closeModal}\r\n                    />\r\n                </div>\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div className=\"task-color-remove\">\r\n                                    <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                    <div className='icon-container'>\r\n                                        <MdDelete className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id, this.props.group) }} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className=\"task-title-updates flex align-center space-between grow\">\r\n                                    <h2>\r\n                                        <ContentEditable\r\n                                            onFocus={this.focusText}\r\n                                            className=\"cursor-initial content-editable\"\r\n                                            innerRef={this.contentEditable}\r\n                                            html={name}\r\n                                            disabled={false}\r\n                                            onChange={this.handleNameChange}\r\n                                            onBlur={() => {\r\n                                                this.props.onEditTask(this.state.task, this.props.group, this.state.task.name, name, 'name')\r\n                                            }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                    this.props.onEditTask(this.state.task, this.props.group, this.state.task.name, name, 'name')\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </h2>\r\n\r\n\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative grow\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                <Tags handleChange={this.handleChange} onEditTags={this.onEditTags}\r\n                                    task={this.state.task} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    reloadProps = () =>{\r\n        this.setState({ ...this.state, name: this.props.group.name })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({ ...this.state, name: this.props.group.name, id: this.props.group.id })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        try {\r\n            this.props.onEditGroup(this.props.group.id, color, this.state.color, 'color')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    convertToData(property) {\r\n        const { tasks } = this.props.group;\r\n        const taskCount = tasks.length;\r\n        const percent = tasks.length / 100;\r\n        const data = tasks.reduce((acc, task) => {\r\n            const value = task[property]\r\n            if(!acc[value]) acc[value] = 0;\r\n            acc[value]++\r\n            return acc;\r\n        }, {})\r\n        const res = [];\r\n        for (let key in data) {\r\n            data[key] /= percent;\r\n            res.push(<div key={key} style={{ width: data[key] ? `${data[key]}%` : '0' }}\r\n                data-title={data[key] ? ` ${key} ${taskCount * data[key] / 100}/${taskCount} ${data[key].toFixed(1)}%` : ''}\r\n                className={`precent-bar ${key.toLowerCase()}`}></div>)\r\n        }\r\n        return res;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        if (!this.state.name) return <h1>Loading...</h1> \r\n        const priority = this.convertToData('priority')\r\n        const status = this.convertToData('status')\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const { group, index } = this.props;\r\n        return (\r\n            <Draggable draggableId={group.id} index={index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={group.id} className=\"group padding-y-45\"\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n                                <h1 style={{ color: group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(group.id, this.state.name, name, 'name')\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditGroup(group.id, this.state.name, name, 'name')\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\">\r\n                                <h3 style={{ color: this.props.group.color }}>Members</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Status</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Due-Date</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Priority</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Tags</h3>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <div className=\"task-color\" style={{ backgroundColor: group.color }}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        <section className=\"group-precent-container flex\">\r\n                            <div className=\"group-precent flex\">\r\n                                {status}\r\n                            </div>\r\n                            <div className=\"group-precent flex\">\r\n                                {priority}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport moment from 'moment';\r\n\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\nimport { groupChanges } from '../store/actions/changesActions'\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = async (boardName, boardDescription, toUpdateChanges = false, type, members, activityLog) => {\r\n        const currBoard = this._getCurrBoard()\r\n        console.log('SHOW activityLog', activityLog)\r\n\r\n        const newBoard = {\r\n            ...currBoard,\r\n            name: boardName,\r\n            desc: boardDescription,\r\n            members: members ? members : currBoard.members,\r\n            activityLog: activityLog ? activityLog : currBoard.activityLog\r\n        }\r\n        console.log('SHOW NEW BOARRD', newBoard)\r\n\r\n        if (toUpdateChanges) {\r\n            switch (type) {\r\n                case 'changeBoardTitle':\r\n                    try {\r\n                        console.log('CHANGING TITLE',)\r\n\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Changed the board title from ${currBoard.name} to ${boardName}`, this.props.loggedUser, newBoard)\r\n\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n                    break;\r\n                case 'changeBoardDesc':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Changed ${currBoard.name} description to ${boardDescription}`, this.props.loggedUser, newBoard)\r\n\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n\r\n                    break;\r\n                case 'addMemberToBoard':\r\n                    console.log('ADDING MEMBER TO BOARD',)\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Invited a member to the board `, this.props.loggedUser, newBoard)\r\n\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n\r\n                    break;\r\n                case 'removeMemberFromBoard':\r\n                    try {\r\n                        this.props.groupChanges(`${this.props.loggedUser.fullName} Removed a member from the board`, this.props.loggedUser, newBoard)\r\n\r\n                    } catch (err) {\r\n                        console.log('Error', err)\r\n                    }\r\n\r\n                    break;\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard)\r\n        this.props.showSnackbar('Updated board.')\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            await this.props.groupChanges(`${this.props.loggedUser.fullName} Added a new group`, this.props.loggedUser, board)\r\n            this.props.addGroup(this._getCurrBoard());\r\n            this.props.clearFilter();\r\n            this.props.showSnackbar('Added group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        try {\r\n            await this.props.groupChanges(`${this.props.loggedUser.fullName} Removed group: ${group.name}`, this.props.loggedUser, board)\r\n            this.props.removeGroup(groupId, this._getCurrBoard())\r\n            this.props.showSnackbar('Removed group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (groupId, changedValue, originalValue, key) => {\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        if (changedValue === originalValue) return // No changes were made\r\n        group[key] = changedValue;\r\n        try {\r\n            await this.props.groupChanges(`${this.props.loggedUser.fullName} Changed ${originalValue} title to ${changedValue}`, this.props.loggedUser, board)\r\n            this.props.editGroup(group, this._getCurrBoard(), originalValue, changedValue)\r\n            this.props.showSnackbar('Updated group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId, group) => {\r\n        const board = this._getCurrBoard()\r\n\r\n        let task = null\r\n        board.groups.forEach(group => {\r\n            if (task) return\r\n            task = group.tasks.find(task => task.id === taskId)\r\n        })\r\n        try {\r\n\r\n            await this.props.groupChanges(`${this.props.loggedUser.fullName} Removed task: ${task.name} from group ${group.name}`, this.props.loggedUser, board)\r\n            this.props.removeTask(taskId, this._getCurrBoard())\r\n            this.props.showSnackbar('Removed task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        try {\r\n            await this.props.groupChanges(`${this.props.loggedUser.fullName} Added a new task: ${taskName} to group ${group.name}`, this.props.loggedUser, board)\r\n            this.props.addTask(groupId, taskName, this._getCurrBoard())\r\n            this.props.clearFilter()\r\n            this.props.showSnackbar('Added task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onEditTask = async (task, group, changedValue = true, originalValue = false, type) => {\r\n        const board = this._getCurrBoard()\r\n        if (changedValue === originalValue) return\r\n        switch (type) {\r\n            case 'name':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} changed task name from ${originalValue} to ${changedValue} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'sendNote':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} sent an update at task: ${task.name} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'status':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} changed task: ${task.name} status from ${originalValue} to ${changedValue} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'priority':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} changed task: ${task.name} priority from ${originalValue} to ${changedValue} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'date':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} changed task ${task.name} date from ${moment(originalValue).format('DD/MMM/YYYY')} to ${moment(changedValue).format('DD/MMM/YYYY')} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'removeFromTask':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} removed ${changedValue.fullName} from ${task.name} at group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'addToTask':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} tasked ${changedValue.fullName} to ${task.name} on group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'addTag':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} added tag named ${changedValue} to ${task.name} on group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n\r\n                break;\r\n            case 'removeTag':\r\n                try {\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} removed tag named ${changedValue} from ${task.name} on group - ${group.name}`, this.props.loggedUser, board)\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        this.props.editTask(task, this._getCurrBoard())\r\n        this.props.showSnackbar('Updated task.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this._getCurrBoard()\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n\r\n                    await this.props.groupChanges(`${this.props.loggedUser.fullName} Moved ${newTaskToPaste.name} from ${newStartGroup.name} to ${newFinishGroup.name}`, this.props.loggedUser, board)\r\n                    this.props.updateBoard(this._getCurrBoard())\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    _getCurrBoard = () => {\r\n        return this.props.boards.find(board => board._id === this.state.boardId)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        const board = this._getCurrBoard()\r\n        const { users, filterBy } = this.props;\r\n        if (!board) return <h1>Loading..</h1>\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        return (\r\n            <section className=\"board\">\r\n                <Navbar />\r\n                <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                <div className=\"board-container\">\r\n                    <BoardHeader board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} users={users} />\r\n                    <div className=\"groups-container padding-x-30\">\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup}\r\n                                                onChangeGroupColor={this.onChangeGroupColor} group={group} users={board.members} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter,\r\n    groupChanges\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import { boardService } from '../../services/boardService'\r\nimport socketService from '../../services/socketService.js'\r\nimport { userService } from '../../services/userService.js'\r\n\r\nexport function groupChanges(desc, loggedUser, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = await boardService.handleBoardChanges(desc, loggedUser, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n\r\n            const users = await userService.loadUsers();\r\n            const notification = {\r\n                byUser: {\r\n                    fullName: loggedUser.fullName,\r\n                    imgUrl: loggedUser.imgUrl\r\n                },\r\n                content: `${board.name}: ${desc}`,\r\n                createdAt: Date.now()\r\n            }\r\n            board.members.forEach(member => {\r\n                if (member._id === loggedUser._id) return;\r\n                console.log('got member:', member);\r\n                let userToUpdate = users.find(user => user._id === member._id);\r\n                userToUpdate.notifications.unshift(notification);\r\n                userService.updateUser(userToUpdate);\r\n                socketService.emit('send-notif', { memberId: member._id, notification });\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t send activities/notif');\r\n            throw err;\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { signup, guestLogin } from '../store/actions/userActions.js'\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount() {\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, { resetForm }) => {\r\n        resetForm();\r\n        const { username, password, email, fullName } = values;\r\n        try {\r\n            await this.props.signup({ username, password, email, fullName });\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        } catch (err) {\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"fullName\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport {userService} from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() { \r\n        this.props.loadBoards();\r\n        const user = await userService.getUserById(this.props.match.params.id)\r\n        this.setState({ user: { ...user} })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        const { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        const { loggedUser} = this.props\r\n\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container\">\r\n\r\n                                <div className=\"user-modal-header padding-x-15 padding-y-15 flex justify-center align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-main\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" onSubmit={this.updateProfile}>\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nfunction _UpcomingTasks(props) {\r\n\r\n    function getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    } \r\n\r\n    function moveToUserProfile(userId) {\r\n        props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    const { tasks, header } = props;\r\n\r\n    return <div className=\"upcoming-tasks\">\r\n        <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n        {tasks.map(task => <div\r\n            key={task.id}\r\n            className=\"task-preview space-between align-center\">\r\n            <div className=\"left-column\">\r\n                <p className=\"task-preview-name\">{task.name}</p>\r\n                <p className=\"task-location\">At: <span onClick={() => props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n            </div>\r\n            <section className=\"right-column flex align-center space-between\">\r\n                {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                <div className=\"user-img-container flex justify-center align-center\">\r\n                    {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                        <div onClick={() => moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                </div>\r\n                <div className=\"deadline-container flex align-center\"  onClick={() => props.history.push(`/board/${task.boardId}`)}>\r\n                    <h2 >{getDaysFromNow(task.dueDate)}</h2>\r\n                </div>\r\n            </section>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>{taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD': \r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {      \r\n            \"_id\" : \"5f68936cf878123b2cdce96d\",\r\n            \"username\" : \"frize\",\r\n            \"fullName\" : \"Roei Arazi\",\r\n            \"password\" : \"3333\",\r\n            \"email\" : \"frize@gmail.com\",\r\n            \"imgUrl\" : \"https://via.placeholder.com/250\",\r\n            \"isAdmin\" : true,\r\n            \"boards\" : [],\r\n            \"notifications\" : [ \r\n                {\r\n                byUser: \r\n                {\r\n                    fullName: \"Liam Zety\",\"imgUrl\" : \"https://via.placeholder.com/250\" \r\n                },\r\n                content:\"just uploaded the logo!\",\r\n                createdAt:Date.now()\r\n            }],\r\n            \"birthDay\" : \"2nd August 1997\",\r\n            \"company\" : \"adidas\",\r\n            \"phoneNumber\" : \"0224132124\"\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}