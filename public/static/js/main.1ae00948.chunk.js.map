{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","services/userService.js","store/actions/userActions.js","pages/Home.jsx","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/ActivitiesModal.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Reply.jsx","cmps/task-cmps/Update.jsx","cmps/task-cmps/Updates.jsx","cmps/task-cmps/Tags.jsx","cmps/Task.jsx","cmps/Group.jsx","cmps/Popup.jsx","mobile-pages/MobileNav.jsx","cmps/Dashboard.jsx","pages/Board.jsx","store/actions/changesActions.js","pages/Boards.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","cmps/my-week-cmps/UpcomingTasks.jsx","pages/MyWeek.jsx","mobile-pages/MobActivitiesModal.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","loggedUser","group","_makeid","Date","now","groups","push","handleBoardChanges","fullName","err","removeGroup","groupId","filter","currGroup","isGroup","id","name","updateGroup","updatedGroup","desc","map","addTask","taskName","task","createdAt","members","priority","dueDate","updates","lastUpdated","isSelected","posts","tags","groupIdx","findIndex","tasks","removeTask","taskId","currTask","isTask","length","splice","updateTask","updatedTask","boards","boardCreator","_id","imgUrl","newBoard","changes","changedAt","byUser","activityLog","boardToSave","socketService","text","possible","i","charAt","Math","floor","random","dispatch","type","recieveUpdate","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","logout","notifyUsers","getCurrUser","JSON","parse","sessionStorage","getItem","users","notifications","forEach","notification","isRead","userId","user","userCred","_handleLogin","isAdmin","birthDay","company","phoneNumber","newUser","Promise","reject","username","password","content","updatedUser","clear","member","userToUpdate","find","unshift","setItem","stringify","_Home","state","isLoading","setState","props","history","this","video","React","createRef","className","src","alt","to","onClick","current","play","ref","autoPlay","muted","Component","mapDispatchToProps","Home","connect","boardReducer","userReducer","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","selectedBoardId","isSnackbarOpen","isShown","searchVal","isModalShown","selectedBoardName","onAddBoard","notif","onBoardRemove","match","params","displayPopup","idx","onToggleShown","toggleBoardbar","onToggleModal","handleSearch","toLowerCase","includes","updatedBoard","isBoardbarShown","setTimeout","currBoardId","filteredBoards","style","color","location","pathname","transform","onChange","handleSearchChange","placeholder","paddingLeft","key","onMoveToBoard","ev","stopPropagation","Boardbar","withRouter","Activities","toggleIsShown","activities","getInitials","moveToProfile","activity","moment","format","_ActivitiesModal","isOrderReversed","isFilterOpen","filterBy","handleChange","target","value","toggleFilter","split","firstName","lastName","initials","toUpperCase","dates","reduce","acc","Object","keys","date","activitiesNotRead","getActivityDates","getActivityMembers","applyFilter","onToggleActivities","boardName","Fade","in","onSetFilter","onClearLog","ActivitiesModal","setFilter","Filter","filterKey","filterValue","formatted","getBoardDates","isFiltersOpen","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isUsersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onEditBoard","onToggleFilters","handleMenuOpen","currentTarget","handleMenuClose","onToggleUsers","onRemoveMemberFromBoard","onAddUserToBoard","goToUserProfile","editableName","editableDescription","searchInput","prevProps","prevState","firstNameChar","lastNameChar","isBoardShown","isFiltering","values","some","usersToAdd","activitiesRead","onFocus","innerRef","html","disabled","onBlur","onKeyDown","blur","_getMemeberInitials","onAddGroup","toggleModal","showBoard","showDashboard","focus","input","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","Fragment","fromNow","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","onLogout","data-title","Navbar","Members","openModal","isUsersShown","onRemoveMemberFromTask","onAddUserToTask","Status","isStatusShown","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","img","UPLOAD_URL","formData","FormData","append","fetch","body","json","Reply","txt","isEditMode","isOptionsModal","toggleEditMode","replyTxt","updateReply","newReply","newReplies","update","replies","reply","updateNote","removeReply","replyId","toggleOptionsModal","Update","onReply","newUpdate","every","letter","makeid","userName","removeUpdate","updateId","sendNote","onToggleEditUpdate","editUpdate","newUpdates","borderTop","Updates","imageUploaded","files","preventDefault","newNotes","closeModal","onSubmit","htmlFor","class","hidden","Tags","tag","onAddTag","tagName","elTagInput","_getRandomColor","onEditTags","onRemoveTag","tagToRemove","onEditTag","elTag","Truncate","lines","ellipsis","width","isTagsShown","_Task","isUpdatesShown","isImageModalShown","reloadProps","handleNameChange","valueOf","onEditTask","property","removedMember","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","backgroundColor","onRemoveTask","onToggleImageModal","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","onEditGroup","elInputAdd","taskCount","percent","toolTip","round","toFixed","convertToBar","window","innerWidth","Menu","role","anchorEl","keepMounted","open","Boolean","onClose","MenuItem","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_MobileNav","isMenuShown","toggleMenuModal","closeMenuModal","MobileNav","Dashboard","boardMembers","done","stuck","other","currMember","names","working","options","colors","chart","height","stacked","toolbar","show","zoom","enabled","responsive","plotOptions","bar","xaxis","categories","legend","position","offsetY","fill","opacity","series","_Board","isDashboardShown","filteredBoard","lodash","cloneDeep","filterTasks","_getCurrBoard","clearFilter","changedValue","originalValue","editGroup","prevTask","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","groupStart","groupEnd","newTasks","newTask","newGroup","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","innerwidth","groupChanges","Board","_Boards","goToBoard","Boards","_Login","isErrLogin","errMsg","onLogin","resetForm","onGuestLogin","responseFacebook","email","picture","facebookId","userID","initialValues","validate","formValues","errors","autoComplete","component","appId","fields","cssClass","callback","href","Login","_Signup","isErrSignup","onSignup","confirm","test","Signup","_UserProfile","updateProfile","userCreatedBoards","numOfUserTasks","goBack","UserProfile","modal","_UpcomingTasks","isAfter","add","endOf","isBefore","header","groupName","moveToUserProfile","getDaysFromNow","UpcomingTasks","_MyWeek","toggleTodayTasks","isTodayTasksShown","toggleUpcomingTasks","isUpcomingTasksShown","maxDaysLeft","minDaysLeft","belongsToUser","startOf","todaysTasks","getUpcomingTasks","upcomingTasks","applySearch","MyWeek","_MobActivitiesModal","getBoardById","path","App","routes","route","exact","hostname","initialState","userProfile","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1ae00948.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\nlet socket;\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask,\r\n    handleBoardChanges\r\n}\r\nasync function loadBoards() {\r\n    const boards = await httpService.get('board')\r\n    return boards\r\n}\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\nasync function addBoard(loggedUser) {\r\n    const board = {\r\n        boardCreator: {\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        },\r\n        \"name\": \"Board\",\r\n        \"createdAt\": Date.now(),\r\n        \"desc\": 'Enter description here',\r\n        \"members\": [{\r\n            \"_id\": loggedUser._id,\r\n            \"fullName\": loggedUser.fullName,\r\n            \"imgUrl\": loggedUser.imgUrl,\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": Date.now(),\r\n            \"color\": '#1a1c20',\r\n            \"lastUpdated\": Date.now(),\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'Click me!',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": '',\r\n                \"priority\": '',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'Rename here!',\r\n                \"createdAt\": Date.now(),\r\n                \"members\": [],\r\n                \"status\": '',\r\n                \"priority\": '',\r\n                \"dueDate\": Date.now(),\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": []\r\n            }]\r\n        }],\r\n        \"activityLog\": []\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\nfunction addGroup(board, loggedUser) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": Date.now(),\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'Click here!',\r\n            \"createdAt\": Date.now(),\r\n            \"members\": [],\r\n            \"status\": '',\r\n            \"priority\": '',\r\n            \"dueDate\": Date.now(),\r\n            \"updates\": [],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": []\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        const desc = `${loggedUser.fullName} Added a new group.`\r\n        return handleBoardChanges(desc, loggedUser, board)\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\nfunction removeGroup(groupId, board, loggedUser) {\r\n    let group = null;\r\n    board.groups = board.groups.filter(currGroup => {\r\n        const isGroup = currGroup.id === groupId;\r\n        if (isGroup) group = currGroup;\r\n        return !isGroup;\r\n    })\r\n    const desc = `${loggedUser.fullName} Removed group: ${group.name}`\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\nfunction updateGroup(updatedGroup, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\nfunction removeTask(taskId, board, group, loggedUser) {\r\n    let task = null\r\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    board.groups[groupIdx].tasks = board.groups[groupIdx].tasks.filter(currTask => {\r\n        const isTask = currTask.id === taskId\r\n        if (isTask) task = currTask;\r\n        return !isTask;\r\n    })\r\n    if (board.groups[groupIdx].tasks.length === 0) {\r\n        board.groups.splice(groupIdx, 1)\r\n    }\r\n    const desc = `${loggedUser.fullName} Removed task: ${task.name} from group ${group.name}`;\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\nfunction addTask(groupId, taskName, board, loggedUser) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: Date.now(),\r\n        members: [],\r\n        status: '',\r\n        priority: '',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: []\r\n    }\r\n    const groupIdx = board.groups.findIndex(group => group.id === groupId)\r\n    const desc = `${loggedUser.fullName} Added a new task: ${taskName} to group ${board.groups[groupIdx].name}`\r\n    board.groups[groupIdx].tasks.push(task)\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\nfunction updateTask(updatedTask, board, desc, loggedUser) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    return handleBoardChanges(desc, loggedUser, board)\r\n}\r\nfunction handleBoardChanges(desc, loggedUser, board) {\r\n    if (!desc) return updateBoard(board)\r\n    const changes = {\r\n        id: _makeid(),\r\n        changedAt: Date.now(),\r\n        desc,\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n    }\r\n    const updatedBoard = { ...board, activityLog: [changes, ...board.activityLog,] }\r\n    return updateBoard(updatedBoard)\r\n}\r\nfunction updateBoard(boardToSave) {\r\n    socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function updateBoard(boardToSave, desc, loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = boardService.handleBoardChanges(desc, loggedUser, boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function recieveUpdate(boardToSave) {\r\n    return dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function addBoard(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard(loggedUser);\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\nexport function removeGroup(groupId, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function addGroup(board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board, desc, loggedUser)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\nexport function addTask(groupId, taskName, board, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function removeTask(taskId, board, group, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board, group, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editTask(task, board, desc, loggedUser) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board, desc, loggedUser);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------FILTER ACTIONS------------------------\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import httpService from './httpService';\r\nimport socketService from './socketService'\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser,\r\n    logout,\r\n    notifyUsers,\r\n    getCurrUser\r\n}\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    updateUser(loggedUser)\r\n    try {\r\n        return loggedUser\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\nasync function getUserById(userId) {\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\nasync function login(userCred) {\r\n    try {\r\n        console.log('USEr?', userCred)\r\n        const user = await httpService.post('auth/login', userCred);\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\nasync function signup(userCred) {\r\n    const user = {\r\n        isAdmin: false,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return _handleLogin(newUser)\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up', err);\r\n        return Promise.reject(err.response.data);\r\n        // throw err;\r\n    }\r\n}\r\nasync function guestLogin() {\r\n    try {\r\n        const user = await login({ username: 'guest', password: '12345' });\r\n        user.notifications = [{\r\n            byUser: {\r\n                _id: '5f6c5f7e27ed4400175ce1ac',\r\n                imgUrl: 'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600938007/ybmioy3x7smnwhptho3x.jpg',\r\n                fullName: 'Liam Zety'\r\n            },\r\n            content: 'Liam Zety Removed a you from the board Caljul20',\r\n            createdAt: Date.now() - 1000 * 60 * 2\r\n        },\r\n        {\r\n            byUser: {\r\n                _id: '5f6c5ef927ed4400175ce1a7',\r\n                imgUrl: 'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937821/pd8tx7oddwp2wghsp9qt.jpg',\r\n                fullName: 'Osher Kabeda'\r\n            },\r\n            content: 'board: Osher Kabeda Tasked you to task - Learn the ropes',\r\n            createdAt: Date.now() - 1000 * 60 * 3\r\n        },\r\n        {\r\n            byUser: {\r\n                _id: '5f6c5f0227ed4400175ce1aa',\r\n                imgUrl: 'http://res.cloudinary.com/dtg7n0zye/image/upload/v1600937750/ztfvuok0olgwarb9kabo.jpg',\r\n                fullName: 'Roei Arazi'\r\n            },\r\n            content: 'board: Roei Arazi Added you to the board - Caljul20',\r\n            createdAt: Date.now() - 1000 * 60 * 4\r\n        }\r\n        ]\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\nasync function updateUser(user) {\r\n    const updatedUser = await httpService.put(`auth/update/${user._id}`, user)\r\n    return updatedUser\r\n}\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\nfunction getCurrUser() {\r\n    const user = JSON.parse(sessionStorage.getItem('user'));\r\n    return user;\r\n}\r\nasync function notifyUsers(content, members, loggedUser) {\r\n    const users = await loadUsers();\r\n    if (members === 'add') members = [...users]\r\n    const notification = {\r\n        byUser: {\r\n            _id: loggedUser._id,\r\n            fullName: loggedUser.fullName,\r\n            imgUrl: loggedUser.imgUrl\r\n        },\r\n        content,\r\n        createdAt: Date.now()\r\n    }\r\n    members.forEach(member => {\r\n        if (member._id === loggedUser._id) return;\r\n        let userToUpdate = users.find(user => user._id === member._id);\r\n        if (!userToUpdate) {\r\n            console.log('can\\'t updated user:', userToUpdate);\r\n            return;\r\n        }\r\n        userToUpdate.notifications.unshift(notification);\r\n        userService.updateUser(userToUpdate);\r\n        socketService.emit('send-notif', { userId: member._id, notification });\r\n    })\r\n}\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n","import { userService } from \"../../services/userService\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup', err);\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n}\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function logout() {\r\n    return dispatch => {\r\n        try {\r\n            userService.logout();\r\n            dispatch({ type: 'SET_USER', user: null })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t logout');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n// Inside imports\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { guestLogin } from '../store/actions/userActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n        isLoading: false\r\n    }\r\n    componentDidMount() {\r\n        this.video = React.createRef();\r\n    }\r\n\r\n    guestLogin = async () => {\r\n        this.setState({ isLoading: true })\r\n\r\n        await this.props.guestLogin()\r\n        await this.props.loadBoards()\r\n\r\n        this.setState({ isLoading: false })\r\n\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) return (\r\n            <div className=\"loader-container flex justify-center align-center\">\r\n                <img src=\"loading.gif\" alt=\"\" />\r\n            </div>\r\n        )\r\n        return (\r\n            <section className=\"home flex column\">\r\n                <main className=\"home-main flex align-center  \">\r\n                    <div className=\"home-login-sign-cta absolute\">\r\n                        <NavLink to=\"/login\">\r\n                            <button>Login</button>\r\n                        </NavLink>\r\n                        <NavLink to=\"/signup\">\r\n                            <button>Sign-up</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"col-left flex align-center justify-center padding-x-30  column\">\r\n                        <h1>Join the future.</h1>\r\n                        <div className=\"inner-wrapper\">\r\n                            <p>The next step in multi-planning and productivity! <br />\r\n                                <span>Task-us </span> will help you keep track of hundreds of tasks. <br />\r\n                            An efficient way to manage your co-workers / employees. <br />\r\n                            Half the hassle and twice the fun.\r\n                        </p>\r\n                            <button onClick={this.guestLogin} className=\"guest-button \">Try As a Guest!</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-right flex align-center justify-center\">\r\n                        <video onClick={() => this.video.current.play()} ref={this.video} autoPlay muted src=\"taskus-home-video.mp4\"></video>\r\n                    </div>\r\n                </main>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    guestLogin\r\n}\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\nexport function showSnackbar(msg) {\r\n  return dispath => {\r\n    dispath({ type: 'SHOW_SNACKBAR', msg })\r\n  }\r\n}\r\nexport function hideSnackbar() {\r\n  return dispatch => {\r\n    dispatch({ type: 'HIDE_SNACKBAR' })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\nimport { MdDelete } from 'react-icons/md'\r\nimport { AiOutlineRight } from 'react-icons/ai';\r\n// inside imports\r\nimport { updateUser } from '../store/actions/userActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\nimport { userService } from '../services/userService.js';\r\nimport {\r\n    removeBoard, addBoard, toggleBoardbar,\r\n    updateBoard, recieveUpdate, loadBoards\r\n} from '../store/actions/boardActions.js';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: '',\r\n        isModalShown: false,\r\n        selectedBoardName: ''\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n        socketService.on('reloadBoards', () => {\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [notification, ...this.props.loggedUser.notifications] })\r\n        })\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('reloadBoards')\r\n        socketService.off('accept-notif')\r\n    }\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n    onAddBoard = async () => {\r\n        const { loggedUser } = this.props;\r\n        await this.props.addBoard(this.props.loggedUser)\r\n        const notif = `${loggedUser.fullName} added a new board`\r\n        userService.notifyUsers(notif, 'add', loggedUser)\r\n        socketService.emit('add-delete-board')\r\n    }\r\n    onBoardRemove = async () => {\r\n        const { boards, match, history, removeBoard, loggedUser } = this.props;\r\n        const { selectedBoardId } = this.state;\r\n        const board = boards.find(board => board._id === selectedBoardId);\r\n        const notif = `${loggedUser.fullName} deleted ${board.name}`;\r\n        userService.notifyUsers(notif, board.members, loggedUser)\r\n        const { id } = match.params;\r\n        if (boards.length === 1) {\r\n            return;\r\n        }\r\n        await removeBoard(selectedBoardId);\r\n        socketService.emit('add-delete-board')\r\n        this.displayPopup('Removed board.');\r\n        if (id === selectedBoardId) {\r\n            const idx = boards.findIndex(board => board._id !== selectedBoardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n\r\n\r\n    onToggleModal = () => {\r\n        this.setState({ isModalShown: !this.state.isModalShown })\r\n    }\r\n\r\n    handleSearch = () => {\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n    render() {\r\n        const currBoardId = this.props.match.params.id;\r\n        const { isShown, isModalShown, selectedBoardName } = this.state;\r\n        const { loggedUser } = this.props;\r\n        const filteredBoards = this.handleSearch()\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                <div onClick={this.onToggleShown} className=\"board-bar-toggle-container\">\r\n                    <AiOutlineRight style={{ color: this.props.location.pathname.includes('/myweek') && '#151515', transform: isShown && 'rotate(180deg)' }}\r\n                        className=\"board-bar-toggle\" />\r\n                </div>\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            style={{ paddingLeft: (loggedUser._id === board.boardCreator._id || loggedUser.isAdmin) ? '' : '25px' }}\r\n                            className={`flex align-center cursor-pointer ${board._id === currBoardId && 'curr-board'}`}\r\n                            key={idx}\r\n                            onClick={() => this.onMoveToBoard(board._id)} >\r\n                            {\r\n                                (loggedUser._id === board.boardCreator._id || loggedUser.isAdmin) &&\r\n                                <MdDelete onClick={ev => {\r\n                                    ev.stopPropagation()\r\n                                    this.setState({ selectedBoardId: board._id, selectedBoardName: board.name });\r\n                                    this.onToggleModal()\r\n                                }\r\n                                } />\r\n                            }\r\n                            <h5 style={{ color: (loggedUser._id === board.boardCreator._id || loggedUser.isAdmin) ? \"#0085ff\" : \"#333333\" }}>\r\n                                {board.name}\r\n                            </h5>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                {isModalShown && <div className=\"modal-screen-wrapper\" onClick={this.onToggleModal}>\r\n                    <div className=\"confirm-board-delete flex column space-between\">\r\n                        <h1>Are you sure you want to delete {selectedBoardName}?</h1>\r\n                        <p>You can't take this back</p>\r\n                        <section className=\"flex\">\r\n                            <button className=\"cancel-button\" onClick={this.onToggleModal}>Cancel</button>\r\n                            <button className=\"delete-button\" onClick={this.onBoardRemove}>Delete</button>\r\n                        </section>\r\n                    </div>\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate,\r\n    loadBoards,\r\n    updateUser\r\n}\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { IoIosArrowDropdown } from 'react-icons/io'\r\n\r\nexport class Activities extends Component {\r\n\r\n    state = {\r\n        isShown: true,\r\n    }\r\n    toggleIsShown = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { type, activities, getInitials, moveToProfile } = this.props\r\n        return (\r\n            <div className={\r\n                `${type === 'activitiesRead'\r\n                    ? 'activity-list'\r\n                    : 'activity-list-not-read'}\r\n                     column flex  padding-y-15`}>\r\n\r\n                <h1 className=\"flex space-between\">\r\n                    <Fragment>\r\n                        {type === 'activitiesRead' ? 'Activities Read' : 'New Activities'}  {activities.length}\r\n                        <IoIosArrowDropdown\r\n                            onClick={this.toggleIsShown}\r\n                            className={this.state.isShown ? \" toggle-btn rotate0\" : \" toggle-btn rotate90\"} />\r\n\r\n                    </Fragment>\r\n                </h1>\r\n\r\n                {activities.length === 0\r\n                    ? //no activities \r\n                    (type === 'activitiesRead'\r\n                        ? <h3 className=\"padding-x-15\">No read board activities!</h3>\r\n\r\n                        : <h3 className=\"padding-x-15\">No new board activities!</h3>\r\n\r\n                    )\r\n                    : this.state.isShown && // found activities\r\n                    activities.map((activity, idx) => {\r\n                        return (\r\n                            <div key={idx} className=\"activity flex align-center padding-y-15 \">\r\n                                <div className=\"user-img-container flex align-center\">\r\n                                    <div className=\"date-container\">\r\n                                        <p className=\"date-created\">\r\n                                            {moment(activity.createdAt).format(\"DD MMM\")}\r\n                                        </p>\r\n                                    </div>\r\n                                    {activity.byUser.imgUrl ? <img className=\"cursor-pointer\" onClick={() => moveToProfile(activity.byUser._id)} src={activity.byUser.imgUrl} alt=\"\" /> :\r\n                                        <div onClick={() => moveToProfile(activity.byUser._id)} className=\"member-letter flex align-center justify-center\">{getInitials(activity.byUser.fullName)}</div>}\r\n                                    <h2 onClick={() => moveToProfile(activity.byUser._id)}>{activity.byUser.fullName}</h2>\r\n                                </div>\r\n                                <div className=\"activity-desc-container flex align-center\">\r\n                                    <p>\r\n                                        {activity.desc}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Activities } from './Activities';\r\n\r\nclass _ActivitiesModal extends Component {\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n    }\r\n    get activities() {\r\n        const { activityLog } = this.props;\r\n        const { _id } = this.props.loggedUser;\r\n        return [activityLog.filter(activity => activity[_id]), activityLog.filter(activity => !activity[_id])]\r\n    }\r\n    getInitials(fullName) {\r\n        const [firstName, lastName] = fullName.split(' ');\r\n        let initials = firstName.charAt(0).toUpperCase();\r\n        if (lastName) initials += lastName.charAt(0).toUpperCase();\r\n        return initials;\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n    moveToProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    getActivityDates() {\r\n        const activities = this.props.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n    getActivityMembers() {\r\n        const activities = this.props.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.activityLog) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3 className=\"flex justify-center\">Member</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {members.map((member, idx) => <button\r\n                                                        className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3 className=\"flex justify-center\">Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.props.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n                    {/* Activities which are not read */}\r\n                    <Activities getInitials={this.getInitials}\r\n                        activities={activitiesNotRead} moveToProfile={this.moveToProfile}\r\n                    />\r\n                    {/* Activities which are already read */}\r\n                    <Activities type={'activitiesRead'} getInitials={this.getInitials}\r\n                        activities={activities} moveToProfile={this.moveToProfile}\r\n                    />\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const ActivitiesModal = withRouter(_ActivitiesModal)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Fade } from '@material-ui/core';\r\nimport moment from 'moment';\r\n// inside imports\r\nimport { setFilter } from '../store/actions/boardActions';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={props.isFiltersOpen}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member, idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { FiMinus } from 'react-icons/fi';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { IoMdArrowDropdown } from 'react-icons/io';\r\n// inside imports\r\nimport { ActivitiesModal } from './ActivitiesModal';\r\nimport { Filter } from './Filter';\r\nimport socketService from '../services/socketService.js'\r\nimport { Fade } from '@material-ui/core';\r\n\r\nexport class _BoardHeader extends React.Component {\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        isUsersOpen: false,\r\n        elSetting: null,\r\n        isModalShown: false\r\n    }\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        this.searchInput = React.createRef();\r\n        socketService.on('updatedBoard', () => {\r\n            this.setState({ board: this.props.board })\r\n        })\r\n        this.setState({ board: this.props.board, _id: this.props.board._id })\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ board: this.props.board })\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n    }\r\n    handleChangeName = (ev) => {\r\n        this.setState({ board: { ...this.state.board, name: ev.target.value } })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ board: { ...this.state.board, desc: ev.target.value } })\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        let board = this.props.board;\r\n        const { _id } = this.props.loggedUser;\r\n\r\n        if (this.state.isActivitiesOpen) {\r\n            board = {\r\n                ...board,\r\n                activityLog: board.activityLog.map(activity => {\r\n                    activity[_id] = true\r\n                    return activity\r\n                })\r\n            }\r\n        }\r\n        this.props.onEditBoard(board)\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n    }\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n    onToggleUsers = () => {\r\n        this.setState({ isUsersOpen: !this.state.isUsersOpen })\r\n    }\r\n    onRemoveMemberFromBoard = (memberId) => {\r\n        const user = this.state.board.members.find(member => member._id === memberId)\r\n        const desc = `${this.props.loggedUser.fullName} removed ${user.fullName} from ${this.state.board.name}`\r\n        this.setState({ board: { ...this.state.board, members: this.state.board.members.filter(member => member._id !== memberId) } }, () => {\r\n            this.props.onEditBoard(this.state.board, desc)\r\n        })\r\n    }\r\n    onAddUserToBoard = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        const desc = `${this.props.loggedUser.fullName} invited ${newUser.fullName} to ${this.state.board.name}`\r\n\r\n        this.setState({ board: { ...this.state.board, members: [...this.state.board.members, newUser] } }, () => {\r\n            this.props.onEditBoard(this.state.board, desc)\r\n        })\r\n    }\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.onEditBoard(board)\r\n        })\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n\r\n    render() {\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        const { members, boardCreator } = this.state.board\r\n        const { users, loggedUser, filterBy, isBoardShown } = this.props;\r\n        const isFiltering = Object.values(filterBy).some(value => value)\r\n        const usersToAdd = users.filter(user => !members.some(member => member._id === user._id))\r\n        const activitiesNotRead = this.props.board.activityLog.filter(activity => !activity[loggedUser._id])\r\n        const activitiesRead = this.props.board.activityLog.filter(activity => activity[loggedUser._id])\r\n        return (\r\n            <section className=\"board-header flex column padding-x-30\">\r\n                <div className=\"board-header-header flex space-between grow align-center\">\r\n                    <h1 className=\"flex align-center\">\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.board.name}\r\n                            disabled={false}\r\n                            onChange={this.handleChangeName}\r\n                            onBlur={() => {\r\n                                if (this.props.board.name === this.state.board.name) return\r\n                                const desc = `${loggedUser.fullName} Changed the board title from ${this.props.board.name} to ${this.state.board.name}`\r\n                                const board = {\r\n                                    ...this.props.board,\r\n                                    name: this.state.board.name\r\n                                }\r\n                                this.props.onEditBoard(board, desc)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <div className=\"board-header-right relative flex align-center\">\r\n                        <div className=\"board-users flex justify-center\" onClick={this.onToggleUsers}>\r\n                            {members.length === 0 && <div className=\"no-members-container relative\">\r\n                                <img src=\"https://www.flaticon.com/svg/static/icons/svg/847/847969.svg\" alt=\"\" />\r\n                                <FiPlus className=\"no-members-icon-plus\" />\r\n                            </div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    {\r\n                                        member.imgUrl ? <img src={member.imgUrl} alt=\"\" />\r\n                                            :\r\n                                            <div className=\"member-letter\">\r\n                                                {this._getMemeberInitials(member)[0]}\r\n                                                {this._getMemeberInitials(member)[1]}\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                        {this.state.isUsersOpen &&\r\n                            <div className=\"users-modal absolute\">\r\n                                <div className=\"board-users-box\">\r\n                                    <h3>Board Members</h3>\r\n                                    {members.map((member, idx) =>\r\n                                        <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(member._id)}>\r\n                                                {member.imgUrl\r\n                                                    ? <img src={member.imgUrl} alt=\"profile\" />\r\n                                                    : <div className=\"member-letter\">\r\n                                                        {this._getMemeberInitials(member)[0]}\r\n                                                        {this._getMemeberInitials(member)[1]}\r\n                                                    </div>}\r\n                                                <p className=\"member-name\">{member.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser.isAdmin || this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiMinus onClick={() => this.onRemoveMemberFromBoard(member._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"site-users-box\">\r\n                                    <h3>Site Users</h3>\r\n                                    {usersToAdd.map(user => {\r\n                                        return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                            <div className=\"user-box-info flex align-center\" onClick={() => this.goToUserProfile(user._id)}>\r\n                                                {\r\n                                                    user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" />\r\n                                                        : <div className=\"member-letter\">\r\n                                                            {this._getMemeberInitials(user)[0]}\r\n                                                            {this._getMemeberInitials(user)[1]}\r\n                                                        </div>\r\n                                                }\r\n                                                <p className=\"member-name\">{user.fullName}</p>\r\n                                            </div>\r\n                                            {\r\n                                                (loggedUser.isAdmin || this.state.board.boardCreator._id === loggedUser._id) &&\r\n                                                <FiPlus onClick={() => this.onAddUserToBoard(user._id)} />\r\n                                            }\r\n                                        </section>\r\n                                    })}\r\n                                </div>\r\n                            </div>}\r\n                        <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                            <h2>\r\n                                Activities {\" \"}\r\n                                <span style={{ color: activitiesNotRead.length !== 0 ? '#0085ff' : '' }}>\r\n                                    {activitiesNotRead.length}\r\n                                </span> {\" \"} / {activitiesRead.length + activitiesNotRead.length}\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"board-header-footer flex align-center space-between\">\r\n                    <div className=\"board-header-footer-left flex column space-between\">\r\n                        <h3>\r\n                            <ContentEditable\r\n                                onFocus={this.focusText}\r\n                                className=\"content-editable cursor-initial\"\r\n                                innerRef={this.editableDescription}\r\n                                html={this.state.board.desc} // innerHTML of the editable div\r\n                                disabled={false}        // use true to disable editing\r\n                                onChange={this.handleChangeDesc} // handle innerHTML change\r\n                                onBlur={() => {\r\n                                    if (this.state.board.desc === this.props.board.desc) return\r\n                                    const desc = `${loggedUser.fullName} Changed ${this.state.board.name} description to ${this.state.board.desc}`\r\n                                    const board = {\r\n                                        ...this.props.board,\r\n                                        desc: this.state.board.desc\r\n                                    }\r\n                                    this.props.onEditBoard(board, desc)\r\n                                }}\r\n                                onKeyDown={(ev) => {\r\n                                    if (ev.key === 'Enter') {\r\n                                        ev.target.blur()\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </h3>\r\n                        <p className=\"created-by\">Created By:\r\n                            <NavLink to={`/user/${boardCreator._id}`}>\r\n                                {boardCreator.fullName}\r\n                            </NavLink>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"header-options flex\">\r\n                        {isBoardShown && <button className=\"new-group-btn\" onClick={this.props.onAddGroup}>New Group</button>}\r\n                        <div className=\"relative\">\r\n                            {this.props.isModalShown && <div className=\"modal-screen-wrapper\" onClick={this.props.toggleModal}></div>}\r\n                            <button className=\"flex align-center\" onClick={this.props.toggleModal}>\r\n                                <h3>{isBoardShown ? 'Board' : 'Dashboard'}</h3> <IoMdArrowDropdown />\r\n                            </button>\r\n                            <Fade in={this.props.isModalShown}>\r\n                                <div className={`options-modal absolute ${!this.props.isModalShown && 'hidden'}`}>\r\n                                    <p onClick={this.props.showBoard}>Board</p>\r\n                                    <p onClick={this.props.showDashboard}>Dashboard</p>\r\n                                </div>\r\n                            </Fade>\r\n                        </div>\r\n                        {isBoardShown && <div onClick={() => this.searchInput.focus()} className=\"search-outer-container flex align-center\">\r\n                            <input ref={(input) => { this.searchInput = input; }} placeholder=\" Search Tasks\" type='text' onChange={this.props.handleSearch} />\r\n                            <GoSearch />\r\n                        </div>}\r\n                        {isBoardShown && <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }}\r\n                            className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                            {isFiltering && <div className=\"filter-active-indicator\"></div>}\r\n                            <VscListFilter className={isFiltering ? 'filter-active' : ''} />\r\n                            <h2 className={isFiltering ? 'filter-active' : ''}>Filter</h2>\r\n                            <Filter isFiltersOpen={this.state.isFiltersOpen} board={this.props.board} />\r\n                        </div>}\r\n                    </div>\r\n                    <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                        <ActivitiesModal loggedUser={loggedUser} onClearLog={this.onClearLog} onToggleActivities={this.onToggleActivities}\r\n                            boardName={this.state.board.name} activityLog={this.props.board.activityLog} />\r\n                    </div>\r\n                    {\r\n                        this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                    }\r\n\r\n                    {\r\n                        this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                    }\r\n                    {\r\n                        this.state.isUsersOpen && <div onClick={this.onToggleUsers} className='modal-screen-wrapper'></div>\r\n                    }\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div onClick={() => this.props.goToUserProfile(notification.byUser._id)} className=\"user-img-container cursor-pointer\">\r\n                                                {\r\n                                                    notification.byUser.imgUrl ?\r\n                                                        <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                                        :\r\n                                                        <div className=\"member-letter\" >\r\n                                                            {this._getMemeberInitials(notification.byUser)[0]}\r\n                                                            {this._getMemeberInitials(notification.byUser)[1]}\r\n                                                        </div>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex column\">\r\n                                                <h2 className=\"cursor-pointer\" onClick={() => this.props.goToUserProfile(notification.byUser._id)}>\r\n                                                    {notification.byUser.fullName}\r\n                                                </h2>\r\n                                                <p>\r\n                                                    {notification.content}\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            )\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { VscBell } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { RiLogoutBoxLine } from 'react-icons/ri'\r\n// inside imports\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications, logout } from '../store/actions/userActions'\r\n\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n    toggleNotifications = () => {\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n    onLogout = () => {\r\n        this.props.logout()\r\n        this.props.history.push('/login')\r\n    }\r\n    goToUserProfile = (id) => {\r\n        this.props.history.push(`/user/${id}`)\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        const firstName = loggedUser.fullName.split(' ')[0];\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/\">\r\n                        <img className=\"logo-navbar\" src=\"taskus-nav.png\" alt=\"\" />\r\n                    </NavLink>\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <li className=\"icon-container cursor-pointer\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <div className=\"notifications-counter\">\r\n                                    <p >\r\n                                        {loggedUser.notifications.filter(notification => !notification.isRead).length > 10\r\n                                            ? '+9'\r\n                                            : loggedUser.notifications.filter(notification => !notification.isRead).length\r\n                                        }\r\n                                    </p>\r\n                                </div>\r\n                        }\r\n                        <VscBell />\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications goToUserProfile={this.goToUserProfile} removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n                        }\r\n                    </li>\r\n                </ul>\r\n                <div className=\"user-greeting\">Hello {firstName || loggedUser.fullName}</div>\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to={loggedUser ? \"/myweek\" : '/login'}>\r\n                        <li data-title=\"My Week\" className=\"icon-container\"><BsCalendar /></li>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li className=\"icon-container cursor-pointer\"> {loggedUser.imgUrl ?\r\n\r\n                            <img className=\"small-profile-img\" src={loggedUser.imgUrl} alt=\"\" />\r\n                            :\r\n                            <div className=\"member-letter small-profile-img\">\r\n                                {this._getMemeberInitials(loggedUser)[0]}\r\n                                {this._getMemeberInitials(loggedUser)[1]}\r\n                            </div>}</li>\r\n                    </NavLink>\r\n                    <li data-title=\"Logout\" className=\"icon-container\" ><RiLogoutBoxLine onClick={this.onLogout} /></li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications,\r\n    logout\r\n}\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Navbar));","import { Fade } from '@material-ui/core';\r\nimport React from 'react'\r\nimport { FiMinus } from 'react-icons/fi'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    function _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? <div className=\"member-img-container flex relative \">\r\n                {props.members.map((member, idx) => {\r\n                    if (idx > 1) return <div key={member._id} className=\"task-number-of-members\">\r\n                        <span>{props.members.length > 9 ? '+9' : `+${props.members.length - 2}`}</span>\r\n                    </div>\r\n                    return member.imgUrl ?\r\n                        <img key={member._id} className=\"member-img\" src={member.imgUrl} alt=\"\" />\r\n                        :\r\n                        <div key={member._id} className=\"member-letter \">\r\n                            {_getMemeberInitials(member)[0]}\r\n                            {_getMemeberInitials(member)[1]}\r\n                        </div>\r\n                })\r\n                }\r\n                {props.members.length < 3 && <FiPlus className=\"no-members-icon-plus absolute\" />}\r\n\r\n            </div>\r\n                :\r\n                <div className=\"no-members-container\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/847/847969.svg\" alt=\"\" className=\"no-members-icon\" />\r\n                    <FiPlus className=\"no-members-icon-plus\" />\r\n                </div>}\r\n            <Fade in={props.isUsersShown} >\r\n                <div className=\"users-modal modal-fade-in absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map((member, idx) =>\r\n                            <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">\r\n                                        {_getMemeberInitials(member)[0]}\r\n                                        {_getMemeberInitials(member)[1]}\r\n                                    </div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <FiMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map((user, idx) => {\r\n                            return <section key={idx} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">\r\n                                            {_getMemeberInitials(user)[0]}\r\n                                            {_getMemeberInitials(user)[1]}\r\n                                        </div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Fade } from '@material-ui/core'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center \">\r\n\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                    <p>{props.status === 'empty' ? ' ' : props.status}</p>\r\n                </div>\r\n                <Fade in={props.isStatusShown} >\r\n                    <div className=\"label-list absolute flex column align-center modal-fade-in\">\r\n                        <section className=\"label-selector flex align-center justify-center stuck\" onClick={() => props.handleChange('Stuck', 'status')}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center working\" onClick={() => props.handleChange('Working on it', 'status')}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center done\" onClick={() => props.handleChange('Done', 'status')}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center empty\" onClick={() => props.handleChange('', 'status')}>\r\n                            <p> </p>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Fade } from '@material-ui/core';\r\nimport React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props) {\r\n    return (\r\n        <label className=\"date-picker\">\r\n            <Fade >\r\n                <DatePicker\r\n                    selected={props.dueDate}\r\n                    onChange={props.handleDateChange}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                />\r\n            </Fade >\r\n        </label>\r\n    )\r\n}","import React from 'react'\r\nimport { Fade } from '@material-ui/core'\r\n\r\nexport function Priority(props) {\r\n    return (\r\n        <div className=\"label-container relative flex align-center\">\r\n            <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n                <div className=\"task-label-name flex align-center justify-center\">\r\n                    <p>{props.priority}</p>\r\n                </div>\r\n                <Fade in={props.isPriorityShown} >\r\n                    <div className=\"label-list absolute flex column align-center modal-fade-in\">\r\n                        <section className=\"label-selector flex align-center justify-center low\" onClick={() => props.handleChange('Low', 'priority')}>\r\n                            <p>Low</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center medium\" onClick={() => props.handleChange('Medium', 'priority')}>\r\n                            <p>Medium</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center high\" onClick={() => props.handleChange('High', 'priority')}>\r\n                            <p>High</p>\r\n                        </section>\r\n                        <section className=\"label-selector flex align-center justify-center empty-priority\" onClick={() => props.handleChange('', 'priority')}>\r\n                            <p> </p>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const cloudinaryService = {\r\n    uploadImg\r\n}\r\nasync function uploadImg(img) {\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n    formData.append('file', img)\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\n\r\nexport class Reply extends React.Component {\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n    toggleEditMode = (replyTxt) => {\r\n        this.setState({ isEditMode: !this.state.isEditMode, txt: replyTxt })\r\n    }\r\n    updateReply = (newReply) => {\r\n        if (newReply.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newReply.txt = this.state.txt\r\n        const newReplies = this.props.update.replies.map(reply => {\r\n            return reply.id === newReply.id ? newReply : reply\r\n        })\r\n        const update = { ...this.props.update, replies: newReplies }\r\n        this.props.updateNote(update)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n    removeReply = (replyId) => {\r\n        const idx = this.props.update.replies.findIndex(reply => reply.id === replyId)\r\n        const newUpdate = { ...this.props.update }\r\n        const update = newUpdate.replies.splice(idx, 1)\r\n        this.props.updateNote(update)\r\n    }\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n    render() {\r\n        const { reply, idx } = this.props\r\n        return (\r\n            <div key={idx} className=\"reply-box flex column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n                <div className=\"reply-content flex align-center\">\r\n                    {\r\n                        reply.member.imgUrl ? <img src={reply.member.imgUrl} alt=\"\" />\r\n                            : <div className=\"member-letter \">\r\n                                {this._getMemeberInitials(reply.member)[0]}\r\n                                {this._getMemeberInitials(reply.member)[1]}\r\n                            </div>\r\n                    }\r\n\r\n                    <p className=\"reply-name\">{reply.member.fullName}</p>\r\n                    {!this.state.isEditMode ?\r\n                        <p className=\"reply-text\">{reply.txt}</p>\r\n                        :\r\n                        <div className=\"edit-box flex\">\r\n                            <textarea name=\"txt\" onChange={this.handleChange} value={this.state.txt}></textarea>\r\n                            <AiOutlineSend className=\"update-reply-btn\" onClick={() => this.updateReply(reply)} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn  cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeReply(reply.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.toggleEditMode(reply.txt)\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Fragment } from 'react'\r\nimport { AiOutlineSend } from 'react-icons/ai';\r\nimport { HiOutlineDotsHorizontal } from 'react-icons/hi';\r\n// inside imports\r\nimport { Reply } from './Reply';\r\n\r\nexport class Update extends React.Component {\r\n    state = {\r\n        txt: '',\r\n        isEditMode: false,\r\n        isOptionsModal: false\r\n    }\r\n    onReply = (newUpdate) => {\r\n        if (!this.state.txt || this.state.txt.split('').every(letter => letter === ' ')) return\r\n        const newReply = {\r\n            txt: this.state.txt,\r\n            createdAt: Date.now(),\r\n            id: this.props.makeid(),\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const update = this.props.updates.find(update => update.id === newUpdate.id)\r\n        update.replies = [...update.replies, newReply]\r\n        this.props.updateNote(update)\r\n        this.setState({ txt: '' })\r\n    }\r\n    removeUpdate = (updateId) => {\r\n        const updates = this.props.updates.filter(update => update.id !== updateId)\r\n        this.props.sendNote(updates)\r\n    }\r\n    onToggleEditUpdate = () => {\r\n        this.setState({ isEditMode: !this.state.isEditMode })\r\n    }\r\n    editUpdate = (newUpdate) => {\r\n        if (newUpdate.txt === this.state.txt) return this.setState({ isEditMode: false })\r\n        newUpdate.txt = this.state.txt\r\n        const newUpdates = this.props.updates.map(update => {\r\n            return update.id === newUpdate.id ? newUpdate : update\r\n        })\r\n        this.props.sendNote(newUpdates)\r\n        this.setState({ isEditMode: false, txt: '' })\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ [target.name]: target.value })\r\n    }\r\n    toggleOptionsModal = () => {\r\n        this.setState({ isOptionsModal: !this.state.isOptionsModal })\r\n    }\r\n    render() {\r\n        const { update, idx } = this.props\r\n        return (\r\n            <div key={idx} className=\"update-box flex wrap column relative\">\r\n                <HiOutlineDotsHorizontal className=\"options-reply-btn cursor-pointer\" onClick={this.toggleOptionsModal} />\r\n                {this.state.isOptionsModal &&\r\n                    <Fragment>\r\n                        <div onClick={() => {\r\n                            this.toggleOptionsModal()\r\n                        }} className=\"modal-screen-wrapper\"></div>\r\n                        <div className=\"update-options-modal\">\r\n                            <p className=\"remove-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.removeUpdate(update.id)\r\n                            }}>Delete Post</p>\r\n                            <p className=\"edit-reply-btn cursor-pointer\" onClick={() => {\r\n                                this.toggleOptionsModal()\r\n                                this.onToggleEditUpdate()\r\n                            }}>Edit Post</p>\r\n                        </div>\r\n                    </Fragment>\r\n                }\r\n                <div className=\"update-box-header flex align-center\">\r\n                    <img src={update.member.imgUrl} alt=\"\" />\r\n                    <p className=\"member-name\">{update.member.fullName}</p>\r\n                </div>\r\n                {this.state.isEditMode ?\r\n                    <div className=\"update-box-edit flex column relative\">\r\n                        <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                        <AiOutlineSend className=\"submit-edit-btn absolute\" onClick={() => this.editUpdate(update)} />\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                    :\r\n                    <div className=\"update-box-main flex column\">\r\n                        {update.txt && <p className=\"update-text\">{update.txt}</p>}\r\n                        {update.imgUrl && <img src={update.imgUrl} alt=\"\" />}\r\n                    </div>\r\n                }\r\n                <div className=\"update-box-footer flex column\">\r\n                    {update.replies &&\r\n                        <div className=\"replies-box flex column\" style={{ borderTop: `${update.replies.length && '1px solid rgba(109, 109, 109, 0.35)'}` }}>\r\n                            {update.replies.map((reply, idx) =>\r\n                                <Reply key={idx} reply={reply} idx={idx} update={this.props.update}\r\n                                    updateNote={this.props.updateNote} />\r\n                            )}</div>\r\n                    }\r\n                    {!this.state.isEditMode &&\r\n                        <div className=\"reply-footer flex space-between align-center\">\r\n                            <textarea value={this.state.txt} name=\"txt\" onChange={this.handleChange}></textarea>\r\n                            <button className=\"reply-button\" onClick={() => this.onReply(update)}>Reply</button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { AiOutlineClose } from 'react-icons/ai'\r\nimport { BiImage } from 'react-icons/bi';\r\nimport { MdDone } from 'react-icons/md';\r\n// inside imports\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\nimport { Update } from './Update';\r\n\r\nexport class Updates extends React.Component {\r\n    state = {\r\n        reply: {\r\n            txt: ''\r\n        },\r\n        update: {\r\n            id: '',\r\n            txt: '',\r\n            imgUrl: '',\r\n            replies: []\r\n        },\r\n        isLoading: false,\r\n        imageUploaded: false\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ imageUploaded: false })\r\n    }\r\n    handleChange = (ev) => {\r\n        if (ev.target.name === 'file-img') {\r\n            this.setState({ update: { ...this.state.update, img: ev.target.files[0] } }, () => {\r\n                this.uploadImg()\r\n            })\r\n        } else if (ev.target.name === 'txt') {\r\n            this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n        } else {\r\n            this.setState({ reply: { ...this.state.reply, txt: ev.target.value } })\r\n        }\r\n    }\r\n    uploadImg = async () => {\r\n        this.setState({ isLoading: true })\r\n        const res = await cloudinaryService.uploadImg(this.state.update.img, this.state)\r\n        this.setState({ update: { ...this.state.update, imgUrl: res.url }, isLoading: false, imageUploaded: true })\r\n    }\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if ((!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) && !this.state.update.imgUrl) return\r\n        const newNote = {\r\n            id: makeid(),\r\n            createdAt: Date.now(),\r\n            txt: this.state.update.txt,\r\n            imgUrl: this.state.update.imgUrl,\r\n            replies: [],\r\n            member: {\r\n                fullName: this.props.loggedUser.fullName,\r\n                username: this.props.loggedUser.userName,\r\n                _id: this.props.loggedUser.userName,\r\n                imgUrl: this.props.loggedUser.imgUrl\r\n            }\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n        this.setState({ update: { txt: '', imgUrl: '' }, imageUploaded: false })\r\n        this.props.sendNote(updates)\r\n    }\r\n    updateNote = (newUpdate) => {\r\n        const newNotes = [...this.props.updates].map(update => update.id === newUpdate.id ? newUpdate : update)\r\n        this.props.sendNote(newNotes)\r\n    }\r\n    render() {\r\n        if (!this.props.updates) return <h1>Loading...</h1>;\r\n        const { updates } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column\">\r\n                    <AiOutlineClose onClick={this.props.closeModal} />\r\n                    <h1>{this.props.task.name}</h1>\r\n                    <div className=\"updates-header-options flex column\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex align-center\">\r\n                            <textarea name=\"txt\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                        </form>\r\n                        <div className=\"updates-btns flex align-center space-between\">\r\n                            <div className=\"image-uploader flex\">\r\n                                <label data-title=\"Upload Image\" htmlFor={this.props.task.id}>{this.state.isLoading ? <div class=\"loadingio-spinner-spinner-gvjl1rpqs7q\"><div class=\"ldio-subadnemdcd\">\r\n                                    <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                                </div></div> : <BiImage />}\r\n                                </label>\r\n                                <input name=\"file-img\" type=\"file\" id={this.props.task.id} onChange={(this.handleChange)} hidden />\r\n                                {this.state.imageUploaded && <div className=\"image-uploaded flex align-center\"><MdDone /><p> Image Ready!</p></div>}\r\n                            </div>\r\n                            {this.state.isLoading ? <p>Image is uploading..</p> : <button onClick={this.sendNote}>Send</button>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`updates-container  ${!updates.length ? \"flex justify-center align-center\" : \"\"} `}>\r\n                    {\r\n                        !updates.length ? <h1>There are no posts to show.</h1> :\r\n                            updates.map((update, idx) => <Update update={update} key={idx} idx={idx}\r\n                                updates={updates} loggedUser={this.props.loggedUser}\r\n                                sendNote={this.props.sendNote}\r\n                                updateNote={this.updateNote} makeid={makeid} />)\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nfunction makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import React, { Component } from 'react'\r\nimport { BsBookmarkPlus } from 'react-icons/bs';\r\nimport { RiDeleteBack2Line } from 'react-icons/ri';\r\nimport Truncate from 'react-truncate'\r\nimport { Fade } from '@material-ui/core';\r\n\r\nexport class Tags extends Component {\r\n    state = {}\r\n    componentDidMount() {\r\n        this.elTagInput = React.createRef();\r\n        this.elTag = React.createRef();\r\n        this.setState({ tags: JSON.parse(JSON.stringify(this.props.task.tags)) })\r\n    }\r\n    handleChange = (ev, id) => {\r\n        const tags = this.state.tags.map(tag => {\r\n            if (tag.id === id) {\r\n                tag.txt = ev.target.value\r\n            }\r\n            return tag\r\n        })\r\n        this.setState({ tags });\r\n    }\r\n    onAddTag = () => {\r\n        const tags = [...this.state.tags]\r\n        const tagName = this.elTagInput.current.value ? this.elTagInput.current.value : 'New Tag'\r\n        tags.push({ id: this._makeid(), txt: tagName, color: _getRandomColor() })\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagName, 'addTag')\r\n    }\r\n    onRemoveTag = (id) => {\r\n        const tagToRemove = this.state.tags.find(tag => tag.id === id)\r\n        const tags = this.state.tags.filter(tag => tag.id !== id)\r\n        this.setState({ tags });\r\n        this.props.onEditTags(tags, tagToRemove.txt, 'removeTag')\r\n    }\r\n    onEditTag = (idx, tagName, type) => {\r\n        if (this.props.task.tags[idx].txt === this.state.tags[idx].txt) return\r\n        this.props.onEditTags(this.state.tags, tagName, type)\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    _makeid(length = 7) {\r\n        var text = \"\";\r\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        for (var i = 0; i < length; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return text;\r\n    }\r\n    render() {\r\n        if (!this.state.tags || this.state.tags === 0) return <h1>no tags</h1>\r\n        return (\r\n            <div onClick={() => this.props.openModal('tags')} className=\"label-container tags relative\">\r\n                <div className=\"task-label-name flex justify-center align-center \">\r\n                    {this.state.tags.map((tag, idx) => {\r\n                        if (idx > 2) return []\r\n                        if (idx > 1) return (\r\n                            <div key={tag.id} className=\"task-number-of-tags\">\r\n                                <span>{this.state.tags.length > 9 ? '+9' : `+${this.state.tags.length - 2}`}</span>\r\n                            </div>)\r\n                        return (\r\n                            <p key={idx} style={{ color: tag.color }}>\r\n                                <Truncate lines={1} ellipsis={\"...\"} width={75}>\r\n                                    #{idx === this.state.tags.length - 1 ? tag.txt : (idx === 1 ? tag.txt : tag.txt + \",\")}\r\n                                </Truncate>\r\n                            </p>)\r\n                    })}\r\n                </div>\r\n                <Fade in={this.props.isTagsShown}>\r\n                    <div className=\"label-list tags-modal absolute flex column align-center \">\r\n                        <div className=\"tag-add-container  flex justify-center align-center\">\r\n                            <BsBookmarkPlus onClick={(ev) => {\r\n                                this.onAddTag()\r\n                                this.elTagInput.current.value = ''\r\n                            }} />\r\n                            <input onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.onAddTag()\r\n                                    ev.target.value = ''\r\n                                }\r\n                            }} placeholder=\"New tag\" ref={this.elTagInput} type=\"text\" />\r\n                        </div>\r\n                        <section>\r\n                            {this.state.tags.map((tag, idx) => {\r\n                                return (\r\n                                    <div className=\"tag-container flex justify-center align-center\" key={idx}>\r\n                                        <RiDeleteBack2Line className=\"tag-remove-icon\" onClick={() => this.onRemoveTag(tag.id)} />\r\n                                        <input style={{ color: tag.color }} onBlur={(ev) => {\r\n                                            ev.target.blur()\r\n                                            this.onEditTag(idx)\r\n                                        }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                }\r\n                                            }}\r\n                                            onChange={(ev) => this.handleChange(ev, tag.id)} value={tag.txt} type=\"text\" />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction _getRandomColor() {\r\n    var letters = '0123456789ABCDEF';\r\n    var color = '#';\r\n    for (var i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport { MdDelete } from 'react-icons/md'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from 'moment';\r\n\r\n// Inside Imports\r\nimport socketService from '../services/socketService.js'\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\n\r\nclass _Task extends Component {\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n    reloadProps = () => {\r\n        this.setState({ task: this.props.task })\r\n    }\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n    handleNameChange = (ev) => {\r\n        this.setState({ task: { ...this.state.task, name: ev.target.value } });\r\n    }\r\n    handleDateChange = date => {\r\n        const prevDate = moment(this.state.task.dueDate).format('DD/MMM/YYYY')\r\n        const changedDate = moment(date).format('DD/MMM/YYYY')\r\n        if (prevDate === changedDate) return\r\n        this.setState({ task: { ...this.state.task, dueDate: moment(date).valueOf() } }, () => {\r\n            const desc = `${this.props.loggedUser.fullName} changed task ${this.state.task.name} date from ${moment(this.props.task.dueDate).format('DD/MMM/YYYY')} to ${moment(this.state.task.dueDate).format('DD/MMM/YYYY')} at group -${this.props.group.name}`\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n    handleChange = (data, property) => {\r\n        let desc = '';\r\n        this.setState({ task: { ...this.state.task, [property]: data } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} changed task: ${this.state.task.name} ${property} from ${this.props.task[property]} to ${this.state.task[property]} at group - ${this.props.group.name}`\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n            if (!this.state.isUpdatesShown) this.closeModal()\r\n        })\r\n    }\r\n    sendNote = (newUpdates) => {\r\n        let desc = ''\r\n        this.setState({ task: { ...this.state.task, updates: [...newUpdates] } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} sent an update at task: ${this.props.task.name} at group - ${this.props.group.name}`\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: true })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: true })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: true })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: true })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: true })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        let desc = ''\r\n        const removedMember = this.state.task.members.find(member => member._id === memberId)\r\n        this.setState({ task: { ...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId) } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} removed ${removedMember.fullName} from ${this.state.task.name} at group - ${this.props.group.name}`\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n    onAddUserToTask = (userId) => {\r\n        let desc = ''\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task: { ...this.state.task, members: [...this.state.task.members, newUser] } }, () => {\r\n            desc = `${this.props.loggedUser.fullName} tasked ${newUser.fullName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n        this.closeModal()\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onEditTags = (tags, tagName, type) => {\r\n        let desc = ''\r\n        this.setState({ ...this.state, task: { ...this.state.task, tags: JSON.parse(JSON.stringify(tags)) } }, () => {\r\n            if (type === 'addTag') {\r\n                desc = `${this.props.loggedUser.fullName} added tag named ${tagName} to ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            else if (type === 'removeTag') {\r\n                desc = `${this.props.loggedUser.fullName} removed tag named ${tagName} from ${this.state.task.name} on group - ${this.props.group.name}`\r\n            }\r\n            this.props.onEditTask(this.state.task, this.props.task, desc)\r\n        })\r\n    }\r\n    render() {\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const { name, members, status, priority, dueDate, updates, id } = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                {isUpdatesShown &&\r\n                    <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                        <Updates task={this.state.task} updates={updates} members={members} priority={priority} status={status} dueDate={dueDate}\r\n                            loggedUser={this.props.loggedUser} users={this.props.users}\r\n                            sendNote={this.sendNote} handleChange={this.handleChange} handleDateChange={this.handleDateChange} onEditTags={this.onEditTags}\r\n                            onEditTask={this.props.onEditTask} closeModal={this.closeModal}\r\n                        />\r\n                    </div>}\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef} >\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div className=\"task-color-remove\">\r\n                                    <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                    <div className='icon-container'>\r\n                                        <MdDelete className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id, this.props.group) }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"task-title-updates flex align-center space-between grow\">\r\n                                    <h2>\r\n                                        <ContentEditable\r\n                                            onFocus={this.focusText}\r\n                                            className=\"cursor-initial content-editable\"\r\n                                            innerRef={this.contentEditable}\r\n                                            html={name}\r\n                                            disabled={false}\r\n                                            onChange={this.handleNameChange}\r\n                                            onBlur={() => {\r\n                                                const desc = `${this.props.loggedUser.fullName} changed task name from ${this.state.task.name} to ${name} at group - ${this.props.group.name}`\r\n                                                this.props.onEditTask(this.state.task, this.props.task, desc)\r\n                                            }}\r\n                                            onKeyDown={(ev) => {\r\n                                                if (ev.key === 'Enter') {\r\n                                                    ev.target.blur()\r\n                                                }\r\n                                            }} />\r\n                                    </h2>\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative grow\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"task-right flex align-center\">\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                <Tags onEditTags={this.onEditTags}\r\n                                    task={this.state.task} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                            </div>\r\n                        </section>\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} alt=\"\" />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\n// Inside imports\r\nimport socketService from '../services/socketService.js'\r\n\r\nexport class Group extends Component {\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n    reloadProps = () => {\r\n        this.setState({ ...this.state, name: this.props.group.name })\r\n    }\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', this.reloadProps)\r\n        this.setState({ ...this.state, name: this.props.group.name, id: this.props.group.id })\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard', this.reloadProps)\r\n    }\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n    onChangeGroupColor = (color) => {\r\n        try {\r\n            this.props.onEditGroup(this.props.group.id, color, 'color')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n    convertToBar(property) {\r\n        const { tasks } = this.props.group;\r\n        const taskCount = tasks.length;\r\n        const percent = taskCount / 100;\r\n        const data = tasks.reduce((acc, task) => {\r\n            const value = task[property];\r\n            if (value) acc[value] = acc[value] ? acc[value] + 1 : 1;\r\n            return acc;\r\n        }, {});\r\n        const res = [];\r\n        for (let key in data) {\r\n            data[key] /= percent;\r\n            const style = { width: data[key] ? `${data[key]}%` : '0' }\r\n            const toolTip = data[key] ? ` ${key} ${Math.round(taskCount * data[key] / 100)}/${taskCount} ${data[key].toFixed(1)}%` : ''\r\n            res.push(<div key={key} style={style}\r\n                data-title={toolTip}\r\n                className={`precent-bar ${key.toLowerCase()}`}>\r\n            </div>)\r\n        }\r\n        return res;\r\n    }\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const priority = this.convertToBar('priority')\r\n        const status = this.convertToBar('status')\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n        const { group, index } = this.props;\r\n        return (\r\n            <Draggable draggableId={group.id} index={index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={group.id} className={`group ${window.innerWidth > 450 ? 'padding-y-45 padding-x-30' : 'padding-y-15'}`}\r\n                        {...provided.draggableProps}\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n                                <IoIosArrowDropdownCircle style={{ color: group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}>\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n                                <h1 style={{ color: group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(group.id, this.state.name, 'name')\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\"  {...provided.dragHandleProps}>\r\n                                <h3 style={{ color: this.props.group.color }}>Members</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Status</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Due-Date</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Priority</h3>\r\n                                <h3 style={{ color: this.props.group.color }}>Tags</h3>\r\n                            </div>\r\n                        </div>\r\n                        <Droppable droppableId={group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}>\r\n                                    {group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n                        <div className=\"task task-add\">\r\n                            <div className=\"task-color\" style={{ backgroundColor: group.color }}></div>\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                        {window.innerWidth > 450 &&\r\n                            <section className=\"group-precent-container flex\">\r\n                                <div className=\"group-precent flex\">\r\n                                    {status}\r\n                                </div>\r\n                                <div className=\"group-precent flex\">\r\n                                    {priority}\r\n                                </div>\r\n                            </section>\r\n                        }\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n} ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Snackbar, Button } from '@material-ui/core';\r\n// inside imports\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { GiHamburgerMenu } from 'react-icons/gi'\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { BiLogOut } from 'react-icons/bi';\r\nimport { FaRegUser } from 'react-icons/fa';\r\nimport { BsCalendar, BsCardList } from 'react-icons/bs';\r\nimport { MdNotificationsActive } from 'react-icons/md';\r\nimport { AiOutlineHome } from 'react-icons/ai';\r\n\r\nimport socketService from '../services/socketService.js';\r\nimport {recieveUpdate, loadBoards} from '../store/actions/boardActions.js';\r\nimport {updateUser} from '../store/actions/userActions.js'\r\nimport { connect } from 'react-redux';\r\n\r\nexport class _MobileNav extends React.Component {\r\n    state = {\r\n        isMenuShown: false\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n        socketService.on('reloadBoards', () => {\r\n            this.props.loadBoards()\r\n        })\r\n        socketService.on('accept-notif', (notification) => {\r\n            this.props.updateUser({ ...this.props.loggedUser, notifications: [notification, ...this.props.loggedUser.notifications] })\r\n        })\r\n        socketService.emit('user', this.props.loggedUser._id)\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n    componentWillUnmount() {\r\n        socketService.off('updatedBoard')\r\n        socketService.off('reloadBoards')\r\n        socketService.off('accept-notif')\r\n    }\r\n    toggleMenuModal = () => {\r\n        this.setState({ isMenuShown: !this.state.isMenuShown })\r\n    }\r\n    closeMenuModal = () => {\r\n        this.setState({ isMenuShown: false })\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n    render() {\r\n        const { loggedUser, params, members, boardName } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\" flex align-center space-between\">\r\n                    <div className=\"mobile-nav-left flex\">\r\n                        <GiHamburgerMenu onClick={this.toggleMenuModal} />\r\n                        <h1>{boardName ? boardName : loggedUser.fullName}</h1>\r\n                    </div>\r\n                    {boardName &&\r\n                        <div className=\"board-users-container flex\">\r\n\r\n                            {members.length === 0 && <div className=\"user-img-container\"> <CgProfile /></div>}\r\n                            {members.length !== 0 && members.map((member, idx) => {\r\n                                return <div key={idx} className=\"user-img-container\">\r\n                                    {\r\n                                        member.imgUrl ? <img className=\"member-img\" src={member.imgUrl} alt=\"\" />\r\n                                            :\r\n                                            <div className=\"member-letter\">\r\n                                            {this._getMemeberInitials(member)[0]}\r\n                                            {this._getMemeberInitials(member)[1]}\r\n                                        </div>                                    }\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    }\r\n                </nav>\r\n                <section className={`${this.state.isMenuShown && 'animate-menu-modal'} menu-modal flex column align-center`}>\r\n                    <NavLink to=\"/\">\r\n                        <AiOutlineHome />  <h3>Home</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/boards\">\r\n                        <BsCardList /> <h3>Boards List</h3>\r\n                    </NavLink>\r\n                    {params && <NavLink to={`/mob-activities/${params.id}`}>\r\n                        <MdNotificationsActive /> <h3>Activities</h3>\r\n                    </NavLink>}\r\n                    <NavLink to=\"/myweek\">\r\n                        <BsCalendar /> <h3>My Week</h3>\r\n                    </NavLink>\r\n                    <NavLink to={`/user/${loggedUser._id}`}>\r\n                        <FaRegUser /> <h3>My Profile</h3>\r\n                    </NavLink>\r\n                    <NavLink to=\"/login\">\r\n                        <BiLogOut /> <h3>Logout</h3>\r\n                    </NavLink>\r\n                </section>\r\n                {this.state.isMenuShown && <div className=\"modal-screen-wrapper\" onClick={this.closeMenuModal}></div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps={\r\n    loadBoards,\r\n    recieveUpdate,\r\n    updateUser\r\n}\r\n\r\n\r\nexport const MobileNav = connect(mapStateToProps, mapDispatchToProps)(_MobileNav)","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nexport function Dashboard(props) {\r\n    const { board } = props;\r\n    const boardMembers = board.members.map(member => {\r\n        const user = { ...member };\r\n        user.done = 0;\r\n        user['working on it'] = 0;\r\n        user.stuck = 0;\r\n        user.other = 0;\r\n        return user;\r\n    })\r\n\r\n    boardMembers.forEach(member => {\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                if (task.members.some(currMember => currMember._id === member._id)) {\r\n                    task.status ? member[task.status.toLowerCase()]++ : member.other++;\r\n                }\r\n            })\r\n        })\r\n    })\r\n\r\n    const names = [],\r\n        done = [],\r\n        working = [],\r\n        stuck = [],\r\n        other = [];\r\n\r\n    boardMembers.forEach(member => {\r\n        names.push(member.fullName);\r\n        done.push(member.done);\r\n        working.push(member['working on it']);\r\n        stuck.push(member.stuck);\r\n        other.push(member.other)\r\n    });\r\n\r\n    const options = {\r\n        colors: ['#00ca72', '#fdab3d', '#e44258', '#a8a8a8'],\r\n        chart: {\r\n            type: 'bar',\r\n            height: '100%',\r\n            width: '100%',\r\n            stacked: true,\r\n            toolbar: {\r\n                show: true\r\n            },\r\n            zoom: {\r\n                enabled: true\r\n            }\r\n        },\r\n        responsive: [],\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: [\r\n            ],\r\n        },\r\n        legend: {\r\n            position: 'right',\r\n            offsetY: 40\r\n        },\r\n        fill: {\r\n            opacity: 1\r\n        }\r\n    };\r\n\r\n    options.xaxis = { categories: names };\r\n    const series = [\r\n        {\r\n            name: 'Done',\r\n            data: done\r\n        },\r\n        {\r\n            name: 'Working on it',\r\n            data: working\r\n        },\r\n        {\r\n            name: 'Stuck',\r\n            data: stuck\r\n        },\r\n        {\r\n            name: 'Other',\r\n            data: other\r\n        }\r\n    ]\r\n    return (\r\n        <Chart options={options} series={series} type=\"bar\" width={'90%'} height={'75%'} />\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { BsFillPlusCircleFill } from 'react-icons/bs';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport lodash from 'lodash'\r\n// Inside imports\r\nimport { userService } from '../services/userService.js';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,\r\n    addGroup, editGroup, removeGroup,\r\n    addTask, removeTask, editTask,\r\n    clearFilter\r\n}\r\n    from '../store/actions/boardActions'\r\nimport { groupChanges } from '../store/actions/changesActions'\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\nimport { Dashboard } from '../cmps/Dashboard.jsx';\r\n\r\nclass _Board extends Component {\r\n    state = {\r\n        boardId: '',\r\n        txt: '',\r\n        isBoardShown: true,\r\n        isDashboardShown: false,\r\n        isModalShown: false\r\n    }\r\n    async componentDidMount() {\r\n        if (!this.props.loggedUser) this.props.history.push(\"/\")\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n            }\r\n\r\n            if (!this.props.users || !this.props.users.length) {\r\n                await this.props.loadUsers();\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n    onEditBoard = async (newBoard, desc) => {\r\n        const { loggedUser } = this.props;\r\n\r\n        this.props.updateBoard(newBoard, desc, loggedUser)\r\n        userService.notifyUsers(`${newBoard.name}: ${desc}`, newBoard.members, loggedUser)\r\n        if (desc) this.displayPopup('Updated board.')\r\n    }\r\n    applyFilter = (board, filterBy) => {\r\n        const filteredBoard = lodash.cloneDeep(board)\r\n        if (filterBy.groupId) {\r\n            filteredBoard.groups = filteredBoard.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            filteredBoard.groups = filteredBoard.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    ||\r\n                    task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n            })\r\n        }\r\n        filteredBoard.groups = filteredBoard.groups.filter(group => group.tasks.length)\r\n        return filteredBoard\r\n    }\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = async () => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            this.props.addGroup(board, this.props.loggedUser);\r\n            userService.notifyUsers(`${board.name}: ${loggedUser.fullName} added a group.`, board.members, loggedUser)\r\n            this.props.clearFilter();\r\n            this.displayPopup('Added group.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = async (groupId) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId);\r\n        const notif = `${board.name}: ${loggedUser.fullName} removed group ${group.name}`;\r\n        try {\r\n            this.props.removeGroup(groupId, board, this.props.loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed group.')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = async (groupId, changedValue, key) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        if (group[key] === changedValue) return;\r\n        const originalValue = group[key];\r\n        group[key] = changedValue;\r\n        try {\r\n            const desc = `${group.name}: ${loggedUser.fullName} Changed ${key} from ${originalValue} to ${changedValue}`;\r\n            this.props.editGroup(group, board, desc, loggedUser)\r\n            userService.notifyUsers(desc, board.members, loggedUser);\r\n            this.displayPopup('Updated group.')\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = async (taskId, group) => {\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        try {\r\n            const task = group.tasks.find(task => task.id === taskId);\r\n            const notif = `${loggedUser.fullName} Removed the task ${task.name} from ${group.name}`;\r\n            this.props.removeTask(taskId, board, group, loggedUser);\r\n            userService.notifyUsers(notif, board.members, loggedUser);\r\n            this.displayPopup('Removed task.');\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = async (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n        const { loggedUser } = this.props;\r\n        const board = this._getCurrBoard()\r\n        const group = board.groups.find(group => group.id === groupId)\r\n        const notif = ` ${board.name}: ${loggedUser.fullName} Added a task to ${group.name}`;\r\n        try {\r\n            this.props.addTask(groupId, taskName, board, loggedUser)\r\n            userService.notifyUsers(notif, board.members, loggedUser)\r\n            this.props.clearFilter()\r\n            this.displayPopup('Added task.')\r\n\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditTask = async (task, prevTask, desc) => {\r\n        console.log('Task:', task)\r\n        console.log('Preav task:', prevTask);\r\n        // if (lodash.isEqual(task, prevTask)) return;\r\n        const board = this._getCurrBoard()\r\n        const { loggedUser } = this.props;\r\n        this.props.editTask(task, board, desc, this.props.loggedUser)\r\n        userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n        this.displayPopup('Updated task.')\r\n    }\r\n    //---------------------Draggable----------------------\r\n    onDragEnd = async result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n        const board = this._getCurrBoard()\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n            if (groupStart.id === groupEnd.id) {\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    const { loggedUser } = this.props;\r\n                    const desc = `${loggedUser.fullName} Moved ${newTaskToPaste.name} from ${newStartGroup.name} to ${newFinishGroup.name}`\r\n                    this.props.updateBoard(this._getCurrBoard(), desc, loggedUser)\r\n                    userService.notifyUsers(`${board.name}: ${desc}`, board.members, loggedUser)\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n    _getCurrBoard = () => {\r\n        return this.props.boards.find(board => board._id === this.state.boardId)\r\n    }\r\n    showBoard = () => {\r\n        this.setState({ isBoardShown: true, isDashboardShown: false, isModalShown: false })\r\n    }\r\n    showDashboard = () => {\r\n        this.setState({ isDashboardShown: true, isBoardShown: false, isModalShown: false })\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({ isModalShown: !this.state.isModalShown })\r\n    }\r\n    render() {\r\n        const board = this._getCurrBoard()\r\n        const { users, filterBy } = this.props;\r\n        if (!board) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src=\"loading.gif\" alt=\"\" />\r\n                </div>\r\n            )\r\n        }\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        return (\r\n            <section className={`board ${window.innerWidth > 450 ? 'flex' : 'flex column'}`}>\r\n                {window.innerWidth > 450 ?\r\n                    <React.Fragment>\r\n                        <Navbar />\r\n                        <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                    </React.Fragment>\r\n                    :\r\n                    <MobileNav boardName={board.name} members={board.members} params={this.props.match.params} loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"board-container\">\r\n                    {window.innerWidth > 450 && <BoardHeader filterBy={filterBy} loggedUser={this.props.loggedUser} board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} users={users} showBoard={this.showBoard}\r\n                        showDashboard={this.showDashboard} toggleModal={this.toggleModal} isModalShown={this.state.isModalShown}\r\n                        isBoardShown={this.state.isBoardShown} />}\r\n                    {this.state.isBoardShown ?\r\n                        <div className={`groups-container ${window.innerwidth > 450 && 'padding-x-30'}`} style={{ height: `${window.innerWidth < 450 && 94 + 'vh'}` }}>\r\n                            <DragDropContext\r\n                                onDragEnd={this.onDragEnd}>\r\n                                <Droppable droppableId={board._id} type=\"group\">\r\n                                    {(provided, snapshot) =>\r\n                                        <div className={`group-list`}\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.droppableProps} >\r\n                                            {filteredBoard.groups.map((group, index) => {\r\n                                                return <Group key={group.id} index={index}\r\n                                                    onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                    onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup}\r\n                                                    onChangeGroupColor={this.onChangeGroupColor} group={group} users={board.members} />\r\n                                            })}\r\n                                            {provided.placeholder}\r\n                                        </div>\r\n                                    }\r\n                                </Droppable>\r\n                            </DragDropContext>\r\n                            {window.innerWidth < 450 &&\r\n                                <BsFillPlusCircleFill className=\"group-add-btn\" onClick={this.onAddGroup} />\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <Dashboard board={board} />\r\n                    }\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter,\r\n    groupChanges\r\n}\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import { boardService } from '../../services/boardService'\r\nimport socketService from '../../services/socketService.js'\r\nimport { userService } from '../../services/userService.js'\r\n\r\nexport function groupChanges(desc, loggedUser, board) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.handleBoardChanges(desc, loggedUser, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n            const users = await userService.loadUsers();\r\n            const notification = {\r\n                byUser: {\r\n                    fullName: loggedUser.fullName,\r\n                    imgUrl: loggedUser.imgUrl\r\n                },\r\n                content: `${board.name}: ${desc}`,\r\n                createdAt: Date.now()\r\n            }\r\n            board.members.forEach(member => {\r\n                if (member._id === loggedUser._id) return;\r\n                let userToUpdate = users.find(user => user._id === member._id);\r\n                userToUpdate.notifications.unshift(notification);\r\n                userService.updateUser(userToUpdate);\r\n                socketService.emit('send-notif', { memberId: member._id, notification });\r\n            })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t send activities/notif');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BsFillPlusCircleFill, } from 'react-icons/bs';\r\n// inside imports\r\nimport { loadUsers } from '../store/actions/userActions';\r\nimport { addBoard, loadBoards } from '../store/actions/boardActions.js';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\n\r\nclass _Boards extends Component {\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    goToBoard = (boardId) => {\r\n        this.props.history.push(`/board/${boardId}`)\r\n    }\r\n    onAddBoard = () => {\r\n        this.props.addBoard(this.props.loggedUser)\r\n    }\r\n    _getMemeberInitials(member) {\r\n        let [firstName, lastName] = member.fullName.split(\" \")\r\n        let firstNameChar = ''\r\n        let lastNameChar = ''\r\n        if (firstName) firstNameChar = firstName.charAt(0).toUpperCase()\r\n        if (lastName) lastNameChar = lastName.charAt(0).toUpperCase()\r\n        return [firstNameChar, lastNameChar]\r\n    }\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <React.Fragment>\r\n                <MobileNav loggedUser={this.props.loggedUser} />\r\n                <div className=\"boards-list flex column align-center relative\">\r\n                    {this.props.boards.map(board =>\r\n                        <div key={board._id} className=\"board-details flex column\" onClick={() => this.goToBoard(board._id)}>\r\n                            <div className=\"board-details-header flex  space-between\">\r\n                                <h2>{board.name}</h2>\r\n                                <div className=\"board-members-imgs flex\">\r\n                                    {board.members.map(member =>\r\n                                        member.imgUrl ?\r\n                                            <img className=\"member-img\" key={member._id} src={member.imgUrl} alt=\"\" />\r\n                                            :\r\n                                            <div key={member._id} className=\"member-letter member-img\">\r\n                                                {this._getMemeberInitials(member)[0]}\r\n                                                {this._getMemeberInitials(member)[1]}\r\n                                            </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"board-details-main flex column wrap\">\r\n                                {board.groups.map(group => <p style={{ color: group.color }} key={group.id}>{group.name}</p>)}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <BsFillPlusCircleFill onClick={this.onAddBoard} />\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addBoard,\r\n    loadUsers\r\n}\r\nexport const Boards = connect(mapStateToProps, mapDispatchToProps)(_Boards);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaFacebookF, FaUserCircle } from 'react-icons/fa';\r\nimport FacebookLogin from 'react-facebook-login'\r\n// Inside imports\r\nimport { login, guestLogin, signup } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        isErrLogin: false,\r\n        errMsg: ''\r\n    }\r\n    onLogin = async (values, { resetForm }) => {\r\n        try {\r\n            resetForm();\r\n            await this.props.login(values);\r\n            this.setState({ isLoading: true })\r\n            await this.props.loadBoards()\r\n            this.setState({ isLoading: false })\r\n            if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        }\r\n        catch (err) {\r\n            this.setState({ isErrLogin: true, errMsg: 'Wrong username or password' })\r\n            setTimeout(() => {\r\n                this.setState({ isErrLogin: false })\r\n            }, 2000);\r\n        }\r\n\r\n    }\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.setState({ isLoading: true })\r\n        await this.props.loadBoards()\r\n        this.setState({ isLoading: false })\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n    responseFacebook = async (response) => {\r\n        const user = {\r\n            username: response.name,\r\n            email: response.email,\r\n            imgUrl: response.picture.data.url,\r\n            facebookId: response.userID\r\n        }\r\n        await this.props.login(user)\r\n        this.setState({ isLoading: true })\r\n        await this.props.loadBoards()\r\n        this.setState({ isLoading: false })\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        const { isErrLogin, errMsg } = this.state;\r\n        if (this.state.isLoading) return (\r\n            <div className=\"loader-container flex justify-center align-center\">\r\n                <img src=\"loading.gif\" alt=\"\" />\r\n            </div>\r\n        )\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}>\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" autoComplete=\"curren-username\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"password\" autoComplete=\"current-password\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <div>\r\n\r\n                        <button type=\"submit flex\">Login</button>\r\n                        <div type=\"button\" className=\"facebook-btn-container\">\r\n                            <FaFacebookF />\r\n                            <FacebookLogin\r\n                                appId=\"632288707652598\"\r\n                                fields=\"name,email,picture\"\r\n                                cssClass=\"facebook-btn\"\r\n                                callback={this.responseFacebook} />\r\n                        </div>\r\n                    </div>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n            <div className={`sign-login-err-modal flex justify-center align-center ${isErrLogin && \"animate-sign-login-err-modal\"}`}>\r\n                <h2>{errMsg}</h2>\r\n            </div>\r\n        </div>\r\n\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards,\r\n    signup\r\n}\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\n// Inside imports\r\nimport { signup, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        isErrSignup: false,\r\n        errMsg: ''\r\n    }\r\n\r\n    onSignup = async (values, { resetForm }) => {\r\n        resetForm();\r\n        const { username, password, email, fullName } = values;\r\n        try {\r\n            await this.props.signup({ username, password, email, fullName });\r\n            this.setState({ isLoading: true })\r\n            await this.props.loadBoards()\r\n            this.setState({ isLoading: false })\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        } catch (err) {\r\n            console.log('err', err);\r\n            this.setState({ isErrSignup: true, errMsg: err})\r\n            setTimeout(() => {\r\n                this.setState({ isErrSignup: false })\r\n            }, 2000);\r\n        }\r\n    }\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        const {isErrSignup, errMsg} = this.state;\r\n        if (this.state.isLoading) return (\r\n            <div className=\"loader-container flex justify-center align-center\">\r\n                <img src=\"loading.gif\" alt=\"\" />\r\n            </div>\r\n        )\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}>\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"fullName\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"password\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"password\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button className=\"guest-button\" onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <div data-title=\"Back to home\" className=\"go-back\">\r\n                <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n            </div>\r\n            <div className={`sign-login-err-modal flex justify-center align-center ${isErrSignup && \"animate-sign-login-err-modal\"}`}>\r\n                <h2>{errMsg}</h2>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\n// Inside imports\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { userService } from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport socketService from '../services/socketService';\r\nimport { removeBoard, loadBoards } from '../store/actions/boardActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            fullName: '',\r\n            imgUrl: '',\r\n            selectedBoardId: '',\r\n            selectedBoardName: '',\r\n            isModalShown: false\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n        this.props.loadBoards();\r\n        setTimeout(async () => {\r\n            const user = await userService.getUserById(this.props.match.params.id)\r\n            this.setState({ user: { ...user } })\r\n        }, 500);\r\n    }\r\n    async componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.setState({ user: {} }, () => {\r\n                setTimeout(async () => {\r\n                    const user = await userService.getUserById(this.props.match.params.id)\r\n                    this.setState({ user: { ...user } })\r\n                }, 500)\r\n            });\r\n        }\r\n    }\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev.target.files[0])\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    onToggleModal = () => {\r\n        this.setState({ isModalShown: !this.state.isModalShown })\r\n    }\r\n\r\n    displayPopup(msg) {\r\n        this.props.showSnackbar(msg)\r\n        setTimeout(this.props.hideSnackbar, 3000)\r\n    }\r\n\r\n    onBoardRemove = async () => {\r\n        const { boards, match, history, removeBoard, loggedUser } = this.props;\r\n        const { selectedBoardId } = this.state;\r\n        const board = boards.find(board => board._id === selectedBoardId);\r\n        const notif = `${loggedUser.fullName} deleted ${board.name}`;\r\n        userService.notifyUsers(notif, board.members, loggedUser)\r\n        const { id } = match.params;\r\n        if (boards.length === 1) {\r\n            return;\r\n        }\r\n        await removeBoard(selectedBoardId);\r\n        socketService.emit('add-delete-board')\r\n        this.displayPopup('Removed board.');\r\n        if (id === selectedBoardId) {\r\n            const idx = boards.findIndex(board => board._id !== selectedBoardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { email, fullName, imgUrl, _id } = this.state.user;\r\n        if (!_id) {\r\n            return (\r\n                <div className=\"loader-container flex justify-center align-center\">\r\n                    <img src='loading.gif' alt=\"\" />\r\n                </div>\r\n            )\r\n        }\r\n        const [firstName, lastName] = fullName.split(' ');\r\n        let initials = firstName.charAt(0).toUpperCase();\r\n        if (lastName) initials += lastName.charAt(0).toUpperCase()\r\n        const guestId = '5f71dbb63ba1780c44c9a6c9';\r\n        const { loggedUser } = this.props\r\n        const userCreatedBoards = this.props.boards.filter(board => board.boardCreator._id === this.state.user._id)\r\n        const { isModalShown, selectedBoardName } = this.state;\r\n\r\n        let numOfUserTasks = 0\r\n        this.props.boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                group.tasks.forEach(task => {\r\n                    task.members.forEach(member => {\r\n                        if (member && member._id === this.state.user._id) {\r\n                            numOfUserTasks++\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        return (\r\n            <section className={`user-profile flex ${window.innerWidth < 450 && 'column'}`}>\r\n                {window.innerWidth > 450 ?\r\n                    <React.Fragment>\r\n                        <Navbar />\r\n                        <Boardbar />\r\n                    </React.Fragment>\r\n                    : <MobileNav loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"user-container relative\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        {imgUrl ? <img className=\"user-profile-big\" src={imgUrl} alt=\"\" /> :\r\n                            <div className=\"user-profile-big initials flex align-center justify-center\">{initials}</div>}\r\n                    </header>\r\n                    <div className=\"user-details-container relative padding-x-30 padding-y-45 align-center justify-center flex  column\">\r\n                        <FaArrowLeft className=\"go-back-arrow absolute\" onClick={() => this.props.history.goBack()} />\r\n                        {(loggedUser._id === _id && loggedUser._id !== guestId) ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container flex justify-center\">\r\n                            <div className=\"col-left\">\r\n                                <h1>Details</h1>\r\n                                <h3>Email: {email}</h3>\r\n                                <h3>Full Name: {fullName}</h3>\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"col-mid\">\r\n                                <h1>Boards</h1>\r\n                                {\r\n                                    !userCreatedBoards.length\r\n                                        ? <h3>No boards created.</h3>\r\n                                        : <Fragment>\r\n                                            <h3> Boards created by {loggedUser._id === this.props.match.params.id ? 'you' : 'this user:'} </h3>\r\n                                            <div className=\"user-boards-container\">\r\n                                                {\r\n                                                    userCreatedBoards.map((board, idx) => {\r\n                                                        return <li className=\"flex\" key={idx}>\r\n                                                            {\r\n                                                                loggedUser._id === this.props.match.params.id &&\r\n                                                                <MdDelete onClick={ev => {\r\n                                                                    this.setState({ selectedBoardId: board._id, selectedBoardName: board.name });\r\n                                                                    this.onToggleModal()\r\n                                                                }\r\n                                                                } />\r\n                                                            }\r\n                                                            <p onClick={() => this.onMoveToBoard(board._id)}>{board.name}</p>\r\n                                                        </li>\r\n                                                    })\r\n                                                }\r\n\r\n                                            </div>\r\n                                        </Fragment>\r\n                                }\r\n\r\n                            </div>\r\n                            <hr />\r\n\r\n                            <div className=\"col-right\">\r\n                                <h1>Tasks</h1>\r\n                                <h3>Number of tasks assigned to {loggedUser._id === this.props.match.params.id ? 'you' : 'this user:'} : {numOfUserTasks}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container absolute\">\r\n                                <div className=\"user-modal-header padding-x-15 padding-y-15 flex justify-center align-center\">\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        :\r\n                                        <div className=\"user-profile-big initials flex align-center justify-center\">{initials}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"user-modal-main\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" onSubmit={this.updateProfile}>\r\n                                        <input value={this.state.user.email} autoComplete=\"current-email\" onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} autoComplete=\"current-username\" onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.fullName} autoComplete=\"current-fullname\" onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n                </div>\r\n                {isModalShown && <div className=\"modal-screen-wrapper\" onClick={this.onToggleModal}>\r\n                    <div className=\"confirm-board-delete flex column space-between\">\r\n                        <h1>Are you sure you want to delete {selectedBoardName}?</h1>\r\n                        <p>You can't take this back</p>\r\n                        <section className=\"flex\">\r\n                            <button className=\"cancel-button\" onClick={this.onToggleModal}>Cancel</button>\r\n                            <button className=\"delete-button\" onClick={this.onBoardRemove}>Delete</button>\r\n                        </section>\r\n                    </div>\r\n                </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser,\r\n    removeBoard,\r\n    showSnackbar\r\n}\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React, { Component} from 'react'\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { IoIosArrowDropdown } from 'react-icons/io';\r\n\r\nclass _UpcomingTasks extends Component {\r\n    state = {\r\n        isShown: true\r\n    }\r\n    getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment().add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('MMM DD')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    }\r\n    moveToUserProfile(userId) {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    toggleIsShown = () => {\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    render() {\r\n        const { tasks, header } = this.props;\r\n        return <div className=\"upcoming-tasks\">\r\n            <header className=\"flex space-between align-center\">\r\n                <h2 className=\"tasks-header\">{`${header}: (${tasks.length})`}</h2>\r\n                <IoIosArrowDropdown onClick={this.toggleIsShown}\r\n                    className={this.state.isShown ? \"toggle-btn rotate0\" : \"toggle-btn rotate90\"} />\r\n            </header>\r\n            <div className={`upcoming-tasks-container ${!this.state.isShown && 'not-shown'}`}>\r\n                {tasks.map(task => <div\r\n                    key={task.id}\r\n                    className=\"task-preview space-between align-center\">\r\n                    <div className=\"left-column\">\r\n                        <p className=\"task-preview-name\">{task.name}</p>\r\n                        <p className=\"task-location\">At: <span onClick={() => this.props.history.push(`/board/${task.boardId}`)}>{`${task.boardName} > ${task.groupName}`}</span></p>\r\n                    </div>\r\n                    <section className=\"right-column flex align-center space-between\">\r\n                        {/* <div className={`label-box flex align-center ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div> */}\r\n                        <div className=\"user-img-container flex justify-center align-center\">\r\n                            {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => this.moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} /> :\r\n                                <div onClick={() => this.moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                        </div>\r\n                        <div className=\"deadline-container flex align-center\" onClick={() => this.props.history.push(`/board/${task.boardId}`)}>\r\n                            <h2 >{this.getDaysFromNow(task.dueDate)}</h2>\r\n                        </div>\r\n                    </section>\r\n                </div>)}\r\n\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    }\r\n\r\n}\r\nexport const UpcomingTasks = withRouter(_UpcomingTasks)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\n// Inside imports\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { MobileNav } from '../mobile-pages/MobileNav';\r\nimport { UpcomingTasks } from '../cmps/my-week-cmps/UpcomingTasks';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: '',\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n    }\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = 0) {\r\n        const tasks = [];\r\n        const { boards, loggedUser } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    task.groupName = group.name;\r\n                    const belongsToUser = task.members.some(member => member._id === loggedUser._id)\r\n                    const isAfter = minDaysLeft ? moment(task.dueDate).isAfter(moment().add(minDaysLeft, 'days').endOf('day')) : true;\r\n                    return moment(task.dueDate).isBefore(moment().add(maxDaysLeft, 'days').startOf('day'))\r\n                        && isAfter && belongsToUser\r\n                }));\r\n            })\r\n        })\r\n        return tasks;\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n    applySearch(tasks, searchVal) {\r\n        return tasks.filter(task => task.name.toLowerCase().includes(searchVal.toLowerCase()))\r\n    }\r\n    toggleTodayTasks = () => {\r\n        this.setState({ isTodayTasksShown: !this.state.isTodayTasksShown })\r\n\r\n    }\r\n    toggleUpcomingTasks = () => {\r\n        this.setState({ isUpcomingTasksShown: !this.state.isUpcomingTasksShown })\r\n    }\r\n    render() {\r\n        let todaysTasks = this.getUpcomingTasks(1);\r\n        let upcomingTasks = this.getUpcomingTasks(7, 1);\r\n        const { searchVal } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        const taskCount = todaysTasks.length + upcomingTasks.length;\r\n        if (searchVal) {\r\n            todaysTasks = this.applySearch(todaysTasks, searchVal)\r\n            upcomingTasks = this.applySearch(upcomingTasks, searchVal)\r\n        }\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                {\r\n                    window.innerWidth > 450 ?\r\n                        <React.Fragment>\r\n                            <Navbar />\r\n                            <Boardbar />\r\n                        </React.Fragment>\r\n                        :\r\n                        <MobileNav loggedUser={this.props.loggedUser} />\r\n                }\r\n                <div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}\r\n                                    {taskCount ? `You have ${taskCount} assignments this week.` : 'You have no assignments this week'}</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <input className=\"task-search\" onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                    {taskCount ?\r\n                        <Fragment>\r\n                            <UpcomingTasks header=\"Today\" tasks={todaysTasks} />\r\n                            <UpcomingTasks header=\"Upcoming\" tasks={upcomingTasks} />\r\n                        </Fragment> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(_MyWeek);","import React, { Component, Fragment } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport { VscListFilter } from 'react-icons/vsc';\r\nimport { connect } from 'react-redux';\r\n// inside imports\r\nimport { loadBoards, updateBoard } from '../store/actions/boardActions'\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport { Activities } from '../cmps/Activities';\r\n\r\n\r\nexport class _MobActivitiesModal extends Component {\r\n    state = {\r\n        isOrderReversed: false,\r\n        isFilterOpen: false,\r\n        filterBy: {},\r\n        searchVal: '',\r\n    }\r\n    async componentDidMount() {\r\n        console.log('AM I HERE',)\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.getBoardById(this.props.match.params.id)\r\n    }\r\n    getBoardById = (id) => {\r\n        const board = this.props.boards.find(board => board._id === id)\r\n        this.setState({ ...this.state, board })\r\n    }\r\n    get activities() {\r\n        const { activityLog } = this.state.board;\r\n        return [\r\n            activityLog.filter(activity => activity[this.props.loggedUser._id]),\r\n            activityLog.filter(activity => !activity[this.props.loggedUser._id])\r\n        ]\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n    toggleFilter = () => {\r\n        this.setState({ isFilterOpen: !this.state.isFilterOpen });\r\n    }\r\n    onSetFilter(key, value) {\r\n        const filterBy = { ...this.state.filterBy }\r\n        if (filterBy[key] === value) value = '';\r\n        this.setState({ filterBy: { ...filterBy, [key]: value } })\r\n    }\r\n    getActivityDates() {\r\n        const activities = this.state.board.activityLog;\r\n        const dates = activities.reduce((acc, activity) => {\r\n            const date = moment(activity.createdAt).format('DD MMM');\r\n            acc[date] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(dates);\r\n    }\r\n    getActivityMembers() {\r\n        const activities = this.state.board.activityLog;\r\n        const members = activities.reduce((acc, activity) => {\r\n            acc[activity.byUser.fullName] = '';\r\n            return acc;\r\n        }, {})\r\n        return Object.keys(members)\r\n    }\r\n    applyFilter(activities) {\r\n        let res = [...activities];\r\n        const { filterBy, searchVal } = this.state;\r\n        if (filterBy.date) res = res.filter(activity => moment(activity.createdAt).format('DD MMM') === filterBy.date);\r\n        if (filterBy.member) res = res.filter(activity => activity.byUser.fullName === filterBy.member)\r\n        if (searchVal) res = res.filter(activity => {\r\n            return activity.desc.toLowerCase().includes(searchVal)\r\n                || activity.byUser.fullName.toLowerCase().includes(searchVal)\r\n        })\r\n        return res;\r\n    }\r\n\r\n    onClearLog = () => {\r\n        const board = {\r\n            ...this.state.board,\r\n            activityLog: []\r\n        }\r\n        this.setState({ board }, () => {\r\n            this.props.updateBoard(board)\r\n        })\r\n    }\r\n\r\n    getInitials(fullName) {\r\n        const [firstName, lastName] = fullName.split(' ');\r\n        let initials = firstName.charAt(0).toUpperCase();\r\n        if (lastName) initials += lastName.charAt(0).toUpperCase();\r\n        return initials;\r\n    }\r\n\r\n    moveToProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n    onToggleActivities = () => {\r\n\r\n        let board = this.state.board;\r\n        const { _id } = this.props.loggedUser;\r\n\r\n        board = {\r\n            ...board,\r\n            activityLog: board.activityLog.map(activity => {\r\n                activity[_id] = true\r\n                return activity\r\n            })\r\n        }\r\n        console.log('BOARD:', board)\r\n        this.props.updateBoard(board, '', this.props.loggedUser)\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n        this.props.history.push(`/board/${this.props.match.params.id}`)\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.board) return <h1>Loading...</h1>\r\n        const { isFilterOpen, filterBy, searchVal } = this.state;\r\n        let [activities, activitiesNotRead] = this.activities;\r\n        const dates = this.getActivityDates();\r\n        const members = this.getActivityMembers();\r\n        activities = this.applyFilter(activities)\r\n        activitiesNotRead = this.applyFilter(activitiesNotRead)\r\n\r\n        return (\r\n            <section className=\"activities flex column\">\r\n                <header className=\"padding-x-15 padding-y-15\">\r\n                    <FaArrowLeft onClick={this.onToggleActivities} className=\"go-back-arrow\" />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input value={searchVal} onChange={this.handleChange} type=\"text\" placeholder=\"Search\" />\r\n                        <div className=\"filter-outer-container flex relative\">\r\n                            <button className=\"flex align-center\" onClick={this.toggleFilter}><VscListFilter /> Filter</button>\r\n                            {isFilterOpen &&\r\n                                <Fragment>\r\n                                    <div className=\"modal-screen-wrapper\" onClick={this.toggleFilter}></div>\r\n                                    <Fade in={true}>\r\n                                        <div className=\"filter-modal flex absolute\">\r\n                                            <section className=\"activity-member-filter\">\r\n                                                <h3>Member</h3>\r\n                                                {members.map((member, idx) => <button\r\n                                                    className={filterBy.member === member ? 'remove-filter-btn' : ''}\r\n                                                    key={idx}\r\n                                                    onClick={() => this.onSetFilter('member', member)}>{member}</button>)}\r\n                                            </section>\r\n                                            <section className=\"activity-date-filter\">\r\n                                                <h3>Date</h3>\r\n                                                <div className=\"filter-list flex justify-center align-center column\">\r\n                                                    {dates.map((date, idx) => <button\r\n                                                        className={filterBy.date === date ? 'remove-filter-btn' : ''}\r\n                                                        key={idx}\r\n                                                        onClick={() => this.onSetFilter('date', date)}>{date}</button>)}\r\n                                                </div>\r\n                                            </section>\r\n                                        </div>\r\n                                    </Fade>\r\n                                </Fragment>\r\n                            }\r\n                            <button onClick={this.onClearLog}>Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div className=\"all-activities-container\">\r\n\r\n                    <Activities getInitials={this.getInitials}\r\n                        activities={activitiesNotRead} moveToProfile={this.moveToProfile} />\r\n\r\n                    <Activities type={'activitiesRead'} getInitials={this.getInitials}\r\n                        activities={activities} moveToProfile={this.moveToProfile} />\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateBoard,\r\n}\r\nexport const MobActivitiesModal = connect(mapStateToProps, mapDispatchToProps)(_MobActivitiesModal);","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Boards } from './pages/Boards.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\nimport { MobActivitiesModal } from './mobile-pages/MobActivitiesModal.jsx';\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/boards',\r\n        component: Boards\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    },\r\n    {\r\n        path: '/mob-activities/:id',\r\n        component: MobActivitiesModal\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { userService } from '../../services/userService'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    loggedUser: userService.getCurrUser(),\r\n    userProfile: null\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return {\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n      return {\r\n        ...state,\r\n        isSnackbarShown: false,\r\n        snackbarTxt: ''\r\n      }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}