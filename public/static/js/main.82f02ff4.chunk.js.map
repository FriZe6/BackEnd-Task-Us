{"version":3,"sources":["services/httpService.js","services/socketService.js","services/boardService.js","store/actions/boardActions.js","pages/Home.jsx","store/actions/systemActions.js","cmps/Boardbar.jsx","cmps/Activities.jsx","cmps/Filter.jsx","cmps/BoardHeader.jsx","cmps/Notifications.jsx","services/userService.js","store/actions/userActions.js","cmps/Navbar.jsx","cmps/task-cmps/Members.jsx","cmps/task-cmps/Status.jsx","cmps/task-cmps/Date.jsx","cmps/task-cmps/Priority.jsx","services/cloudinaryService.js","cmps/task-cmps/Updates.jsx","cmps/Task.jsx","cmps/task-cmps/Tags.jsx","cmps/Group.jsx","cmps/Popup.jsx","pages/Board.jsx","pages/Login.jsx","pages/Signup.jsx","pages/UserProfile.jsx","pages/MyWeek.jsx","routes.js","App.jsx","services/serviceWorker.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/reducers/systemReducer.js","store/store.js","index.js"],"names":["axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","status","window","location","assign","socket","setup","io","terminate","on","eventName","cb","off","emit","boardService","loadBoards","addBoard","removeBoard","boardId","httpService","updateBoard","addGroup","board","group","_makeid","groups","push","err","removeGroup","groupId","filter","id","updateGroup","updatedGroup","map","addTask","removeTask","updateTask","updatedTask","tasks","task","boards","boardToSave","echo","socketService","_id","boardCreator","newBoard","taskId","taskName","name","createdAt","members","priority","dueDate","Date","now","updates","lastUpdated","isSelected","posts","tags","length","text","possible","i","charAt","Math","floor","random","dispatch","type","_Home","state","this","props","className","to","Component","mapDispatchToProps","Home","connect","boardReducer","showSnackbar","msg","dispath","hideSnackbar","_Boardbar","anchorEl","selectedBoardId","isSnackbarOpen","isShown","searchVal","handleMenuOpen","ev","setState","currentTarget","handleMenuClose","onBoardRemove","match","history","params","setTimeout","idx","findIndex","onToggleShown","toggleBoardbar","handleSearchChange","target","value","handleSearch","toLowerCase","includes","updatedBoard","recieveUpdate","isBoardbarShown","filteredBoards","Tooltip","enterDelay","TransitionComponent","Zoom","title","arrow","style","color","pathname","onClick","onChange","placeholder","key","onMoveToBoard","Menu","role","keepMounted","open","Boolean","onClose","MenuItem","Boardbar","withRouter","Activities","isOrderReversed","filteredActivities","activityLog","activitiy","description","toLocaleLowerCase","byUser","fullName","reverseOrder","sort","activitiy1","activitiy2","onToggleActivities","boardName","data-title","size","activity","src","imgUrl","alt","Truncate","lines","ellipsis","width","moment","fromNow","setFilter","Filter","filterBy","onSetFilter","filterKey","filterValue","dates","forEach","date","format","formatted","getBoardDates","Fade","in","member","memberId","taskPriority","taskStatus","_BoardHeader","isActivitiesOpen","isFiltersOpen","elSetting","handleChangeName","handleChangeDesc","focusText","document","execCommand","onToggleFilters","editableName","React","createRef","editableDescription","prevProps","prevState","onFocus","innerRef","html","disabled","onBlur","onEditBoard","onKeyDown","blur","onAddGroup","BoardHeader","Notifications","isModalOpen","onRemoveNotifications","removeNotifications","loggedUser","notifications","Fragment","notification","content","users","userService","loadUsers","getUserById","login","signup","guestLogin","markAsRead","updateUser","isRead","userId","user","userCred","isAdmin","birthDay","company","phoneNumber","newUser","username","password","userIdx","_Navbar","isNotificationShown","toggleNotifications","onMarkAsRead","some","Navbar","userReducer","Members","usersToAdd","openModal","toUpperCase","isUsersShown","goToUserProfile","onRemoveMemberFromTask","onAddUserToTask","Status","split","isStatusShown","handleChange","selected","handleDateChange","dateFormat","Priority","isPriorityShown","cloudinaryService","uploadImg","taskState","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","Updates","update","txt","sendNote","preventDefault","every","letter","newImg","onToggleImageModal","isImageModalShown","onSubmit","htmlFor","hidden","_Task","isUpdatesShown","isTagsShown","handleNameChange","valueOf","onEditTask","newUpdates","closeModal","find","contentEditable","draggableId","index","provided","snapshot","isDragging","draggableProps","dragHandleProps","ref","backgroundColor","onRemoveTask","Task","Group","ElGroupSettings","elGroupColors","handleColorsOpen","handleColorsToggle","onChangeGroupColor","newGroup","onEditGroup","elInputAdd","onRemoveGroup","droppableId","isDraggingOver","droppableProps","onToggleUpdates","onAddTask","current","action","Popup","isSnackbarShown","systemReducer","snackbarShown","snackbarTxt","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","Button","_Board","boardDescription","applyFilter","filteredBoard","JSON","parse","stringify","filterTasks","clearFilter","changedValue","originalValue","editGroup","editTask","onDragEnd","result","destination","source","newGroups","Array","from","draggedGroup","splice","groupStart","groupEnd","newTasks","newTask","newIdx","startTasks","newStartGroup","endTasks","newTaskToPaste","newFinishGroup","startIdx","endIdx","handleBoardBarSearch","val","boardBarSearch","Board","_Login","onLogin","values","resetForm","onGuestLogin","initialValues","validate","formValues","errors","component","href","Login","_Signup","onSignup","email","confirm","test","autoComplete","Signup","_UserProfile","passowrd","toggleModal","updateProfile","UserProfile","modal","_MyWeek","moveToUserProfile","maxDaysLeft","minDaysLeft","isBefore","add","isAfter","task1","task2","endOf","upcomingTasks","getUpcomingTasks","firstName","getDaysFromNow","path","App","routes","route","exact","hostname","initialState","userProfile","isLoading","mainReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"6TAOIA,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGN,WACPC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFtB,WAIND,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALvB,WAOPD,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARtB,WAUJD,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BL,EAAM,CACpBS,IAAI,GAAD,OA1BT,SA0BS,OAAgBL,GACnBI,SACAH,SALZ,cAEcK,EAFd,yBAOeA,EAAIL,MAPnB,sCASQM,QAAQC,IAAR,qBAA0BJ,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFM,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,QAC7BC,OAAOC,SAASC,OAAO,YAZnC,+D,0BCrBIC,E,kBAEW,GACXC,MAOJ,WACIT,QAAQC,IAAI,0BACZO,EAASE,IAd+B,MAMxCC,UAWJ,WACIH,EAAS,MAXTI,GAcJ,SAAYC,EAAWC,GACnBN,EAAOI,GAAGC,EAAWC,IAdrBC,IAiBJ,SAAaF,EAAWC,GACpBN,EAAOO,IAAIF,EAAWC,IAjBtBE,KAoBJ,SAAcH,EAAWnB,GACrBc,EAAOQ,KAAKH,EAAWnB,KC9BpB,IAAMuB,EAAe,CACxBC,W,2CACAC,S,2CACAC,YAqBJ,SAAqBC,GACjB,OAAOC,EAAA,gBAA4BD,KArBnCE,cACAC,SAuHJ,SAAkBC,GACd,IAAMC,EAAQ,CACV,GAAMC,IACN,KAAQ,QACR,UAAa,OACb,MAAS,UACT,YAAe,aACf,aAAe,EACf,KAAQ,GACR,QAAW,CAAC,CACR,KAAQ,OACR,KAAQ,aAEZ,MAAS,CAAC,CACN,GAAMA,IACN,KAAQ,SACR,UAAa,cACb,QAAW,GACX,OAAU,gBACV,SAAY,MACZ,QAAW,aACX,QAAW,CACP,CACI,IAAO,yBACP,OAAU,cAEd,CACI,IAAO,yFACP,OAAU,cAGlB,YAAe,YACf,YAAc,EACd,MAAS,GACT,KAAQ,CAAC,0DAA2D,SAG5E,IAGI,OAFAF,EAAMG,OAAOC,KAAKH,GAClBH,EAAYE,GACLA,EACT,MAAOK,GAEL,MADA9B,QAAQC,IAAI,oCACN6B,IAjKVC,YAqKJ,SAAqBC,EAASP,GAG1B,OAFAA,EAAMG,OAASH,EAAMG,OAAOK,QAAO,SAAAP,GAAK,OAAIA,EAAMQ,KAAOF,KACzDT,EAAYE,GACLA,GAvKPU,YA0KJ,SAAqBC,EAAcX,GAG/B,OAFAA,EAAMG,OAASH,EAAMG,OAAOS,KAAI,SAAAX,GAAK,OAAIA,EAAMQ,KAAOE,EAAaF,GAAKE,EAAeV,KACvFH,EAAYE,GACLA,GA5KPa,Q,4CACAC,W,8CACAC,WA8MJ,SAAoBC,EAAahB,GAM7B,OALAA,EAAMG,OAASH,EAAMG,OAAOS,KAAI,SAAAX,GAE5B,OADAA,EAAMgB,MAAQhB,EAAMgB,MAAML,KAAI,SAAAM,GAAI,OAAIA,EAAKT,KAAOO,EAAYP,GAAKO,EAAcE,KAC1EjB,KAEXH,EAAYE,GACLA,I,4CAjNX,4BAAA7B,EAAA,sEACyB0B,EAAA,SADzB,cACUsB,EADV,yBAEWA,GAFX,4C,sBAKA,SAASrB,EAAYsB,GAA2B,IAAdC,IAAa,yDAG3C,OAFIA,GAAMC,EAAc/B,KAAK,cAAe6B,GAC5CvB,EAAA,gBAAyBuB,EAAYG,KAAOH,GACrCA,E,4CAOX,8BAAAjD,EAAA,6DACU6B,EAAQ,CACVwB,aAAc,CACV,SAAY,YACZ,OAAU,mCAEd,KAAQ,QACR,UAAa,aACb,YAAe,yBACf,QAAW,CAAC,CACR,SAAY,YACZ,OAAU,oCAEd,OAAU,CAAC,CACP,GAAMtB,IACN,KAAQ,UACR,UAAa,OACb,MAAS,SACT,YAAe,aACf,aAAe,EACf,KAAQ,GACR,QAAW,CAAC,CACR,KAAQ,OACR,KAAQ,aAEZ,MAAS,CAAC,CACN,GAAMA,IACN,KAAQ,SACR,UAAa,cACb,QAAW,GACX,OAAU,QACV,SAAY,MACZ,QAAW,cACX,QAAW,GACX,YAAe,YACf,YAAc,EACd,MAAS,GACT,KAAQ,CAAC,CAAE,IAAO,2DAA6D,CAAE,IAAO,QACzF,CACC,GAAMA,IACN,KAAQ,SACR,UAAa,cACb,QAAW,GACX,OAAU,gBACV,SAAY,MACZ,QAAW,cACX,QAAW,GACX,YAAe,YACf,YAAc,EACd,MAAS,GACT,KAAQ,CAAC,CAAE,IAAO,2DAA6D,CAAE,IAAO,WAGhG,YAAe,CAAC,CACZ,GAAMA,IACN,UAAa,aACb,OAAU,CACN,OAAU,YACV,SAAY,gBAEhB,YAAe,+BACf,KAAQ,CACJ,GAAMA,IACN,KAAQ,kBAGhB,CACI,UAAa,YACb,OAAU,CACN,OAAU,YACV,SAAY,gBAEhB,YAAe,+CACf,MAAS,CACL,GAAMA,IACN,KAAQ,aAGhB,CACI,UAAa,cACb,OAAU,CACN,OAAU,YACV,SAAY,gBAEhB,YAAe,uBACf,MAAS,CACL,GAAMA,IACN,KAAQ,eAvFxB,SA4F2BL,EAAA,QAA0BG,GA5FrD,cA4FUyB,EA5FV,yBA6FWA,GA7FX,4C,kEA2JA,WAA0BC,EAAQ1B,GAAlC,SAAA7B,EAAA,6DACI6B,EAAMG,OAASH,EAAMG,OAAOS,KAAI,SAAAX,GAE5B,OADAA,EAAMgB,MAAQhB,EAAMgB,MAAMT,QAAO,SAAAU,GAAI,OAAIA,EAAKT,KAAOiB,KAC9CzB,KAEXH,EAAYE,GALhB,kBAMWA,GANX,4C,kEAUA,WAAuBO,GAAvB,+BAAApC,EAAA,6DAAgCwD,EAAhC,+BAA2C,mBAAoB3B,EAA/D,uBACUkB,EAAO,CACTT,GAAIP,IACJ0B,KAAMD,EACNE,UAAW,cACXC,QAAS,GACTnD,OAAQ,OACRoD,SAAU,MACVC,QAASC,KAAKC,MACdC,QAAS,GACTC,YAAaH,KAAKC,MAClBG,YAAY,EACZC,MAAO,GACPC,KAAM,CAAC,0DAA2D,OAEtEvC,EAAMG,OAAOS,KAAI,SAAAX,GAEb,OADIA,EAAMQ,KAAOF,GAASN,EAAMgB,MAAMb,KAAKc,GACpCjB,KAEXH,EAAYE,GAnBhB,kBAoBWA,GApBX,4C,sBAgCA,SAASE,IAIL,IAJ0B,IAAbsC,EAAY,uDAAH,EAClBC,EAAO,GACPC,EAAW,iEAENC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAGhE,OAAOC,ECvOJ,SAAShD,IAEZ,8CAAO,WAAMuD,GAAN,eAAA7E,EAAA,+EAEsBqB,EAAaC,aAFnC,OAEO0B,EAFP,OAGC6B,EAAS,CAAEC,KAAM,aAAc9B,WAHhC,sDAKC5C,QAAQC,IAAI,sCALb,8DAAP,sDAWG,SAASsB,EAAYsB,GACxB,8CAAO,WAAM4B,GAAN,SAAA7E,EAAA,+DAECqB,EAAaM,YAAYsB,GACzB4B,EAAS,CAAEC,KAAM,YAAajD,MAAOoB,IAHtC,qDAKC7C,QAAQC,IAAI,uCALb,6DAAP,sD,ICbE0E,E,4MACFC,MAAQ,G,kEAKJC,KAAKC,MAAM5D,e,+BAIX,OAAK2D,KAAKC,MAAMlC,QAAuC,IAA7BiC,KAAKC,MAAMlC,OAAOqB,OAExC,6BAASc,UAAU,QACf,oCACA,kBAAC,IAAD,CAASC,GAAE,iBAAYH,KAAKC,MAAMlC,OAAO,GAAGI,MACxC,gDAEJ,kBAAC,IAAD,CAASgC,GAAG,UACR,0CAEJ,kBAAC,IAAD,CAASA,GAAG,WACR,6CAXqD,8C,GAVrDC,aAoCdC,EAAqB,CACvBhE,cAGSiE,EAAOC,aAVI,SAAAR,GACpB,MAAO,CACHhC,OAAQgC,EAAMS,aAAazC,UAQUsC,EAAzBE,CAA6CT,G,oECnC1D,SAASW,EAAaC,GAC3B,OAAO,SAAAC,GACLA,EAAQ,CAACd,KAAM,gBAAiBa,SAI7B,SAASE,IACd,OAAO,SAAAhB,GACLA,EAAS,CAACC,KAAM,mB,ICPdgB,E,4MACFd,MAAQ,CACJe,SAAU,KACVC,gBAAiB,GACjBC,gBAAgB,EAChBC,QAAS,GACTC,UAAW,I,EAcfC,eAAiB,SAACC,EAAI5E,GAClB,EAAK6E,SAAS,CAAEP,SAAUM,EAAGE,cAAeP,gBAAiBvE,K,EAGjE+E,gBAAkB,WACd,EAAKF,SAAS,CAAEP,SAAU,Q,EAG9BU,cAAgB,SAAChF,GAAa,IAAD,EACuB,EAAKyD,MAA7ClC,EADiB,EACjBA,OAAQ0D,EADS,EACTA,MAAOC,EADE,EACFA,QAASnF,EADP,EACOA,YACxBc,EAAOoE,EAAME,OAAbtE,GAER,GADA,EAAKkE,kBACiB,IAAlBxD,EAAOqB,QAOX,GAHA7C,EAAYC,GACZ,EAAKyD,MAAMQ,aAAa,kBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KACxCvD,IAAOb,EAAS,CAChB,IAAMqF,EAAM9D,EAAO+D,WAAU,SAAAlF,GAAK,OAAIA,EAAMuB,MAAQ3B,KACpDkF,EAAQ1E,KAAR,iBAAuBe,EAAO8D,GAAK1D,YARnChD,QAAQC,IAAI,iC,EAYpB2G,cAAgB,WACZ,EAAK9B,MAAM+B,iBACX,EAAKX,SAAS,CAAEJ,SAAU,EAAKlB,MAAMkB,W,EAEzCgB,mBAAqB,SAACb,GAClB,EAAKC,SAAS,CAAEH,UAAWE,EAAGc,OAAOC,S,EAEzCC,aAAe,WAGX,OADI,EAAKnC,MAAMlC,OAAOX,QAAO,SAAAR,GAAK,OAAIA,EAAM4B,KAAK6D,cAAcC,SAAS,EAAKvC,MAAMmB,UAAUmB,mB,kEA9C5E,IAAD,OAChBnE,EAAcnC,GAAG,gBAAgB,SAAAwG,GAC7B,EAAKtC,MAAMuC,cAAcD,MAG7BvC,KAAKqB,SAAS,CAAEJ,QAASjB,KAAKC,MAAMwC,oB,oCAG1BpF,GACV2C,KAAKC,MAAMyB,QAAQ1E,KAAnB,iBAAkCK,M,+BAyC5B,IAAD,SAC0C2C,KAAKD,MAA5Ce,EADH,EACGA,SAAUC,EADb,EACaA,gBAAiBE,EAD9B,EAC8BA,QAC7ByB,EAAiB1C,KAAKoC,eAE5B,OACI,6BAASlC,UAAS,gCAA2Be,GAAW,oBAEhDA,EACI,kBAAC0B,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,eAAeC,OAAK,GAC3E,yBAAK9C,UAAU,8BACX,kBAAC,IAAD,CAAkB+C,MAAO,CAAEC,MAAOlD,KAAKC,MAAMxE,SAAS0H,SAASb,SAAS,YAAc,WAClFc,QAASpD,KAAK+B,cAAe7B,UAAU,uBAK/C,kBAACyC,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,eAAeC,OAAK,GAC3E,yBAAK9C,UAAU,8BACX,kBAAC,IAAD,CAAgB+C,MAAO,CAAEC,MAAOlD,KAAKC,MAAMxE,SAAS0H,SAASb,SAAS,YAAc,WAChFc,QAASpD,KAAK+B,cAAe7B,UAAU,uBAM9De,GAAW,yBAAKf,UAAU,mBACvB,sCACA,kBAAC,IAAD,CAAYkD,QAASpD,KAAKC,MAAM3D,YAEnC2E,GAAW,2BAAOoC,SAAUrD,KAAKiC,mBAAoBpC,KAAK,OAAOyD,YAAY,iBAC9E,4BACKrC,GAAWyB,EAAelF,KAAI,SAACZ,EAAOiF,GACnC,OAAO,wBACH3B,UAAU,oBACVqD,IAAK1B,GACL,kBAAC,IAAD,CAAcuB,QAAS,SAAChC,GAAD,OAAQ,EAAKD,eAAeC,EAAIxE,EAAMuB,QAE7D,wBAAIiF,QAAS,kBAAM,EAAKI,cAAc5G,EAAMuB,OAAOvB,EAAM4B,WAIrE,kBAACiF,EAAA,EAAD,CACIC,KAAK,gBACL5C,SAAUA,EACV6C,aAAW,EACXC,KAAMC,QAAQ/C,GACdgD,QAAS9D,KAAKuB,iBAEd,kBAACwC,EAAA,EAAD,CAAUX,QAAS,kBAAM,EAAK5B,cAAcT,KAA5C,UACA,kBAACgD,EAAA,EAAD,CAAUX,QAASpD,KAAKuB,iBAAxB,c,GA3GInB,aAyHlBC,EAAqB,CACvB3D,cACAH,YH5FG,SAAqBC,GACxB,8CAAO,WAAMoD,GAAN,SAAA7E,EAAA,+EAEOqB,EAAaG,YAAYC,GAFhC,OAGCoD,EAAS,CAAEC,KAAM,eAAgBrD,YAHlC,sDAKCrB,QAAQC,IAAI,uCALb,8DAAP,uDG4FAkB,SHjFG,WACH,8CAAO,WAAMsD,GAAN,eAAA7E,EAAA,+EAEqBqB,EAAaE,WAFlC,OAEOM,EAFP,OAICgD,EAAS,CAAEC,KAAM,YAAajD,UAJ/B,sDAMCzB,QAAQC,IAAI,oCANb,8DAAP,uDGiFAqF,eACAG,eACAoB,eHmBG,WACH,OAAO,SAAApC,GACHA,EAAS,CAAEC,KAAM,sBGpBrB2C,cH9GG,SAAuBxE,GAC1B,8CAAO,WAAM4B,GAAN,SAAA7E,EAAA,+DAECI,QAAQC,IAAI,aAAc4C,GAC1B5B,EAAaM,YAAYsB,GAAa,GACtC4B,EAAS,CAAEC,KAAM,YAAajD,MAAOoB,IAJtC,sDAMC7C,QAAQC,IAAI,uCANb,8DAAP,wDGgHS4I,EAAWzD,aAjBA,SAAAR,GACpB,MAAO,CACHhC,OAAQgC,EAAMS,aAAazC,OAC3B0E,gBAAiB1C,EAAMS,aAAaiC,mBAcKpC,EAAzBE,CAA6C0D,YAAWpD,I,sFCvI3DqD,G,4MAEjBnE,MAAQ,CACJoE,iBAAiB,EACjBC,mBAAoB,I,EAOxBhC,aAAe,YAAiB,IAAdF,EAAa,EAAbA,OACRkC,EAAqB,EAAKnE,MAAMoE,YAAYjH,QAAO,SAACkH,GACtD,OAAOA,EAAUC,YAAYlC,cACxBC,SAASJ,EAAOC,MAAMqC,sBAEvBF,EAAUG,OAAOC,SAASrC,cACrBC,SAASJ,EAAOC,MAAMqC,wBAEnC,EAAKnD,SAAS,CAAE+C,wB,EAGpBO,aAAe,WACX,IAAMP,EAAqB,EAAKrE,MAAMqE,mBAAmBQ,MAAK,SAACC,EAAYC,GACvE,IAAM5J,EAAM,EAAK6E,MAAMoE,iBAAmB,EAAI,EAC9C,OAAIU,EAAWpG,UAAYqG,EAAWrG,WAAmBvD,EACrD2J,EAAWpG,UAAYqG,EAAWrG,UAAkBvD,EACjD,KAEX,EAAKmG,SAAS,CAAE8C,iBAAkB,EAAKpE,MAAMoE,kBAC7C,EAAK9C,SAAS,CAAE+C,wB,kEAtBhBpE,KAAKqB,SAAS,CAAE+C,mBAAoBpE,KAAKC,MAAMoE,gB,+BA2B/C,IAAKrE,KAAKD,MAAMqE,mBAAoB,OAAO,0CADtC,MAE2CpE,KAAKD,MAA7CoE,EAFH,EAEGA,gBAAiBC,EAFpB,EAEoBA,mBACzB,OACI,6BAASlE,UAAU,uCAEf,4BAAQA,UAAU,gBAEd,kBAAC,KAAD,CAAgBkD,QAASpD,KAAKC,MAAM8E,qBACpC,4BAAI,8BAAO/E,KAAKC,MAAM+E,WAAtB,QAEA,yBAAK9E,UAAU,qDACX,2BAAOmD,SAAUrD,KAAKoC,aAAcvC,KAAK,OAAOyD,YAAY,WAC3Da,EACG,yBAAKc,aAAW,QAAO,kBAAC,KAAD,CAAWC,KAAK,SAAS9B,QAASpD,KAAK2E,gBAE9D,yBAAKM,aAAW,QAAO,kBAAC,KAAD,CAAaC,KAAK,SAAS9B,QAASpD,KAAK2E,kBAO5E,yBAAKzE,UAAU,8BACVkE,EAAmB5G,KAAI,SAAC2H,EAAUtD,GAE/B,OACI,yBAAK0B,IAAK1B,EAAK3B,UAAU,yDACrB,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,uDACX,yBAAKkF,IAAKD,EAASV,OAAOY,OAAQC,IAAI,MAE1C,4BAAKH,EAASV,OAAOC,UACrB,2BACI,kBAACa,GAAA,EAAD,CAAUC,MAAO,EAAGC,SAAU,MAAOC,MAAO,KACvCP,EAASZ,eAKtB,uBAAGrE,UAAU,gBAAgByF,KAAOR,EAAS1G,WAAWmH,qB,GA1EhDxF,a,mBC8ExC,IAMMC,GAAqB,CACvBwF,ULmDG,SAAmBzI,GACtB,OAAO,SAAAwC,GACHA,EAAS,CAAEC,KAAM,aAAczC,cKlD1B0I,GAASvF,aAVE,SAAAR,GACpB,MAAO,CACHgG,SAAUhG,EAAMS,aAAauF,YAQU1F,GAAzBE,CAA6C0D,aAxFnE,SAAiBhE,GAAQ,IACbrD,EAA+BqD,EAA/BrD,MAAOmJ,EAAwB9F,EAAxB8F,SAAUF,EAAc5F,EAAd4F,UAEzB,SAASG,EAAYC,EAAWC,GACxBH,EAASE,KAAeC,IAAaA,EAAc,IACvDL,EAAU,2BAAKE,GAAN,mBAAiBE,EAAYC,KAkB1C,IAAKtJ,EAAO,OAAO,0CAvBC,IAwBZG,EAAoBH,EAApBG,OAAQ2B,EAAY9B,EAAZ8B,QACVyH,EAjBN,WACI,IAAMA,EAAQ,GACdvJ,EAAMG,OAAOqJ,SAAQ,SAAAvJ,GACjBA,EAAMgB,MAAMuI,SAAQ,SAAAtI,GAChB,IAAMuI,EAAOV,KAAO7H,EAAKc,SAAS0H,OAAO,YACzCH,EAAME,GAAQvI,EAAKc,cAG3B,IAAM1D,EAAM,GACZ,IAAK,IAAIqI,KAAO4C,EACZjL,EAAI8B,KAAK,CAAEuJ,UAAWhD,EAAKpB,MAAOgE,EAAM5C,KAE5C,OAAOrI,EAKGsL,GACd,OACI,kBAACC,GAAA,EAAD,CAAMC,IAAI,GACN,yBAAKxG,UAAU,8BACX,6BAASA,UAAU,8CACf,sCACA,yBAAKA,UAAU,eACVnD,EAAOS,KAAI,SAACX,EAAOgF,GAAR,OAAgB,4BACxB3B,UAAW6F,EAAS5I,UAAYN,EAAMQ,GAAK,oBAAsB,GACjEkG,IAAK1B,EACLuB,QAAS,kBAAM4C,EAAY,UAAWnJ,EAAMQ,MAAMR,EAAM2B,WAGpE,6BAAS0B,UAAU,+CACf,sCACA,yBAAKA,UAAU,eACVxB,EAAQlB,KAAI,SAACmJ,EAAO9E,GAAR,OAAgB,4BACzB3B,UAAW6F,EAASa,WAAaD,EAAOxI,IAAM,oBAAsB,GACpEoF,IAAK1B,EACLuB,QAAS,kBAAM4C,EAAY,WAAYW,EAAOxI,OAAOwI,EAAOjC,eAGxE,6BAASxE,UAAU,iDACf,wCACA,yBAAKA,UAAU,eACX,4BAAQA,UAAqC,QAA1B6F,EAASc,aAAyB,oBAAsB,GAAIzD,QAAS,kBAAM4C,EAAY,eAAgB,SAA1H,OACA,4BAAQ9F,UAAqC,WAA1B6F,EAASc,aAA4B,oBAAsB,GAAIzD,QAAS,kBAAM4C,EAAY,eAAgB,YAA7H,UACA,4BAAQ9F,UAAqC,SAA1B6F,EAASc,aAA0B,oBAAsB,GAAIzD,QAAS,kBAAM4C,EAAY,eAAgB,UAA3H,UAGR,6BAAS9F,UAAU,+CACf,sCACA,yBAAKA,UAAU,eACX,4BAAQA,UAAmC,SAAxB6F,EAASe,WAAwB,oBAAsB,GAAI1D,QAAS,kBAAM4C,EAAY,aAAc,UAAvH,QACA,4BAAQ9F,UAAmC,kBAAxB6F,EAASe,WAAiC,oBAAsB,GAAI1D,QAAS,kBAAM4C,EAAY,aAAc,mBAAhI,kBACA,4BAAQ9F,UAAmC,UAAxB6F,EAASe,WAAyB,oBAAsB,GAAI1D,QAAS,kBAAM4C,EAAY,aAAc,WAAxH,WAGR,6BAAS9F,UAAU,6CACf,wCACA,yBAAKA,UAAU,eACViG,EAAM3I,KAAI,SAAC6I,EAAMxE,GAAP,OAAe,4BACtB3B,UAAW6F,EAASnH,UAAYyH,EAAKlE,MAAQ,oBAAsB,GACnEoB,IAAK1B,EACLuB,QAAS,kBAAM4C,EAAY,UAAWK,EAAKlE,SAASkE,EAAKE,sBCpExEQ,GAAb,4MAEIhH,MAAQ,CACJ5B,IAAK,GACL6I,kBAAkB,EAClBC,eAAe,EACfC,UAAW,MANnB,EAwBIC,iBAAmB,SAAC/F,GAChB,EAAKC,SAAS,CAAE7C,KAAM4C,EAAGc,OAAOC,SAzBxC,EA4BIiF,iBAAmB,SAAChG,GAChB,EAAKC,SAAS,CAAEkD,YAAanD,EAAGc,OAAOC,SA7B/C,EAgCIkF,UAAY,WACRzF,YAAW,WACP0F,SAASC,YAAY,aAAa,EAAO,QAC1C,IAnCX,EAqCIxC,mBAAqB,WACjB,EAAK1D,SAAS,CAAE2F,kBAAmB,EAAKjH,MAAMiH,oBAtCtD,EAyCIQ,gBAAkB,WACd,EAAKnG,SAAS,CAAE4F,eAAgB,EAAKlH,MAAMkH,iBA1CnD,EA6CI9F,eAAiB,SAACC,EAAI5E,GAClB,EAAK6E,SAAS,CAAE6F,UAAW9F,EAAGE,iBA9CtC,EAiDIC,gBAAkB,WACd,EAAKF,SAAS,CAAE6F,UAAW,QAlDnC,kEASyB,IAAD,OAChBlH,KAAKyH,aAAeC,IAAMC,YAC1B3H,KAAK4H,oBAAsBF,IAAMC,YACjCzJ,EAAcnC,GAAG,gBAAgB,WAC7B,EAAKsF,SAAL,eAAmB,EAAKpB,MAAMrD,WAElCoD,KAAKqB,SAAL,eAAmBrB,KAAKC,MAAMrD,UAftC,yCAkBuBiL,EAAWC,GACtBD,EAAUjL,MAAMuB,MAAQ6B,KAAKC,MAAMrD,MAAMuB,KACzC6B,KAAKqB,SAAL,eAAmBrB,KAAKC,MAAMrD,UApB1C,+BAqDc,IAAD,OAEL,OAAKoD,KAAKD,MAAM5B,IAEZ,6BAAS+B,UAAU,wDACf,yBAAKA,UAAU,wBACX,4BACI,kBAAC,KAAD,CACI6H,QAAS/H,KAAKqH,UACdnH,UAAU,kCACV8H,SAAUhI,KAAKyH,aACfQ,KAAMjI,KAAKD,MAAMvB,KACjB0J,UAAU,EACV7E,SAAUrD,KAAKmH,iBACfgB,OAAQ,WACJ,EAAKlI,MAAMmI,YAAY,EAAKrI,MAAMvB,KAAM,EAAKuB,MAAMwE,cAEvD8D,UAAW,SAACjH,GACO,UAAXA,EAAGmC,MACHnC,EAAGc,OAAOoG,OACV,EAAKrI,MAAMmI,YAAY,EAAKrI,MAAMvB,KAAM,EAAKuB,MAAMwE,kBAKnE,4BACI,kBAAC,KAAD,CACIwD,QAAS/H,KAAKqH,UACdnH,UAAU,kCACV8H,SAAUhI,KAAK4H,oBACfK,KAAMjI,KAAKD,MAAMwE,YACjB2D,UAAU,EACV7E,SAAUrD,KAAKoH,iBACfe,OAAQ,WACJ,EAAKlI,MAAMmI,YAAY,EAAKrI,MAAMvB,KAAM,EAAKuB,MAAMwE,cAEvD8D,UAAW,SAACjH,GACO,UAAXA,EAAGmC,MACHnC,EAAGc,OAAOoG,OACV,EAAKrI,MAAMmI,YAAY,EAAKrI,MAAMvB,KAAM,EAAKuB,MAAMwE,mBAMvE,yBAAKrE,UAAU,+BACX,4BAAQkD,QAASpD,KAAKC,MAAMsI,YAA5B,aACA,yBAAKrI,UAAU,4CACX,2BAAOoD,YAAY,SAASzD,KAAK,OAAOwD,SAAUrD,KAAKC,MAAMmC,eAC7D,kBAAC,KAAD,OAEJ,yBAAKgB,QAASpD,KAAK+E,mBAAoB7E,UAAU,gEAC7C,kBAAC,KAAD,MACA,6CAGJ,yBAAKkD,QAAUpD,KAAKD,MAAMkH,cAAuC,aAAvBjH,KAAKwH,gBAA6BtH,UAAU,qEAClF,kBAAC,KAAD,MACA,sCAEIF,KAAKD,MAAMkH,eAEX,kBAACnB,GAAD,CAAQlJ,MAAOoD,KAAKC,MAAMrD,UAMtC,yBAAKsD,UAAS,UAAKF,KAAKD,MAAMiH,kBAAoB,qBAApC,gBACV,kBAAC,GAAD,CAAYjC,mBAAoB/E,KAAK+E,mBACjCC,UAAWhF,KAAKC,MAAMrD,MAAM4B,KAAM6F,YAAarE,KAAKC,MAAMrD,MAAMyH,eAGpErE,KAAKD,MAAMkH,eAAiB,yBAAK7D,QAASpD,KAAKwH,gBAAiBtH,UAAU,yBAI1EF,KAAKD,MAAMiH,kBAAoB,yBAAK5D,QAASpD,KAAK+E,mBAAoB7E,UAAU,0BA3EhE,8CAvDpC,GAAkCwH,IAAMtH,WA2I3BoI,GAAcvE,YAAW8C,I,SC9IzB0B,GAAb,4MAEI1I,MAAQ,CACJ2I,YAAa,MAHrB,EASIC,sBAAwB,WACpB,EAAK1I,MAAM2I,oBAAoB,EAAK3I,MAAM4I,YAC1C,EAAKxH,SAAS,CAAEqH,aAAa,KAXrC,kEAOQ1I,KAAKqB,SAAS,CAAEqH,aAAa,MAPrC,+BAcc,IACEG,EAAe7I,KAAKC,MAApB4I,WACR,OAEI,kBAACpC,GAAA,EAAD,CAAMC,GAAI1G,KAAKD,MAAM2I,aACjB,6BAASxI,UAAU,2CACf,4BAAQA,UAAU,mCACuB,IAApC2I,EAAWC,cAAc1J,OAElB,kBAAC,IAAM2J,SAAP,KACI,6CADJ,IAEI,kBAAC,KAAD,CAAiB3F,QAASpD,KAAK2I,yBAGpC,2DAEX,yBAAKzI,UAAU,2BAEP2I,EAAWC,eACPD,EAAWC,cAActL,KAAI,SAACwL,EAAcnH,GACxC,OACI,yBAAK0B,IAAK1B,EAAK3B,UAAU,sBACrB,yBAAKA,UAAU,sBACX,yBAAKkF,IAAK4D,EAAavE,OAAOY,OAAQC,IAAI,aAE9C,yBAAKpF,UAAU,6CACX,4BACI,kBAACqF,GAAA,EAAD,CAAUC,MAAO,EAAGC,SAAU,MAAOC,MAAO,KACvCsD,EAAavE,OAAOC,WAG7B,2BACI,kBAACa,GAAA,EAAD,CAAUC,MAAO,EAAGC,SAAU,MAAOC,MAAO,KACvCsD,EAAaC,UAGtB,6BACI,2BAAItD,KAAOqD,EAAavK,WAAWmH,wBAnDvF,GAAmCxF,aCJ/B8I,GAAQ,CAAC,CACT,SAAY,QACZ,SAAY,aACZ,SAAY,OACZ,MAAS,kBACT,OAAU,kCACV,SAAW,EACX,OAAU,GACV,cAAiB,GACjB,SAAY,kBACZ,QAAW,SACX,YAAe,cAEnB,CACI,SAAY,UACZ,SAAY,eACZ,SAAY,OACZ,MAAS,oBACT,OAAU,kCACV,SAAW,EACX,OAAU,GACV,cAAiB,GACjB,SAAY,kBACZ,QAAW,SACX,YAAe,cAEnB,CACI,SAAY,UACZ,SAAY,YACZ,SAAY,OACZ,MAAS,oBACT,OAAU,kCACV,SAAW,EACX,OAAU,GACV,cAAiB,GACjB,SAAY,kBACZ,QAAW,SACX,YAAe,eAINC,GAAc,CACvBC,U,4CACAC,Y,6CACAC,M,6CACAC,O,6CACAC,W,4CACAC,W,6CACAC,W,4FAGJ,4BAAA3O,EAAA,+EAE4B0B,EAAgB,QAF5C,cAEcyM,EAFd,yBAGeA,GAHf,sCAKQ/N,QAAQC,IAAI,mCALpB,+D,oEAUA,WAA0ByN,GAA1B,SAAA9N,EAAA,6DACI8N,EAAWC,cAAc1C,SAAQ,SAAA4C,GAC7BA,EAAaW,QAAS,KAF9B,2BAKed,GALf,sCAQQ1N,QAAQC,IAAI,qCARpB,8D,oEAaA,WAA2BwO,GAA3B,eAAA7O,EAAA,6DACII,QAAQC,IAAI,sBAAuBwO,GADvC,kBAG2BnN,EAAA,eAAwBmN,IAHnD,cAGcC,EAHd,OAIQ1O,QAAQC,IAAI,oBAAqByO,GAJzC,kBAKeA,GALf,sCAOQ1O,QAAQC,IAAI,kCAPpB,+D,oEAYA,WAAqB0O,GAArB,eAAA/O,EAAA,+EAG2B0B,EAAiB,aAAcqN,GAH1D,UAGcD,EAHd,4BAIyB,6BAJzB,gCAKeA,GALf,sCAOQ1O,QAAQC,IAAI,2CAPpB,+D,oEAYA,WAAsB0O,GAAtB,iBAAA/O,EAAA,6DACU8O,EADV,aAEQxE,OAAQ,kCACR0E,SAAS,EACThM,OAAQ,GACR+K,cAAe,GACfkB,SAAU,kBACVC,QAAS,SACTC,YAAa,cACVJ,GATX,kBAY8BrN,EAAiB,cAAeoN,GAZ9D,cAYcM,EAZd,yBAaeA,GAbf,sCAeQhP,QAAQC,IAAI,iCAfpB,+D,oEAoBA,4BAAAL,EAAA,6DACU8O,EAAO,CACT1L,IAAKrB,KACLsN,SAAU,QACV1F,SAAU,cACV2F,SAAU,OACVhF,OAAQ,kCACR0E,SAAS,EACThM,OAAQ,CAAC,CAAEV,GAAI,MAAOmB,KAAM,WAC5BsK,cAAe,GACfkB,SAAU,kBACVC,QAAS,SACTC,YAAa,cAZrB,SAgBQhB,GAAMlM,KAAK6M,GAhBnB,kBAiBeA,GAjBf,sCAmBQ1O,QAAQC,IAAI,wCAnBpB,+D,oEAwBA,WAA0ByN,GAA1B,eAAA9N,EAAA,sDACUuP,EAAUpB,GAAMpH,WAAU,SAAA+H,GAAI,OAAIA,EAAK1L,MAAQ0K,EAAW1K,OAEhE,IACI+K,GAAMoB,GAAN,eAAsBzB,GACxB,MAAO5L,GACL9B,QAAQC,IAAI,6BAA8B6B,GANlD,4C,sBAYA,SAASH,KAIL,IAJ0B,IAAbsC,EAAY,uDAAH,EAClBC,EAAO,GACPC,EAAW,iEAENC,EAAI,EAAGA,EAAIH,EAAQG,IACxBF,GAAQC,EAASE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,EAASF,SAEhE,OAAOC,EC5HJ,SAASmK,KACZ,8CAAO,WAAM5J,GAAN,eAAA7E,EAAA,+EAEoBoO,GAAYK,aAFhC,OAEOK,EAFP,OAGCjK,EAAS,CAAEC,KAAM,WAAYgK,SAH9B,sDAKC1O,QAAQC,IAAI,0CALb,8DAAP,sD,IC/BEmP,G,4MACFxK,MAAQ,CACJyK,qBAAqB,G,EAGzBC,oBAAsB,WAElB,EAAKC,eACL,EAAKrJ,SAAS,CAAEmJ,qBAAsB,EAAKzK,MAAMyK,uB,EAErDE,aAAe,WACX,EAAKzK,MAAMwJ,WAAW,EAAKxJ,MAAM4I,a,uDAI3B,IACE2B,EAAwBxK,KAAKD,MAA7ByK,oBADH,EAEuCxK,KAAKC,MAAzC4I,EAFH,EAEGA,WAAYD,EAFf,EAEeA,oBACpB,OACI,6BAAS1I,UAAU,8DAEf,wBAAIA,UAAU,yCACV,kBAAC,IAAD,CAASC,GAAG,KACR,kBAAC,KAAD,OAGHqK,GAAuB,yBAAKtK,UAAU,uBAAuBkD,QAASpD,KAAKyK,sBAC5E,yBAAKvK,UAAU,iBAAiBkD,QAAUpD,KAAKD,MAAMyK,oBAAiD,aAA3BxK,KAAKyK,qBAES,IAAjF5B,EAAWC,cAAc1L,QAAO,SAAA4L,GAAY,OAAKA,EAAaW,UAAQvK,OAChE,GACA,uBAAGc,UAAU,wCACV2I,EAAWC,cAAc1L,QAAO,SAAA4L,GAAY,OAAKA,EAAaW,UAAQvK,QAI/EoL,GACA,kBAAC,GAAD,CAAe5B,oBAAqBA,EAAqBC,WAAYA,IAIxEA,EAAWC,cAAc6B,MAAK,SAAA3B,GAAY,OAAKA,EAAaW,UACvD,kBAAC,KAAD,MACA,kBAAC,KAAD,QAId,wBAAIzJ,UAAU,yCACV,kBAAC,IAAD,CAASC,GAAG,WACR,yBAAKD,UAAU,kBAAiB,kBAAC,IAAD,QAEpC,kBAAC,IAAD,CAASC,GAAI0I,EAAU,gBAAYA,EAAW1K,KAAQ,UAClD,4BAAI,kBAAC,KAAD,c,GApDNiC,aAkEhBC,GAAqB,CACvBoJ,WDzBG,SAAoBZ,GACvB,8CAAO,WAAMjJ,GAAN,eAAA7E,EAAA,+EAEoBoO,GAAYM,WAAWZ,GAF3C,OAEOgB,EAFP,OAGCjK,EAAS,CAAEC,KAAM,WAAYgK,SAH9B,sDAKC1O,QAAQC,IAAI,0CALb,8DAAP,uDCyBAwN,oBDdG,SAA6BC,GAChC,IAAMgB,EAAOhB,EAGb,OAFAgB,EAAKf,cAAgB,GAErB,uCAAO,WAAMlJ,GAAN,SAAA7E,EAAA,sDACH,IACI6E,EAAS,CAAEC,KAAM,iBAAkBgK,SACrC,MAAO5M,GACL9B,QAAQC,IAAI,sCAAuC6B,GAJpD,2CAAP,wDCaS2N,GAASrK,aAXE,SAAAR,GACpB,MAAO,CACH8I,WAAY9I,EAAM8K,YAAYhC,cASSxI,GAAzBE,CAA6CgK,I,sCC3E5D,SAASO,GAAQ7K,GACpB,IAAM8K,EAAa9K,EAAMiJ,MAAM9L,QAAO,SAAAyM,GAAI,OAAK5J,EAAMvB,QAAQiM,MAAK,SAAAhE,GAAM,OAAIA,EAAOxI,MAAQ0L,EAAK1L,UAChG,OAEI,yBAAK+B,UAAU,+DAA+DkD,QAAS,kBAAMnD,EAAM+K,UAAU,WACxG/K,EAAMvB,QAAQU,OAASa,EAAMvB,QAAQ,GAAG2G,OAErC,yBAAKC,IAAI,UAAUF,IAAKnF,EAAMvB,QAAQ,GAAG2G,SAEzC,yBAAKnF,UAAU,iBAAiBD,EAAMvB,QAAQ,GAAGgG,SAASlF,OAAO,GAAGyL,eAAuB,yBAAK/K,UAAU,wBAAf,IAAuC,kBAAC,KAAD,CAAWA,UAAU,oBAA5D,IAAiF,kBAAC,KAAD,CAAQA,UAAU,0BAEvK,IAAzBD,EAAMvB,QAAQU,QACZ,yBAAKc,UAAU,wDAAuD,8BAAOD,EAAMvB,QAAQU,SAE9Fa,EAAMiL,cACH,yBAAKhL,UAAU,wBACX,yBAAKA,UAAU,kBACX,4CACCD,EAAMvB,QAAQlB,KAAI,SAAAmJ,GAAM,OACrB,6BAASpD,IAAKoD,EAAOxI,IAAK+B,UAAU,4CAChC,yBAAKA,UAAU,kCAAkCkD,QAAS,kBAAMnD,EAAMkL,gBAAgBxE,EAAOxI,OACxFwI,EAAOtB,OAAS,yBAAKD,IAAKuB,EAAOtB,OAAQC,IAAI,YAAe,yBAAKpF,UAAU,iBAAiByG,EAAOjC,SAASlF,OAAO,GAAGyL,eACvH,uBAAG/K,UAAU,eAAeyG,EAAOjC,WAEvC,kBAAC,KAAD,CAAgBtB,QAAS,kBAAMnD,EAAMmL,uBAAuBzE,EAAOxI,aAK/E,yBAAK+B,UAAU,mBACX,6CACC6K,EAAWvN,KAAI,SAAAqM,GACZ,OAAO,6BAAStG,IAAKsG,EAAK1L,IAAK+B,UAAU,4CACrC,yBAAKA,UAAU,mCAAmCkD,QAAS,kBAAMnD,EAAMkL,gBAAgBtB,EAAK1L,OACvF0L,EAAKxE,OAAS,yBAAKD,IAAKyE,EAAKxE,OAAQC,IAAI,YACtC,yBAAKpF,UAAU,iBAAiB2J,EAAKnF,SAASlF,OAAO,GAAGyL,eAC5D,uBAAG/K,UAAU,eAAe2J,EAAKnF,WAErC,kBAAC,KAAD,CAAQtB,QAAS,kBAAMnD,EAAMoL,gBAAgBxB,EAAK1L,eCzC3E,SAASmN,GAAOrL,GACnB,OACI,yBAAKC,UAAU,4BACX,yBAAKA,UAAS,oBAAeD,EAAM1E,OAAOgQ,MAAM,KAAK,GAAGlJ,eAAiBe,QAAS,kBAAMnD,EAAM+K,UAAU,YACpG,yBAAK9K,UAAU,mBACf,2BAAID,EAAM1E,SAET0E,EAAMuL,eACH,yBAAKtL,UAAU,gDACX,6BAASA,UAAU,uBAAuBkD,QAAS,kBAAMnD,EAAMwL,aAAa,WACxE,qCAEJ,6BAASvL,UAAU,yBAAyBkD,QAAS,kBAAMnD,EAAMwL,aAAa,mBAC1E,6CAEJ,6BAASvL,UAAU,sBAAsBkD,QAAS,kBAAMnD,EAAMwL,aAAa,UACvE,uC,yBCfrB,SAAS5M,GAAKoB,GACjB,OACI,+BACA,kBAAC,KAAD,CACIyL,SAAUzL,EAAMrB,QAChByE,SAAUpD,EAAM0L,iBAChBC,WAAW,gBCPhB,SAASC,GAAS5L,GACrB,OACI,yBAAKC,UAAU,4BACf,yBAAKA,UAAS,oBAAeD,EAAMtB,SAAS0D,eAAiBe,QAAS,kBAAMnD,EAAM+K,UAAU,cAC5F,yBAAK9K,UAAU,mBACX,2BAAID,EAAMtB,WAETsB,EAAM6L,iBACH,yBAAK5L,UAAU,gDACX,6BAASA,UAAU,qBAAqBkD,QAAS,kBAAMnD,EAAMwL,aAAa,SACtE,mCAEJ,6BAASvL,UAAU,wBAAwBkD,QAAS,kBAAMnD,EAAMwL,aAAa,YACzE,sCAEJ,6BAASvL,UAAU,sBAAsBkD,QAAS,kBAAMnD,EAAMwL,aAAa,UACvE,uC,aCjBXM,GAAoB,CAC7BC,U,8FAGJ,WAAyB5K,EAAI6K,GAA7B,qBAAAlR,EAAA,4DACuB,YACbmR,EAFV,0CACuB,YADvB,kBAIUC,EAAW,IAAIC,UACZC,OAAO,OAAQjL,EAAGc,OAAOoK,MAAM,IACxCH,EAASE,OAAO,gBAAiB,WANrC,kBAQ0BE,MAAML,EAAY,CAChClR,OAAQ,OACRwR,KAAML,IAVlB,cAQcjR,EARd,iBAY2BA,EAAIuR,OAZ/B,eAYc5R,EAZd,yBAaeA,GAbf,kCAgBQM,QAAQC,IAAR,MAhBR,2D,sBCDO,IAAMsR,GAAb,4MAEI3M,MAAQ,CACJ4M,OAAQ,CACJC,IAAK,IAET7N,QAAS,IANjB,EAaI0M,aAAe,SAACrK,GACZ,EAAKC,SAAS,CAAEsL,OAAO,2BAAM,EAAK5M,MAAM4M,QAAlB,IAA0BC,IAAKxL,EAAGc,OAAOC,WAdvE,EAiBI0K,SAAW,SAACzL,GAER,GADAA,EAAG0L,iBACE,EAAK/M,MAAM4M,OAAOC,MAAO,EAAK7M,MAAM4M,OAAOC,IAAIrB,MAAM,IAAIwB,OAAM,SAAAC,GAAM,MAAe,MAAXA,KAA9E,CACA,IAIMjO,EAAO,CAJG,CACZ6N,IAAK,EAAK7M,MAAM4M,OAAOC,IACvBjG,OAAQ,EAAK1G,MAAM4I,WAAWnE,WAErB,oBAAgB,EAAKzE,MAAMlB,UAExC,EAAKsC,SAAS,CAAEtC,UAAS4N,OAAQ,CAAEC,IAAK,MAExC,EAAK3M,MAAM4M,SAAS9N,KA5B5B,EA8BIiN,UA9BJ,uCA8BgB,WAAO5K,GAAP,mBAAArG,EAAA,sEACUgR,GAAkBC,UAAU5K,EAAI,EAAKrB,OAD/C,OACF7E,EADE,OAEF+R,EAAS,CACXtG,OAAQ,EAAK1G,MAAM4I,WAAWnE,SAC9BkI,IAAK1R,EAAID,KAEP8D,EANE,CAMSkO,GANT,oBAMoB,EAAKhN,MAAMlB,UACvC,EAAKkB,MAAM4M,SAAS9N,GAPZ,2CA9BhB,wHAUQiB,KAAKqB,SAAS,CAAEtC,QAASiB,KAAKC,MAAMlB,YAV5C,+BA0Cc,IAAD,OACL,IAAKiB,KAAKD,MAAMhB,QAAS,OAAO,0CAD3B,MAGsDiB,KAAKC,MAAxDlB,EAHH,EAGGA,QAASmO,EAHZ,EAGYA,mBAAoBC,EAHhC,EAGgCA,kBACrC,OACI,kBAAC,IAAMpE,SAAP,KACI,yBAAK7I,UAAU,2CACX,uCACA,yBAAKA,UAAU,0DACX,0BAAMkN,SAAUpN,KAAK6M,SAAU3M,UAAU,+CACrC,2BAAOL,KAAK,OAAOyD,YAAY,YAAYnB,MAAOnC,KAAKD,MAAM4M,OAAOC,IAAKvJ,SAAUrD,KAAKyL,eACxF,kBAAC,KAAD,CAAUrI,QAASpD,KAAK6M,YAE5B,yBAAK3M,UAAU,kBACX,2BAAOmN,QAAQ,aAAf,gBACA,2BAAOxN,KAAK,OAAOxC,GAAG,YAAYgG,SAAU,SAACjC,GACzC,EAAK4K,UAAU5K,IAChBkM,QAAM,OAKrB,yBAAKlK,QAAS+J,EAAoBD,EAAqB,aAAWhN,UAAU,kCAEvEnB,EAAQvB,KAAI,SAACmP,EAAQ9K,GAElB,OAAI8K,EAAOC,IAAItK,SAAS,gBAAkBqK,EAAOC,IAAItK,SAAS,cACnD,yBAAKiB,IAAK1B,EAAK3B,UAAU,+BAC5B,uBAAGA,UAAU,eAAeyM,EAAOhG,QACnC,yBAAKzG,UAAU,iBAAiBkD,QAAS,WACrC8J,EAAmBP,EAAOC,MAC3BxH,IAAKuH,EAAOC,OAET,yBAAKrJ,IAAK1B,EAAK3B,UAAU,cAAa,uBAAGA,UAAU,cAAcqD,IAAK1B,GAAM8K,EAAOhG,QAC7F,uBAAGzG,UAAU,eAAeyM,EAAOC,eA5E/D,GAA6BlF,IAAMtH,WCkB7BmN,IClBoBnN,Y,4MDoBtBL,MAAQ,CACJ1C,GAAI,GACJmO,eAAe,EACfM,iBAAiB,EACjBZ,cAAc,EACdsC,gBAAgB,EAChBC,aAAa,EACbpI,OAAQ,GACR8H,mBAAmB,G,EAoBvBO,iBAAmB,SAACtM,GAChB,EAAKC,SAAS,CAACvD,KAAK,2BAAI,EAAKiC,MAAMjC,MAAhB,IAAsBU,KAAM4C,EAAGc,OAAOC,W,EAG7DwJ,iBAAmB,SAAAtF,GACf,EAAKhF,SAAS,CAACvD,KAAK,2BAAI,EAAKiC,MAAMjC,MAAhB,IAAsBc,QAAS+G,KAAOU,GAAMsH,cAAa,WACxE,EAAK1N,MAAM2N,WAAW,EAAK7N,MAAMjC,U,EAIzC2N,aAAe,SAAC5Q,EAAMsE,GACL,UAATtE,GAA6B,kBAATA,GAAqC,SAATA,EAChD,EAAKwG,SAAS,CAACvD,KAAK,2BAAK,EAAKiC,MAAMjC,MAAjB,IAAuBvC,OAAQV,MAAS,WACvD,EAAKoF,MAAM2N,WAAW,EAAK7N,MAAMjC,SAOrC,EAAKuD,SAAS,CAACvD,KAAK,2BAAI,EAAKiC,MAAMjC,MAAhB,IAAsBa,SAAU9D,MAAQ,WACvD,EAAKoF,MAAM2N,WAAW,EAAK7N,MAAMjC,U,EAM7C+O,SAAW,SAACgB,GACR,EAAKxM,SAAS,CAACvD,KAAK,2BAAI,EAAKiC,MAAMjC,MAAhB,IAAsBiB,QAAQ,aAAK8O,OAAe,WACjE,EAAK5N,MAAM2N,WAAW,EAAK7N,MAAMjC,U,EAIzCkN,UAAY,SAACnQ,GACT,OAAQA,GACJ,IAAK,SACD,EAAKwG,SAAS,CAAEmK,eAAgB,EAAKzL,MAAMyL,gBAC3C,MACJ,IAAK,QACD,EAAKnK,SAAS,CAAE6J,cAAe,EAAKnL,MAAMmL,eAC1C,MACJ,IAAK,UACD,EAAK7J,SAAS,CAAEmM,gBAAiB,EAAKzN,MAAMyN,iBAC5C,MACJ,IAAK,WACD,EAAKnM,SAAS,CAAEyK,iBAAkB,EAAK/L,MAAM+L,kBAC7C,MACJ,IAAK,OACD,EAAKzK,SAAS,CAAEoM,aAAc,EAAK1N,MAAM0N,gB,EAOrDK,WAAa,WACT,EAAKzM,SAAS,CAAE8L,mBAAmB,EAAO3B,eAAe,EAAON,cAAc,EAAOY,iBAAiB,EAAO0B,gBAAgB,EAAOC,aAAa,K,EAGrJrC,uBAAyB,SAACxE,GACtB,EAAKvF,SAAS,CAAEvD,KAAK,2BAAK,EAAKiC,MAAMjC,MAAjB,IAAuBY,QAAS,EAAKqB,MAAMjC,KAAKY,QAAQtB,QAAO,SAAAuJ,GAAM,OAAIA,EAAOxI,MAAQyI,SAAa,WACrH,EAAK3G,MAAM2N,WAAW,EAAK7N,MAAMjC,U,EAIzCuN,gBAAkB,SAACzB,GACf,IAAMO,EAAU,EAAKlK,MAAMiJ,MAAM6E,MAAK,SAAAlE,GAAI,OAAIA,EAAK1L,MAAQyL,KAC3D,EAAKvI,SAAS,CAAEvD,KAAK,2BAAI,EAAKiC,MAAMjC,MAAhB,IAAsBY,QAAQ,GAAD,oBAAM,EAAKqB,MAAMjC,KAAKY,SAAtB,CAA+ByL,QAAY,WACxF,EAAKlK,MAAM2N,WAAW,EAAK7N,MAAMjC,U,EAIzCqN,gBAAkB,SAACvB,GACf,EAAK3J,MAAMyB,QAAQ1E,KAAnB,gBAAiC4M,K,EAGrCvC,UAAY,WACRzF,YAAW,WACP0F,SAASC,YAAY,aAAa,EAAO,QAC1C,I,EAGP2F,mBAAqB,SAAC7H,GAClB,EAAKhE,SAAS,CAAEgE,SAAQ8H,mBAAoB,EAAKpN,MAAMoN,qB,kEApGtC,IAAD,OAChBnN,KAAKgO,gBAAkBtG,IAAMC,YAC7BzJ,EAAcnC,GAAG,gBAAgB,WAE7B,EAAKsF,SAAS,CAAEvD,KAAM,EAAKmC,MAAMnC,UAErCkC,KAAKqB,SAAL,2BACOrB,KAAKD,OADZ,IAEIjC,KAAMkC,KAAKC,MAAMnC,KACjB0N,eAAe,EACfM,iBAAiB,EACjBZ,cAAc,EACdsC,gBAAgB,EAChBC,aAAa,O,+BA2FX,IAAD,OACL,IAAKzN,KAAKD,MAAMjC,KAAM,OAAO,0CADxB,MAE2DkC,KAAKD,MAAMjC,KAApEU,EAFF,EAEEA,KAAME,EAFR,EAEQA,QAASnD,EAFjB,EAEiBA,OAAQoD,EAFzB,EAEyBA,SAAUC,EAFnC,EAEmCA,QAASG,EAF5C,EAE4CA,QAAS1B,EAFrD,EAEqDA,GAFrD,EAGiF2C,KAAKD,MAAnFmL,EAHH,EAGGA,aAAcM,EAHjB,EAGiBA,cAAeM,EAHhC,EAGgCA,gBAAiB0B,EAHjD,EAGiDA,eAAgBC,EAHjE,EAGiEA,YACtE,OACI,kBAAC,IAAM1E,SAAP,KACI,yBAAK7I,UAAS,UAAKsN,GAAkB,qBAAvB,gBACV,kBAAC,GAAD,CAASL,kBAAmBnN,KAAKD,MAAMoN,kBACnCtE,WAAY7I,KAAKC,MAAM4I,WAAY9J,QAASA,EAC5CmO,mBAAoBlN,KAAKkN,mBACzBlB,UAAWhM,KAAKgM,UAAWa,SAAU7M,KAAK6M,aAIhD3B,GAAgBM,GAAiBM,GAAmB0B,GAAkBC,IAAgB,yBAAKvN,UAAU,uBAAuBkD,QAASpD,KAAK8N,aAC5I,kBAAC,IAAD,CAAWG,YAAa5Q,EAAI6Q,MAAOlO,KAAKC,MAAMiO,QACzC,SAACC,EAAUC,GAAX,OACG,2CAAS7K,IAAKlG,EAAI6C,UAAS,+CAA0CkO,EAASC,WAAa,OAAS,KAC5FF,EAASG,eACTH,EAASI,gBAFjB,CAGIC,IAAKL,EAASnG,WAGd,yBAAK9H,UAAU,+BACX,yBAAK+C,MAAO,CAAEwL,gBAAiB,EAAKxO,MAAMpD,MAAMqG,OAAShD,UAAU,eACnE,kBAACyC,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,cAAcC,OAAK,GAC1E,yBAAK9C,UAAU,kBACX,kBAAC,KAAD,CAAmBA,UAAU,mBAAmBkD,QAAS,WAAQ,EAAKnD,MAAMyO,aAAarR,QAGjG,4BACI,kBAAC,KAAD,CACI0K,QAAS,EAAKV,UACdnH,UAAU,kCACV8H,SAAU,EAAKgG,gBACf/F,KAAMzJ,EACN0J,UAAU,EACV7E,SAAU,EAAKqK,iBACfvF,OAAQ,WACJ,EAAKlI,MAAM2N,WAAW,EAAK7N,MAAMjC,OAErCuK,UAAW,SAACjH,GACO,UAAXA,EAAGmC,MACHnC,EAAGc,OAAOoG,OACV,EAAKrI,MAAM2N,WAAW,EAAK7N,MAAMjC,YAQrD,yBAAKoC,UAAU,gCAEX,6BACI,yBAAKkD,QAAS,kBAAM,EAAK4H,UAAU,YAAY9K,UAAU,4BAA2B,kBAAC,IAAD,MAC3D,IAAnBnB,EAAQK,QAAiB,yBAAKc,UAAU,wDAAuD,8BAAOnB,EAAQK,WAIxH,kBAAC0L,GAAD,CAASpM,QAASA,EAASwK,MAAO,EAAKjJ,MAAMiJ,MAAOgC,aAAcA,EAC9DF,UAAW,EAAKA,UAAWG,gBAAiB,EAAKA,gBAAiBE,gBAAiB,EAAKA,gBACxFD,uBAAwB,EAAKA,yBACjC,kBAACE,GAAD,CAAQ/P,OAAQA,EAAQiQ,cAAeA,EACnCC,aAAc,EAAKA,aAAcT,UAAW,EAAKA,YACrD,kBAAC,GAAD,CAAMpM,QAASA,EAAS+M,iBAAkB,EAAKA,mBAC/C,kBAACE,GAAD,CAAUlN,SAAUA,EAAUmN,gBAAiBA,EAC3Cd,UAAW,EAAKA,UAAWS,aAAc,EAAKA,oBAQjEzL,KAAKD,MAAMoN,mBACR,yBAAK/J,QAASpD,KAAKkN,mBAAoBhN,UAAU,uBAC7C,yBAAKkF,IAAKpF,KAAKD,MAAMsF,e,GAlMzBjF,cAgNPuO,GAAOpO,aAPI,SAAAR,GACpB,MAAO,CACH8I,WAAY9I,EAAM8K,YAAYhC,cAKlBtI,CAAyB0D,YAAWsJ,KEzN3CqB,GAAb,4MAEI7O,MAAQ,CACJ1C,GAAI,GACJwR,gBAAiB,KACjBC,eAAe,GALvB,EAiBIrD,aAAe,SAACrK,GACZ,EAAKC,SAAS,CAAE7C,KAAM4C,EAAGc,OAAOC,SAlBxC,EAqBIkF,UAAY,WACRzF,YAAW,WACP0F,SAASC,YAAY,aAAa,EAAO,QAC1C,IAxBX,EA2BIpG,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEwN,gBAAiBzN,EAAGE,iBA5B5C,EA+BIC,gBAAkB,WACd,EAAKF,SAAS,CAAEwN,gBAAiB,KAAMC,eAAe,KAhC9D,EAmCIC,iBAAmB,SAAC3N,GAChB,EAAKC,SAAS,CAAEyN,cAAe1N,EAAGE,iBApC1C,EAuCI0N,mBAAqB,WACjB,EAAK3N,SAAS,CAAEyN,eAAgB,EAAK/O,MAAM+O,iBAxCnD,EA2CIG,mBAAqB,SAAC/L,GAClB,IAAMgM,EAAQ,2BACP,EAAKjP,MAAMpD,OADJ,IAEVqG,UAEJ,IACI,EAAKjD,MAAMkP,YAAYD,EAAUhM,EAAO,EAAKnD,MAAMmD,OACrD,MAAOjG,GACL9B,QAAQC,IAAI,QAAS6B,GAEzB,EAAKoE,SAAS,CAAEwN,gBAAiB,KAAMC,eAAe,KArD9D,kEAQyB,IAAD,OAChB9O,KAAKoP,WAAa1H,IAAMC,YACxB3H,KAAKgO,gBAAkBtG,IAAMC,YAC7BzJ,EAAcnC,GAAG,gBAAgB,WAC7B,EAAKsF,SAAL,2BAAmB,EAAKtB,OAAU,EAAKE,MAAMpD,WAEjDmD,KAAKqB,SAAL,2BAAmBrB,KAAKD,OAAUC,KAAKC,MAAMpD,UAdrD,+BAwDc,IAAD,OACL,IAAKmD,KAAKD,MAAM1C,GAAI,OAAO,0CADtB,MAE4C2C,KAAKD,MAA9CvB,EAFH,EAEGA,KAAMqQ,EAFT,EAESA,gBAAiBC,EAF1B,EAE0BA,cAE/B,OACI,kBAAC,IAAD,CAAWb,YAAajO,KAAKC,MAAMpD,MAAMQ,GAAI6Q,MAAOlO,KAAKC,MAAMiO,QAC1D,SAACC,EAAUC,GAAX,OACG,2CAAS7K,IAAK,EAAKtD,MAAMpD,MAAMQ,GAAI6C,UAAU,sBACrCiO,EAASG,eADjB,CAGIE,IAAKL,EAASnG,WACd,yBAAK9H,UAAU,0DACX,yBAAKA,UAAU,gDAEX,kBAAC,KAAD,CAA0B+C,MAAO,CAAEC,MAAO,EAAKjD,MAAMpD,MAAMqG,OACvDhD,UAAU,sBAAsBkD,QAAS,EAAKjC,iBAClD,kBAACsC,EAAA,EAAD,CACIC,KAAK,gBACL5C,SAAU+N,EACVlL,aAAW,EACXC,KAAMC,QAAQgL,GACd/K,QAAS,EAAKvC,iBAEd,kBAACwC,EAAA,EAAD,CAAUX,QAAS,WACf,EAAKnD,MAAMoP,cAAc,EAAKpP,MAAMpD,MAAMQ,MAE1C,kBAAC,KAAD,CAAiB6C,UAAU,sBAH/B,iBAKA,kBAAC6D,EAAA,EAAD,CAAUX,QAAS,EAAK4L,oBACpB,kBAAC,KAAD,CAAe9O,UAAU,qBAD7B,kBAMH4O,GACG,yBAAK5O,UAAU,+DACX,yBAAKkD,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,aACzG,yBAAKrL,QAAS,kBAAM,EAAK6L,mBAAmB,YAAY/O,UAAU,aAAa+C,MAAO,CAAEwL,gBAAiB,cAGjH,uCAAKvO,UAAU,aAAgBiO,EAASI,iBACpC,kBAAC,KAAD,OAGJ,wBAAItL,MAAO,CAAEC,MAAO,EAAKjD,MAAMpD,MAAMqG,OAAShD,UAAU,eACpD,kBAAC,KAAD,CACI6H,QAAS,EAAKV,UACdnH,UAAU,kCACV8H,SAAU,EAAKgG,gBACf/F,KAAMzJ,EACN0J,UAAU,EACV7E,SAAU,EAAKoI,aACftD,OAAQ,WACJ,EAAKlI,MAAMkP,YAAY,EAAKpP,MAAO,EAAKA,MAAMvB,KAAMA,IAExD6J,UAAW,SAACjH,GACO,UAAXA,EAAGmC,MACHnC,EAAGc,OAAOoG,OACV,EAAKrI,MAAM2N,WAAW,EAAK7N,aAM/C,yBAAKG,UAAU,2BAEX,uCACA,uCACA,sCACA,wCACA,0CAKR,kBAAC,IAAD,CAAWoP,YAAa,EAAKrP,MAAMpD,MAAMQ,GAAIwC,KAAK,SAC7C,SAACsO,EAAUC,GAAX,OACG,uCAAKlO,UAAS,oBAAekO,EAASmB,eAAiB,YAAc,IACjEf,IAAKL,EAASnG,UACVmG,EAASqB,gBAEZ,EAAKvP,MAAMpD,MAAMgB,MAAML,KAAI,SAACM,EAAMoQ,GAC/B,OAAO,kBAACS,GAAD,CAAMc,gBAAiB,EAAKxP,MAAMwP,gBACrC7B,WAAY,EAAK3N,MAAM2N,WAAYM,MAAOA,EAC1CQ,aAAc,EAAKzO,MAAMyO,aAAcnL,IAAKzF,EAAKT,GACjDR,MAAO,EAAKoD,MAAMpD,MAAOiB,KAAMA,EAAMoL,MAAO,EAAKjJ,MAAMiJ,WAE9DiF,EAAS7K,gBAMtB,yBAAKpD,UAAU,iBACX,0BAAMkN,SAAU,SAAChM,GACbA,EAAG0L,iBACH,EAAK7M,MAAMyP,UAAU,EAAKzP,MAAMpD,MAAMQ,GAAI,EAAK+R,WAAWO,QAAQxN,OAClE,EAAKiN,WAAWO,QAAQxN,MAAQ,IACjCyN,OAAO,IACN,2BAAOpB,IAAK,EAAKY,WAAYlP,UAAU,eAAeoD,YAAY,aAAazD,KAAK,mBAlKpH,GAA2BO,a,oBCO3B,IAOMC,GAAqB,CACvBO,gBAGSiP,GAAQtP,aAXG,SAAAR,GACpB,MAAO,CACH+P,gBAAiB/P,EAAMgQ,cAAcD,gBACrCE,cAAejQ,EAAMgQ,cAAcE,eAQG5P,GAAzBE,EAzBrB,SAAgBN,GAAO,IACZ6P,EAAkC7P,EAAlC6P,gBAAiBE,EAAiB/P,EAAjB+P,cACxB,OAAO,kBAACE,GAAA,EAAD,CACPC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBzM,KAAMkM,EACNQ,iBAAkB,IAClBC,QAASP,EACTJ,OAAQ,kBAACY,GAAA,EAAD,CAAQvN,MAAO,CAACC,MAAO,aAAcE,QAASnD,EAAMW,cAApD,cCIN6P,G,4MAEF1Q,MAAQ,CACJvD,QAAS,GACToQ,IAAK,I,EA8BTxE,YAAc,SAACpD,EAAW0L,GACtB,IAAM9T,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WACnEwI,IAAcpI,EAAM4B,MAAQkS,IAAqB9T,EAAM2H,cAC3D,EAAKtE,MAAMvD,YAAX,2BAA4BE,GAA5B,IAAmC4B,KAAMwG,EAAWT,YAAamM,KACjE,EAAKzQ,MAAMQ,aAAa,kBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,O,EAGhD+P,YAAc,SAAC/T,EAAOmJ,GAGlB,IAAM6K,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUnU,IAIhD,SAASoU,EAAY/U,GACjBW,EAAMG,OAASH,EAAMG,OAAOS,KAAI,SAAAX,GAE5B,OADAA,EAAMgB,MAAQhB,EAAMgB,MAAMT,OAAOnB,GAC1BY,KAyBf,OA/BIkJ,EAAS5I,UACTP,EAAMG,OAASH,EAAMG,OAAOK,QAAO,SAAAP,GAAK,OAAIA,EAAMQ,KAAO0I,EAAS5I,YAQlE4I,EAASa,UACToK,GAAY,SAAAlT,GAAI,OAAIA,EAAKY,QAAQiM,MAAK,SAAAhE,GAAM,OAAIA,EAAOxI,MAAQ4H,EAASa,eAExEb,EAASc,cACTmK,GAAY,SAAAlT,GAAI,OAAIA,EAAKa,SAAS0D,gBAAkB0D,EAASc,aAAaxE,iBAE1E0D,EAASe,YACTkK,GAAY,SAAAlT,GAAI,OAAIA,EAAKvC,OAAO8G,gBAAkB0D,EAASe,WAAWzE,iBAEtE0D,EAASnH,SACToS,GAAY,SAAAlT,GAAI,OAAIA,EAAKc,UAAYmH,EAASnH,WAE9C,EAAKmB,MAAM6M,KACXoE,GAAY,SAAAlT,GACR,OACIA,EAAKU,KAAK6D,cAAcC,SAAS,EAAKvC,MAAM6M,IAAIvK,kBAOrDuO,G,EAIXrI,WAAa,WACT,IAAM3L,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WACvE,IACI,EAAKyD,MAAMtD,SAASC,GACpB,EAAKqD,MAAMgR,cACX,EAAKhR,MAAMQ,aAAa,gBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,GAEzB,EAAKgD,MAAMyB,QAAQ1E,KAAnB,iBAAkC,EAAK+C,MAAMvD,W,EAEjD6S,cAAgB,SAAClS,GACb,IAAMP,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WACvE,IACI,EAAKyD,MAAM/C,YAAYC,EAASP,GAChC,EAAKqD,MAAMQ,aAAa,kBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,K,EAG7BkS,YAAc,SAACtS,EAAOqU,EAAcC,GAChC,IAAMvU,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WACvE,GAAI0U,IAAiBC,EACrB,IACI,EAAKlR,MAAMmR,UAAUvU,EAAOD,GAC5B,EAAKqD,MAAMQ,aAAa,kBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,K,EAM7ByR,aAAe,SAACpQ,GACZ,IAAM1B,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WAEvE,IACI,EAAKyD,MAAMvC,WAAWY,EAAQ1B,GAC9B,EAAKqD,MAAMQ,aAAa,iBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,K,EAG7ByS,UAAY,SAACvS,EAASoB,GACbA,IAAUA,EAAW,YAC1B,IAAM3B,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WAEvE,IACI,EAAKyD,MAAMxC,QAAQN,EAASoB,EAAU3B,GACtC,EAAKqD,MAAMgR,cACX,EAAKhR,MAAMQ,aAAa,eACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,K,EAG7B2Q,WAAa,SAAC9P,GACV,IAAMlB,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WAEvE,IACI,EAAKyD,MAAMoR,SAASvT,EAAMlB,GAC1B,EAAKqD,MAAMQ,aAAa,iBACxBmB,YAAW,kBAAM,EAAK3B,MAAMW,iBAAgB,KAC9C,MAAO3D,GACL9B,QAAQC,IAAI,QAAS6B,K,EAK7BqU,UAAY,SAAAC,GAAW,IACXC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,OAAQxD,EAAsBsD,EAAtBtD,YAAapO,EAAS0R,EAAT1R,KAC1C,GAAK2R,IACDA,EAAYlC,cAAgBmC,EAAOnC,aAEnCkC,EAAYtD,QAAUuD,EAAOvD,OAFjC,CAIA,IAAMtR,EAAQ,EAAKqD,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WAEvE,GAAa,UAATqD,EAAkB,CAClB,IAAM6R,EAAYC,MAAMC,KAAKhV,EAAMG,QAC7B8U,EAAeH,EAAU3D,MAAK,SAAAlR,GAAK,OAAIA,EAAMQ,KAAO4Q,KAC1DyD,EAAUI,OAAOL,EAAOvD,MAAO,GAC/BwD,EAAUI,OAAON,EAAYtD,MAAO,EAAG2D,GACvCjV,EAAMG,OAAS2U,EACf,IACI,EAAKzR,MAAMvD,YAAYE,GAEzB,MAAOK,GACL9B,QAAQC,IAAI,QAAS6B,QAEtB,CACH,IAAM8U,EAAanV,EAAMG,OAAOgR,MAAK,SAAAlR,GAAK,OAAIA,EAAMQ,KAAOoU,EAAOnC,eAC5D0C,EAAWpV,EAAMG,OAAOgR,MAAK,SAAAlR,GAAK,OAAIA,EAAMQ,KAAOmU,EAAYlC,eAErE,GAAIyC,EAAW1U,KAAO2U,EAAS3U,GAAI,CAE/B,IAAM4U,EAAWN,MAAMC,KAAKG,EAAWlU,OACjCqU,EAAUH,EAAWlU,MAAMkQ,MAAK,SAAAjQ,GAAI,OAAIA,EAAKT,KAAO4Q,KAE1DgE,EAASH,OAAOL,EAAOvD,MAAO,GAC9B+D,EAASH,OAAON,EAAYtD,MAAO,EAAGgE,GAEtC,IAAMhD,EAAQ,2BACP6C,GADO,IAEVlU,MAAOoU,IAELE,EAASvV,EAAMG,OAAO+E,WAAU,SAAAjF,GAAK,OAAIA,EAAMQ,KAAO6R,EAAS7R,MACrET,EAAMG,OAAO+U,OAAOK,EAAQ,EAAGjD,GAC/B,IACI,EAAKjP,MAAMvD,YAAYE,GAGzB,MAAOK,GACL9B,QAAQC,IAAI,QAAS6B,QAEtB,CAEH,IAAMmV,EAAaT,MAAMC,KAAKG,EAAWlU,OACzCuU,EAAWN,OAAOL,EAAOvD,MAAO,GAChC,IAAMmE,EAAa,2BACZN,GADY,IAEflU,MAAOuU,IAELE,EAAWX,MAAMC,KAAKI,EAASnU,OAC/B0U,EAAiBR,EAAWlU,MAAMkQ,MAAK,SAAAjQ,GAAI,OAAIA,EAAKT,KAAO4Q,KACjEqE,EAASR,OAAON,EAAYtD,MAAO,EAAGqE,GACtC,IAAMC,EAAc,2BACbR,GADa,IAEhBnU,MAAOyU,IAGLG,EAAW7V,EAAMG,OAAO+E,WAAU,SAAAjF,GAAK,OAAIA,EAAMQ,KAAOgV,EAAchV,MACtEqV,EAAS9V,EAAMG,OAAO+E,WAAU,SAAAjF,GAAK,OAAIA,EAAMQ,KAAOmV,EAAenV,MAE3ET,EAAMG,OAAO+U,OAAOW,EAAU,EAAGJ,GACjCzV,EAAMG,OAAO+U,OAAOY,EAAQ,EAAGF,GAC/B,IACI,EAAKvS,MAAMvD,YAAYE,GAEzB,MAAOK,GACL9B,QAAQC,IAAI,QAAS6B,Q,EAMrCmF,aAAe,SAAChB,GACZ,EAAKC,SAAS,CAAEuL,IAAKxL,EAAGc,OAAOC,S,EAEnCwQ,qBAAuB,SAACC,GACpB,EAAKvR,SAAS,CAAEwR,eAAgBD,K,wLAjOvB5S,KAAKC,MAAMlC,QAAWiC,KAAKC,MAAMlC,OAAOqB,O,iCACnCY,KAAKC,MAAM5D,a,mBAER2D,KAAKC,MAAMiJ,OAAUlJ,KAAKC,MAAMiJ,MAAM9J,O,gCACjCY,KAAKC,MAAMmJ,Y,yDAGrBjO,QAAQC,IAAI,QAAZ,M,0DAIRD,QAAQC,IAAI,QAAZ,M,QAEJ4E,KAAKqB,SAAS,CAAE7E,QAASwD,KAAKC,MAAMwB,MAAME,OAAOtE,K,gKAIlCwK,EAAWC,GACtBD,EAAUpG,MAAME,OAAOtE,KAAO2C,KAAKC,MAAMwB,MAAME,OAAOtE,KACtD2C,KAAKC,MAAMgR,cACXjR,KAAKqB,SAAS,CAAE7E,QAASwD,KAAKC,MAAMwB,MAAME,OAAOtE,Q,+BAgN/C,IAAD,OACL,GAAiC,IAA7B2C,KAAKC,MAAMlC,OAAOqB,OAAc,OAAO,0CAC3C,IAAMxC,EAAQoD,KAAKC,MAAMlC,OAAOgQ,MAAK,SAAAnR,GAAK,OAAIA,EAAMuB,MAAQ,EAAK4B,MAAMvD,WAFlE,EAGuBwD,KAAKC,MAAzBiJ,EAHH,EAGGA,MAAOnD,EAHV,EAGUA,SACf,IAAKnJ,EAAO,OAAO,yCACnB,IAAMgU,EAAgB5Q,KAAK2Q,YAAY/T,EAAOmJ,GAE9C,OADAnJ,EAAM8B,QAAUwK,EAEZ,6BAAShJ,UAAU,SACf,kBAAC0K,GAAD,MACA,kBAAC5G,EAAD,CAAU2O,qBAAsB3S,KAAK2S,uBACrC,yBAAKzS,UAAU,mBACX,kBAACsI,GAAD,CAAa5L,MAAOA,EAAO2L,WAAYvI,KAAKuI,WAAYH,YAAapI,KAAKoI,YACtEhG,aAAcpC,KAAKoC,eACvB,yBAAKlC,UAAU,iCACX,kBAAC,IAAD,CACIoR,UAAWtR,KAAKsR,WAEhB,kBAAC,IAAD,CAAWhC,YAAa1S,EAAMuB,IAAK0B,KAAK,UACnC,SAACsO,EAAUC,GAAX,OACG,uCAAKlO,UAAS,aACVsO,IAAKL,EAASnG,UACVmG,EAASqB,gBACZoB,EAAc7T,OAAOS,KAAI,SAACX,EAAOqR,GAC9B,OAAO,kBAAC,GAAD,CAAO3K,IAAK1G,EAAMQ,GAAI6Q,MAAOA,EAChCN,WAAY,EAAKA,WAAY8B,UAAW,EAAKA,UAAWhB,aAAc,EAAKA,aAC3EW,cAAe,EAAKA,cAAeF,YAAa,EAAKA,YAAaF,mBAAoB,EAAKA,mBAAoBpS,MAAOA,EAAOqM,MAAOA,cAQpK,kBAAC2G,GAAD,W,GAhRKzP,aA8RfC,GAAqB,CACvBhE,aACAM,SrBlOG,SAAkBH,EAASI,GAC9B,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAaO,SAASH,EAASI,KAEtD,MAAOK,GAEL,MADA9B,QAAQC,IAAI,oCACN6B,KqB4NdC,YrBhPG,SAAqBC,EAASP,GACjC,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAac,YAAYC,EAASP,KAEzD,MAAOK,GAEL,MADA9B,QAAQC,IAAI,uCACN6B,KqB0OdQ,QrB5MG,SAAiBN,EAASoB,EAAU3B,GACvC,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAaqB,QAAQN,EAASoB,EAAU3B,KAE/D,MAAOK,GAEL,MADA9B,QAAQC,IAAI,mCACN6B,KqBsMdS,WrBjMG,SAAoBY,EAAQ1B,GAC/B,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAasB,WAAWY,EAAQ1B,KAEvD,MAAOK,GAEL,MADA9B,QAAQC,IAAI,mCACN6B,KqB2LdoU,SrBtLG,SAAkBvT,EAAMlB,GAC3B,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAauB,WAAWG,EAAMlB,KAErD,MAAOK,GAEL,MADA9B,QAAQC,IAAI,oCACN6B,KqBgLdmU,UrB5NG,SAAmBvU,EAAOD,GAC7B,OAAO,SAAAgD,GACH,IAEIA,EAAS,CAAEC,KAAM,YAAajD,MADTR,EAAakB,YAAYT,EAAOD,KAEvD,MAAOK,GAEL,MADA9B,QAAQC,IAAI,qCACN6B,KqBsNdP,cACA+D,eACAG,eACAwI,UZ1TG,WACH,8CAAO,WAAMxJ,GAAN,eAAA7E,EAAA,+EAEqBoO,GAAYC,YAFjC,OAEOF,EAFP,OAGCtJ,EAAS,CAAEC,KAAM,YAAaqJ,UAH/B,sDAKC/N,QAAQC,IAAI,oCALb,8DAAP,uDY0TA6V,YrBxKG,WACH,OAAO,SAAArR,GACHA,EAAS,CAAEC,KAAM,aAAczC,OAAQ,QqByKlC0V,GAAQvS,aAvBG,SAAAR,GACpB,MAAO,CACHhC,OAAQgC,EAAMS,aAAazC,OAC3BmL,MAAOnJ,EAAM8K,YAAY3B,MACzBnD,SAAUhG,EAAMS,aAAauF,YAmBS1F,GAAzBE,CAA6CkQ,I,SCvT5DsC,G,4MAMFC,Q,uCAAU,WAAOC,EAAP,YAAAlY,EAAA,6DAAiBmY,EAAjB,EAAiBA,aAAjB,SAEA,EAAKjT,MAAMqJ,MAAM2J,GAFjB,OAGF,EAAKhT,MAAM4I,YAAY,EAAK5I,MAAMyB,QAAQ1E,KAAnB,iBAAkC,EAAKiD,MAAMlC,OAAO,GAAGI,MAH5E,2C,0DAMVgV,a,sBAAe,sBAAApY,EAAA,sEACL,EAAKkF,MAAMuJ,aADN,OAEX,EAAKvJ,MAAMyB,QAAQ1E,KAAnB,iBAAkC,EAAKiD,MAAMlC,OAAO,GAAGI,MAF5C,2C,kEATX6B,KAAKC,MAAM5D,e,+BAgBX,OAAO,yBAAK6D,UAAU,cAClB,kBAAC,KAAD,CACIkT,cAHc,CAAEhJ,SAAU,GAAIC,SAAU,IAKxCgJ,SAAU,SAAAC,GACN,IAAMC,EAAS,GAGf,OAFKD,EAAWlJ,WAAUmJ,EAAOnJ,SAAW,YACvCkJ,EAAWjJ,WAAUkJ,EAAOlJ,SAAW,YACrCkJ,GAEXnG,SAAUpN,KAAKgT,SAEf,kBAAC,KAAD,CAAM9S,UAAU,yDACZ,kBAAC,KAAD,MACA,iCACI,8CACA,kBAAC,KAAD,CAAOA,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,cAEzD,kBAAC,KAAD,CAAcA,KAAK,QAAQgV,UAAU,SACrC,iCACI,8CACA,kBAAC,KAAD,CAAOtT,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,cAEzD,kBAAC,KAAD,CAAcA,KAAK,WAAWgV,UAAU,SACxC,4BAAQ3T,KAAK,UAAb,SACA,uBAAG4T,KAAK,aAAR,wCACA,4BAAQrQ,QAASpD,KAAKmT,cAAtB,wBAGR,kBAACxQ,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,eAAeC,OAAK,GAC3E,yBAAK9C,UAAU,WACX,kBAAC,IAAD,CAASC,GAAG,KAAI,kBAAC,KAAD,c,GAlDfC,aAgEfC,GAAqB,CACvBiJ,Mb5DG,SAAeQ,GAClB,8CAAO,WAAMlK,GAAN,eAAA7E,EAAA,+EAEoBoO,GAAYG,MAAMQ,GAFtC,OAEOD,EAFP,OAGCjK,EAAS,CAAEC,KAAM,WAAYgK,SAH9B,sDAKC1O,QAAQC,IAAI,+BALb,8DAAP,uDa4DAoO,cACAnN,cAGSqX,GAAQnT,aAbG,SAAAR,GACpB,MAAO,CACH8I,WAAY9I,EAAM8K,YAAYhC,WAC9B9K,OAAQgC,EAAMS,aAAazC,UAUWsC,GAAzBE,CAA6C0D,YAAW8O,KCtEvEY,G,4MAOFC,S,uCAAW,WAAOX,EAAP,wBAAAlY,EAAA,6DAAgBmY,EAAhB,EAAgBA,aAEhB9I,EAAuC6I,EAAvC7I,SAAUC,EAA6B4I,EAA7B5I,SAAUwJ,EAAmBZ,EAAnBY,MAAOnP,EAAYuO,EAAZvO,SAF3B,kBAIG,EAAKzE,MAAMsJ,OAAO,CAACa,WAAUC,WAAUwJ,QAAOnP,aAJjD,OAKH,EAAKzE,MAAMyB,QAAQ1E,KAAnB,iBAAkC,EAAKiD,MAAMlC,OAAO,GAAGI,MALpD,sDAOHhD,QAAQC,IAAI,4BAPT,8D,0DAYX+X,a,sBAAe,sBAAApY,EAAA,sEACL,EAAKkF,MAAMuJ,aADN,OAEX,EAAKvJ,MAAMyB,QAAQ1E,KAAnB,iBAAkC,EAAKiD,MAAMlC,OAAO,GAAGI,MAF5C,2C,kEAfX6B,KAAKC,MAAM5D,e,+BAsBX,OAAO,yBAAK6D,UAAU,cAClB,kBAAC,KAAD,CACIkT,cAHc,CAAEhJ,SAAU,GAAIC,SAAU,GAAIyJ,QAAS,GAAID,MAAO,GAAInP,SAAU,IAK9E2O,SAAU,SAAAC,GACN,IAAMC,EAAS,GAOf,OALKD,EAAWlJ,WAAUmJ,EAAOnJ,SAAW,YACvCkJ,EAAW5O,WAAU6O,EAAO7O,SAAW,YACvC4O,EAAWjJ,WAAUkJ,EAAOlJ,SAAW,YACxCiJ,EAAWQ,UAAYR,EAAWjJ,WAAUkJ,EAAOO,QAAU,0BAJtD,0JAKHC,KAAKT,EAAWO,MAAMxR,iBAAgBkR,EAAOM,MAAQ,yBACtDN,GAEXnG,SAAUpN,KAAK4T,UAEf,kBAAC,KAAD,CAAM1T,UAAU,yDACZ,kBAAC,KAAD,MACA,iCACI,8CACA,kBAAC,KAAD,CAAO8T,aAAa,YAAY9T,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,cAElF,kBAAC,KAAD,CAAcA,KAAK,WAAWgV,UAAU,SACxC,iCACI,+CACA,kBAAC,KAAD,CAAOQ,aAAa,YAAY9T,UAAU,mBAAkBL,KAAK,OAAOrB,KAAK,cAEjF,kBAAC,KAAD,CAAcA,KAAK,WAAWgV,UAAU,SACxC,iCACI,2CACA,kBAAC,KAAD,CAAOQ,aAAa,YAAY9T,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,WAElF,kBAAC,KAAD,CAAcA,KAAK,QAAQgV,UAAU,SACrC,iCACI,8CACJ,kBAAC,KAAD,CAAOQ,aAAa,YAAY9T,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,cAE9E,kBAAC,KAAD,CAAcA,KAAK,WAAWgV,UAAU,SACxC,iCACI,sDACJ,kBAAC,KAAD,CAAOQ,aAAa,YAAY9T,UAAU,mBAAmBL,KAAK,OAAOrB,KAAK,aAE9E,kBAAC,KAAD,CAAcA,KAAK,UAAUgV,UAAU,SACvC,4BAAQ3T,KAAK,UAAb,UACA,uBAAG4T,KAAK,YAAR,wCACA,4BAAQrQ,QAASpD,KAAKmT,cAAtB,wBAGR,kBAACxQ,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,eAAeC,OAAK,GAC3E,yBAAK9C,UAAU,WACX,kBAAC,IAAD,CAASC,GAAG,KAAI,kBAAC,KAAD,c,GA5EdC,aA0FhBC,GAAqB,CACvBkJ,Od1EG,SAAgBO,GACnB,8CAAO,WAAMlK,GAAN,eAAA7E,EAAA,+EAEoBoO,GAAYI,OAAOO,GAFvC,OAEOD,EAFP,OAGCjK,EAAS,CAAEC,KAAM,WAAYgK,SAH9B,sDAKC1O,QAAQC,IAAI,gCALb,8DAAP,uDc0EAoO,cACAnN,cAGS4X,GAAS1T,aAbE,SAAAR,GACpB,MAAO,CACH8I,WAAY9I,EAAM8K,YAAYhC,WAC9B9K,OAAQgC,EAAMS,aAAazC,UAUYsC,GAAzBE,CAA6C0D,YAAW0P,KC/FxEO,G,4MACFnU,MAAQ,CACJ2I,aAAa,EACbmB,KAAM,CACF1L,IAAK,GACL0V,MAAO,GACPzJ,SAAU,GACV+J,SAAU,GACVzP,SAAU,GACVW,OAAQ,K,EAUhB+O,YAAc,WACV,EAAK/S,SAAS,CAAEqH,aAAc,EAAK3I,MAAM2I,e,EAG7C+C,aAAe,YAAiB,IAAdvJ,EAAa,EAAbA,OACd,EAAKb,SAAS,CAAEwI,KAAK,2BAAM,EAAK9J,MAAM8J,MAAlB,mBAAyB3H,EAAO1D,KAAO0D,EAAOC,W,EAGtEkS,cAAgB,SAACjT,GACbA,EAAG0L,iBACH,EAAK7M,MAAMyJ,WAAW,EAAK3J,MAAM8J,MACjC,EAAKuK,e,EAITpI,U,uCAAY,WAAO5K,GAAP,eAAArG,EAAA,sEACUgR,GAAkBC,UAAU5K,GADtC,OACFlG,EADE,OAER,EAAKmG,SAAS,CAAEwI,KAAK,2BAAM,EAAK9J,MAAM8J,MAAlB,IAAwBxE,OAAQnK,EAAID,QAFhD,2C,+OApBR+E,KAAKC,MAAM5D,a,SACQ8M,GAAYE,YAAYrJ,KAAKC,MAAMwB,MAAME,OAAOtE,I,OAA7DwM,E,OACN7J,KAAKqB,SAAS,CAAEwI,KAAK,eAAMA,K,qIAuBrB,IAAD,EAC8C7J,KAAKD,MAAM8J,KAAtDgK,EADH,EACGA,MAAOnP,EADV,EACUA,SAAU0F,EADpB,EACoBA,SAAU/E,EAD9B,EAC8BA,OAAQlH,EADtC,EACsCA,IAC3C,IAAKA,EAAK,OAAO,0CAFZ,IAGG0K,EAAc7I,KAAKC,MAAnB4I,WAER,OACI,6BAAS3I,UAAU,gBACf,kBAAC0K,GAAD,MACA,kBAAC5G,EAAD,MACA,yBAAK9D,UAAU,kBACX,4BAAQA,UAAU,gFACd,yBAAKA,UAAU,mBAAmBkF,IAAKC,EAAQC,IAAI,MAGvD,yBAAKpF,UAAU,8EACV2I,EAAW1K,MAAQA,EAAM,wBAAIiF,QAASpD,KAAKoU,YACxClU,UAAU,oBADY,gBAC2B,GACrD,yBAAKA,UAAU,gCAEX,sCAAW,0BAAMA,UAAU,qBAAqB2T,IAChD,0CAAe,0BAAM3T,UAAU,qBAAqBwE,IACpD,yCAAc,0BAAMxE,UAAU,qBAAqBkK,GAAnD,OAIR,kBAAC3D,GAAA,EAAD,CAAMC,GAAI1G,KAAKD,MAAM2I,aACjB,yBAAKxI,UAAU,iDACX,yBAAKA,UAAU,6CAEX,yBAAKA,UAAU,+BAGX,mCAASF,KAAKD,MAAM8J,KAAKxE,OACrB,yBAAKnF,UAAU,mBAAmBkF,IAAKpF,KAAKD,MAAM8J,KAAKxE,OAAQC,IAAI,gBACjE,6BAAMtF,KAAKC,MAAM4I,WAAWnE,UAC9B,2BAAO7E,KAAK,OAAOwD,SAAUrD,KAAKgM,UAAWsB,QAAM,MAI3D,yBAAKpN,UAAU,kBACX,0BAAMA,UAAU,0DAA0D0P,OAAO,IAC7E,2BAAOzN,MAAOnC,KAAKD,MAAM8J,KAAKgK,MAAOxQ,SAAUrD,KAAKyL,aAAcjN,KAAK,QAAQ8E,YAAY,QAAQzD,KAAK,UACxG,2BAAOsC,MAAOnC,KAAKD,MAAM8J,KAAKO,SAAU/G,SAAUrD,KAAKyL,aAAcjN,KAAK,WAAW8E,YAAY,WAAWzD,KAAK,SACjH,2BAAOsC,MAAOnC,KAAKD,MAAM8J,KAAKQ,SAAUhH,SAAUrD,KAAKyL,aAAcjN,KAAK,WAAW8E,YAAY,WAAWzD,KAAK,aACjH,2BAAOsC,MAAOnC,KAAKD,MAAM8J,KAAKnF,SAAUrB,SAAUrD,KAAKyL,aAAcjN,KAAK,WAAW8E,YAAY,YAAYzD,KAAK,SAClH,4BAAQuD,QAASpD,KAAKqU,eAAtB,gBACA,4BAAQxU,KAAK,SAASK,UAAU,gBAAgBkD,QAASpD,KAAKoU,aAA9D,qB,GArFbhU,aA2GrBC,GAAqB,CACvBhE,aACAqN,Wf3CG,SAAoBb,GACvB,8CAAO,WAAMjJ,GAAN,SAAA7E,EAAA,+DAECoO,GAAYO,WAAWb,GACvBjJ,EAAS,CAAEC,KAAM,WAAYgK,KAAMhB,IAHpC,qDAKC1N,QAAQC,IAAI,qCALb,6DAAP,wDe6CSkZ,GAAc/T,aAbH,SAAAR,GACpB,MAAO,CACHwU,MAAOxU,EAAMgQ,cAAcwE,MAC3B1L,WAAY9I,EAAM8K,YAAYhC,WAC9B9K,OAAQgC,EAAMS,aAAazC,UASiBsC,GAAzBE,CAA6C2T,ICjHlEM,G,4MACFzU,MAAQ,CACJmB,UAAW,GACXiD,iBAAiB,G,EAwCrBsH,aAAe,YAAiB,IAAdvJ,EAAa,EAAbA,OACd,EAAKb,SAAS,CAAEH,UAAWgB,EAAOC,S,EAGtCwC,aAAe,WACX,EAAKtD,SAAS,CAAE8C,iBAAkB,EAAKpE,MAAMoE,mB,EAGjDsQ,kBAAoB,SAAC7K,GACjB,EAAK3J,MAAMyB,QAAQ1E,KAAnB,gBAAiC4M,K,kEA7C5B5J,KAAKC,MAAMlC,QAAWiC,KAAKC,MAAMlC,OAAOqB,QACzCY,KAAKC,MAAM5D,e,uCAKFqY,GAAgC,IAAD,OAAlBC,EAAkB,wDAAH,EACnC9W,EAAQ,GACNE,EAAWiC,KAAKC,MAAhBlC,OAkBR,OAjBAA,EAAOqI,SAAQ,SAAAxJ,GACXA,EAAMG,OAAOqJ,SAAQ,SAAAvJ,GACjBgB,EAAMb,KAAN,MAAAa,EAAK,aAAShB,EAAMgB,MAAMT,QAAO,SAAAU,GAC7B,IAAMgB,EAAMD,KAAKC,MAGjB,OAFAhB,EAAKtB,QAAUI,EAAMuB,IACrBL,EAAKkH,UAAYpI,EAAM4B,KAChBmH,KAAO7H,EAAKc,SAASgW,SAASjP,KAAO7G,GAAK+V,IAAIH,EAAa,UAC3D/O,KAAO7G,GAAKgW,QAAQnP,KAAO7H,EAAKc,SAASiW,IAAIF,EAAa,oBAI7E9W,EAAM+G,MAAK,SAACmQ,EAAOC,GACf,IAAM9Z,EAAM,EAAK6E,MAAMoE,iBAAmB,EAAI,EAC9C,OAAI4Q,EAAMnW,QAAUoW,EAAMpW,SAAiB1D,EACvC6Z,EAAMnW,QAAUoW,EAAMpW,QAAgB1D,EACnC,KAEJ2C,I,qCAGIwI,GACX,OAAIV,KAAOU,GAAMyO,QAAQnP,KAAO9G,KAAKC,OAAO+V,IAAI,EAAG,OAAOI,MAAM,QACrDtP,KAAOU,GAAMC,OAAO,QAExBX,KAAOU,GAAMuO,SAASjP,OAASsP,MAAM,QAAU,QAAU,a,+BAe1D,IAAD,OACDC,EAAgBlV,KAAKmV,iBAAiB,GADrC,EAEkCnV,KAAKD,MAApCmB,EAFH,EAEGA,UAAWiD,EAFd,EAEcA,gBACbiR,EAAYpV,KAAKC,MAAM4I,WAAWnE,SAAS6G,MAAM,KAAK,GAE5D,OADIrK,IAAWgU,EAAgBA,EAAc9X,QAAO,SAAAU,GAAI,OAAIA,EAAKU,KAAK6D,cAAcC,SAASpB,EAAUsD,yBAEnG,6BAAStE,UAAU,gBACf,kBAAC0K,GAAD,MACA,kBAAC5G,EAAD,MAAY,yBAAK9D,UAAU,8CACvB,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,kCACX,yBAAKkF,IAAI,uBAAuBE,IAAI,KACpC,6BAASpF,UAAU,sBACf,0CAAYkV,EAAZ,MACA,qDAIZ,yBAAKlV,UAAU,oDACX,yCACA,2BAAOmD,SAAUrD,KAAKyL,aAActJ,MAAOjB,EAAWrB,KAAK,OAAOyD,YAAY,WAC7Ea,EACG,kBAACxB,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,gBAAgBC,OAAK,GAC5E,6BAAK,kBAAC,KAAD,CAAWkC,KAAK,SAAS9B,QAASpD,KAAK2E,iBAEhD,kBAAChC,EAAA,EAAD,CAASC,WAAY,IAAKC,oBAAqBC,IAAMC,MAAM,gBAAgBC,OAAK,GAC5E,6BAAK,kBAAC,KAAD,CAAakC,KAAK,SAAS9B,QAASpD,KAAK2E,kBAIzDuQ,EAAc9V,OACX,6BAASc,UAAU,4BAEf,yBAAKA,UAAU,kBACVgV,EAAc1X,KAAI,SAAAM,GAAI,OAAI,yBACvByF,IAAKzF,EAAKT,GACV6C,UAAU,wDACV,6BACI,4BAAKpC,EAAKU,MACV,uBAAG0B,UAAU,iBAAb,UAAoC,0BAAMkD,QAAS,kBAAM,EAAKnD,MAAMyB,QAAQ1E,KAAnB,iBAAkCc,EAAKtB,YAAasB,EAAKkH,aAEtH,yBAAK9E,UAAS,oBAAepC,EAAKvC,OAAOiJ,sBAAzC,IAAiE,2BAAI1G,EAAKvC,SAC1E,yBAAK2E,UAAU,uDACc,IAAxBpC,EAAKY,QAAQU,SAAiBtB,EAAKY,QAAQ,GAAG2G,OAAS,yBAAKjC,QAAS,kBAAM,EAAKqR,kBAAkB3W,EAAKY,QAAQ,GAAGP,MAAMmH,IAAI,UAAUF,IAAKtH,EAAKY,QAAQ,GAAG2G,SAC5J,yBAAKjC,QAAS,kBAAM,EAAKqR,kBAAkB3W,EAAKY,QAAQ,GAAGP,MAAM+B,UAAU,iBAAiBpC,EAAKY,QAAQ,GAAGgG,SAASlF,OAAO,GAAGyL,iBAEnI,4BAAK,EAAKoK,eAAevX,EAAKc,gBAI1C,wBAAIsB,UAAU,YAAd,qC,GAzGFE,aA0HhBC,GAAqB,CACvBhE,cC7HW,IACX,CACIiZ,KAAM,IACN9B,UAAWlT,GAEf,CACIgV,KAAM,aACN9B,UAAWV,IAEf,CACIwC,KAAM,SACN9B,UAAWE,IAEf,CACI4B,KAAM,UACN9B,UAAWS,IAEf,CACIqB,KAAM,YACN9B,UAAWc,IAEf,CACIgB,KAAM,UACN9B,UDyGcjT,aAXE,SAAAR,GACpB,MAAO,CACHhC,OAAQgC,EAAMS,aAAazC,OAC3B8K,WAAY9I,EAAM8K,YAAYhC,cAQSxI,GAAzBE,CAA6C0D,YAAWuQ,OEnIvE,SAASe,KAEd,OADArX,EAActC,QAEZ,kBAAC,IAAD,KACE,0BAAMsE,UAAU,OACd,kBAAC,IAAD,KACGsV,GAAOhY,KAAI,SAAAiY,GAAK,OAAI,kBAAC,IAAD,CAAOlS,IAAKkS,EAAMH,KAAMI,OAAK,EAAClC,UAAWiC,EAAMjC,UAAW8B,KAAMG,EAAMH,aCCjFzR,QACW,cAA7BrI,OAAOC,SAASka,UAEe,UAA7Bna,OAAOC,SAASka,UAEhBna,OAAOC,SAASka,SAASlU,MACvB,2D,uBClBAmU,GAAe,CACjB7X,OAAQ,GACRgI,SAAU,GACVtD,iBAAiB,GCHrB,IAAMmT,GAAe,CACjB1M,MAAO,GACPL,WAAY,CACJ,IAAQ,2BACR,SAAa,QACb,SAAa,aACb,SAAa,OACb,MAAU,kBACV,OAAW,kCACX,SAAY,EACZ,OAAW,GACX,cAAkB,CACd,CACApE,OACA,CACIC,SAAU,YAAY,OAAW,mCAErCuE,QAAQ,0BACRxK,UAAUI,KAAKC,QAEnB,SAAa,kBACb,QAAY,SACZ,YAAgB,cAExB+W,YAAa,MCxBjB,IAAMD,GAAe,CACnBE,WAAW,EACXhG,iBAAiB,EACjBG,YAAa,ICIf,IAAM8F,GAAcC,aAAgB,CAChCnL,YFmBG,WAAoD,IAA/B9K,EAA8B,uDAAtB6V,GAAchG,EAAQ,uCACtD,OAAQA,EAAO/P,MACX,IAAK,YACD,OAAO,2BACAE,GADP,IAEImJ,MAAO0G,EAAO1G,QAEtB,IAAK,eACD,OAAO,2BACAnJ,GADP,IAEI8V,YAAajG,EAAO/F,OAE5B,IAAK,WACD,OAAO,2BACA9J,GADP,IAEI8I,WAAY+G,EAAO/F,OAE3B,QACI,OAAO9J,IEpCfS,aHHG,WAAqD,IAA/BT,EAA8B,uDAAtB6V,GAAchG,EAAQ,uCACvD,OAAQA,EAAO/P,MACX,IAAK,aACD,OAAO,2BACAE,GADP,IAEIhC,OAAQ6R,EAAO7R,SAEvB,IAAK,YACD,OAAO,2BACAgC,GADP,IAEIhC,OAAQgC,EAAMhC,OAAOP,KAAI,SAAAZ,GAAK,OAAIA,EAAMuB,MAAQyR,EAAOhT,MAAMuB,IAAMyR,EAAOhT,MAAQA,OAE1F,IAAK,eACD,OAAO,2BACAmD,GADP,IAEIhC,OAAQgC,EAAMhC,OAAOX,QAAO,SAAAR,GAAK,OAAIA,EAAMuB,MAAQyR,EAAOpT,aAElE,IAAK,YACD,OAAO,2BACAuD,GADP,IAEIhC,OAAO,GAAD,oBAAMgC,EAAMhC,QAAZ,CAAoB6R,EAAOhT,UAEzC,IAAK,aACD,OAAO,2BACAmD,GADP,IAEIgG,SAAU6J,EAAOxS,SAEzB,IAAK,kBACD,OAAO,2BACA2C,GADP,IAEI0C,iBAAkB1C,EAAM0C,kBAEhC,QACI,OAAO1C,IG7BfgQ,cDJG,WAA2D,IAApChQ,EAAmC,uDAA3B6V,GAAchG,EAAa,uDAAJ,GAC3D,OAAQA,EAAO/P,MACb,IAAK,gBACH,OAAO,2BAAKE,GAAZ,IAAmB+V,WAAW,IAChC,IAAK,eACH,OAAO,2BAAK/V,GAAZ,IAAmB+V,WAAW,IAChC,IAAK,gBACH,kCACK/V,GADL,IAEE+P,iBAAiB,EACjBG,YAAaL,EAAOlP,MAExB,IAAK,gBACD,OAAO,2BACFX,GADL,IAEE+P,iBAAiB,EACjBG,YAAa,KAEnB,QAAS,OAAOlQ,MCXdkW,GAAmBza,OAAO0a,sCAAwCC,KAE3DC,GAAQC,aAAYN,GAAaE,GAAiBK,aAAgBC,Q,OCN/EC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAACb,GAAD,OAEFjO,SAASoP,eAAe,SLsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/b,QAAQ+b,MAAMA,EAAM3G,c","file":"static/js/main.82f02ff4.chunk.js","sourcesContent":["import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    console.log('established connection');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import httpService from './httpService'\r\nimport socketService from './socketService';\r\n\r\nexport const boardService = {\r\n    loadBoards,\r\n    addBoard,\r\n    removeBoard,\r\n    updateBoard,\r\n    addGroup,\r\n    removeGroup,\r\n    updateGroup,\r\n    addTask,\r\n    removeTask,\r\n    updateTask\r\n}\r\n\r\nasync function loadBoards() {\r\n    const boards = await httpService.get(`board`)\r\n    return boards\r\n}\r\n\r\nfunction updateBoard(boardToSave, echo = true) {\r\n    if (echo) socketService.emit('updateBoard', boardToSave);\r\n    httpService.put(`board/${boardToSave._id}`, boardToSave)\r\n    return boardToSave\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n    return httpService.delete(`board/${boardId}`)\r\n}\r\n\r\nasync function addBoard() {\r\n    const board = {\r\n        boardCreator: {\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        },\r\n        \"name\": \"board\",\r\n        \"createdAt\": 198465168486,\r\n        \"description\": 'Enter description here',\r\n        \"members\": [{\r\n            \"fullName\": 'Liam Zety',\r\n            \"imgUrl\": 'https://via.placeholder.com/100',\r\n        }],\r\n        \"groups\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'group 1',\r\n            \"createdAt\": 'date',\r\n            \"color\": '#22f24',\r\n            \"lastUpdated\": 198465168486,\r\n            \"isTagsShown\": false,\r\n            \"tags\": [],\r\n            \"columns\": [{\r\n                \"type\": 'date',\r\n                \"name\": 'due date'\r\n            }],\r\n            \"tasks\": [{\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Stuck',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": [{ \"txt\": \"uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\" }, { \"txt\": \"ux\" }]\r\n            }, {\r\n                \"id\": _makeid(),\r\n                \"name\": 'sneeze',\r\n                \"createdAt\": 1123124124241,\r\n                \"members\": [],\r\n                \"status\": 'Working on it',\r\n                \"priority\": 'Low',\r\n                \"dueDate\": 1123124124241,\r\n                \"updates\": [],\r\n                \"lastUpdated\": 'yesterday',\r\n                \"isSelected\": false,\r\n                \"posts\": [],\r\n                \"tags\": [{ \"txt\": \"uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\" }, { \"txt\": \"ux\" }]\r\n            }]\r\n        }],\r\n        \"activityLog\": [{\r\n            \"id\": _makeid(),\r\n            \"createdAt\": 124124125124,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'removed task \"do the dishes\"',\r\n            \"task\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'do the dishes'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 12412541251,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'changed group name from project2 to project3',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project3'\r\n            }\r\n        },\r\n        {\r\n            \"createdAt\": 4514512352135,\r\n            \"byUser\": {\r\n                \"imgUrl\": 'www.imgur',\r\n                \"fullName\": 'shucks mcgee'\r\n            },\r\n            \"description\": 'added group project2',\r\n            \"group\": {\r\n                \"id\": _makeid(),\r\n                \"name\": 'project2'\r\n            }\r\n        }\r\n        ]\r\n    }\r\n    const newBoard = await httpService.post(`board`, board);\r\n    return newBoard;\r\n}\r\n\r\nfunction addGroup(board) {\r\n    const group = {\r\n        \"id\": _makeid(),\r\n        \"name\": 'week1',\r\n        \"createdAt\": 'date',\r\n        \"color\": '#70ADB5',\r\n        \"lastUpdated\": 198465168486,\r\n        \"isTagsShown\": false,\r\n        \"tags\": [],\r\n        \"columns\": [{\r\n            \"type\": 'date',\r\n            \"name\": 'due date'\r\n        }],\r\n        \"tasks\": [{\r\n            \"id\": _makeid(),\r\n            \"name\": 'sneeze',\r\n            \"createdAt\": 1123124124241,\r\n            \"members\": [],\r\n            \"status\": 'Working on it',\r\n            \"priority\": 'Low',\r\n            \"dueDate\": 214124124125,\r\n            \"updates\": [\r\n                {\r\n                    \"txt\": 'dont forget about this',\r\n                    \"member\": 'Roei Arazi'\r\n                },\r\n                {\r\n                    \"txt\": 'https://res.cloudinary.com/dtg7n0zye/image/upload/v1600008729/i70mbqxvm0qh1yeznsnf.jpg',\r\n                    \"member\": 'Liam Zety'\r\n                }\r\n            ],\r\n            \"lastUpdated\": 'yesterday',\r\n            \"isSelected\": false,\r\n            \"posts\": [],\r\n            \"tags\": ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n        }]\r\n    }\r\n    try {\r\n        board.groups.push(group)\r\n        updateBoard(board)\r\n        return board\r\n    } catch (err) {\r\n        console.log('boardService: Couldn\\'t add group');\r\n        throw err;\r\n    }\r\n}\r\n\r\nfunction removeGroup(groupId, board) {\r\n    board.groups = board.groups.filter(group => group.id !== groupId)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction updateGroup(updatedGroup, board) {\r\n    board.groups = board.groups.map(group => group.id === updatedGroup.id ? updatedGroup : group)\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nasync function removeTask(taskId, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.filter(task => task.id !== taskId)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n\r\n}\r\n\r\nasync function addTask(groupId, taskName = 'Change Task Name', board) {\r\n    const task = {\r\n        id: _makeid(),\r\n        name: taskName,\r\n        createdAt: 1123124124241,\r\n        members: [],\r\n        status: 'Done',\r\n        priority: 'Low',\r\n        dueDate: Date.now(),\r\n        updates: [],\r\n        lastUpdated: Date.now(),\r\n        isSelected: false,\r\n        posts: [],\r\n        tags: ['uilorem2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@', 'ux']\r\n    }\r\n    board.groups.map(group => {\r\n        if (group.id === groupId) group.tasks.push(task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board;\r\n}\r\n\r\nfunction updateTask(updatedTask, board) {\r\n    board.groups = board.groups.map(group => {\r\n        group.tasks = group.tasks.map(task => task.id === updatedTask.id ? updatedTask : task)\r\n        return group;\r\n    })\r\n    updateBoard(board)\r\n    return board\r\n}\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}","import { boardService } from '../../services/boardService'\r\n\r\n\r\n\r\n//------------------BOARD CRUD-----------------\r\nexport function loadBoards() {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.loadBoards();\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t load boards');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            boardService.updateBoard(boardToSave);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function recieveUpdate(boardToSave) {\r\n    return async dispatch => {\r\n        try {\r\n            console.log('got board:', boardToSave);\r\n            boardService.updateBoard(boardToSave, false);\r\n            dispatch({ type: 'SET_BOARD', board: boardToSave })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t update board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            await boardService.removeBoard(boardId);\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard() {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.addBoard();\r\n\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add board');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//------------------GROUP CRUD-----------------\r\n\r\nexport function removeGroup(groupId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeGroup(groupId, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard });\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t remove group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function addGroup(boardId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addGroup(boardId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Couldn\\'t add group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\nexport function editGroup(group, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateGroup(group, board)\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit group');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n//-----------------TASKS CRUD------------------------\r\n\r\nexport function addTask(groupId, taskName, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.addTask(groupId, taskName, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeTask(taskId, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.removeTask(taskId, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t add task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function editTask(task, board) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoard = boardService.updateTask(task, board);\r\n            dispatch({ type: 'SET_BOARD', board: updatedBoard })\r\n        } catch (err) {\r\n            console.log('boardActions: Coulnd\\'t edit task');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\n//-----------------FILTER ACTIONS------------------------\r\n\r\nexport function setFilter(filter) {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter })\r\n    }\r\n}\r\n\r\nexport function clearFilter() {\r\n    return dispatch => {\r\n        dispatch({ type: 'SET_FILTER', filter: {} })\r\n    }\r\n}\r\n//---------------------BOARD BAR--------------------\r\n\r\n\r\nexport function toggleBoardbar() {\r\n    return dispatch => {\r\n        dispatch({ type: 'TOGGLE_BOARDBAR' })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Home extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.boards || this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"home\">\r\n                <h1>Home</h1>\r\n                <NavLink to={`/board/${this.props.boards[0]._id}`}>\r\n                    <button>Start Here!</button>\r\n                </NavLink>\r\n                <NavLink to=\"/login\">\r\n                    <button>Login</button>\r\n                </NavLink>\r\n                <NavLink to=\"/signup\">\r\n                    <button>Sign-up</button>\r\n                </NavLink>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home);","export function loading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_START' })\r\n  }\r\n}\r\nexport function doneLoading() {\r\n  return dispatch => {\r\n    dispatch({ type: 'LOADING_DONE' })\r\n  }\r\n}\r\n\r\nexport function showSnackbar(msg){\r\n  return dispath => {\r\n    dispath({type: 'SHOW_SNACKBAR', msg})\r\n  }\r\n}\r\n\r\nexport function hideSnackbar(){\r\n  return dispatch => {\r\n    dispatch({type: 'HIDE_SNACKBAR'})\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport { HiOutlineCog } from 'react-icons/hi';\r\nimport { BsFilePlus, BsArrowsCollapse, BsArrowsExpand } from 'react-icons/bs';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { removeBoard, addBoard, toggleBoardbar, updateBoard, recieveUpdate } from '../store/actions/boardActions.js';\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\nimport socketService from '../services/socketService';\r\n\r\nclass _Boardbar extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        selectedBoardId: '',\r\n        isSnackbarOpen: false,\r\n        isShown: '',\r\n        searchVal: ''\r\n    }\r\n    componentDidMount() {\r\n        socketService.on('updatedBoard', updatedBoard => {\r\n            this.props.recieveUpdate(updatedBoard)\r\n        });\r\n\r\n        this.setState({ isShown: this.props.isBoardbarShown })\r\n    }\r\n\r\n    onMoveToBoard(id) {\r\n        this.props.history.push(`/board/${id}`)\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ anchorEl: ev.currentTarget, selectedBoardId: boardId })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null })\r\n    }\r\n\r\n    onBoardRemove = (boardId) => {\r\n        const { boards, match, history, removeBoard } = this.props\r\n        const { id } = match.params;\r\n        this.handleMenuClose()\r\n        if (boards.length === 1) {\r\n            console.log('you need at least one board!');\r\n            return;\r\n        }\r\n        removeBoard(boardId);\r\n        this.props.showSnackbar('Removed board.');\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        if (id === boardId) {\r\n            const idx = boards.findIndex(board => board._id !== boardId)\r\n            history.push(`/board/${boards[idx]._id}`)\r\n        }\r\n    }\r\n\r\n    onToggleShown = () => {\r\n        this.props.toggleBoardbar()\r\n        this.setState({ isShown: !this.state.isShown })\r\n    }\r\n    handleSearchChange = (ev) => {\r\n        this.setState({ searchVal: ev.target.value })\r\n    }\r\n    handleSearch = () => {\r\n        const filteredBoards =\r\n            this.props.boards.filter(board => board.name.toLowerCase().includes(this.state.searchVal.toLowerCase()))\r\n        return filteredBoards\r\n    }\r\n\r\n    render() {\r\n        const { anchorEl, selectedBoardId, isShown } = this.state;\r\n        const filteredBoards = this.handleSearch()\r\n\r\n        return (\r\n            <section className={`boardbar fixed column ${isShown && 'board-bar-shown'}`}>\r\n                {\r\n                    isShown ? (\r\n                        <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                            <div className=\"board-bar-toggle-container\">\r\n                                <BsArrowsCollapse style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                    onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                            </div>\r\n                        </Tooltip>\r\n                    )\r\n                        : (\r\n                            <Tooltip enterDelay={800} TransitionComponent={Zoom} title=\"Toggle Board\" arrow>\r\n                                <div className=\"board-bar-toggle-container\">\r\n                                    <BsArrowsExpand style={{ color: this.props.location.pathname.includes('/myweek') && '#151515' }}\r\n                                        onClick={this.onToggleShown} className=\"board-bar-toggle\" />\r\n                                </div>\r\n                            </Tooltip>\r\n                        )\r\n                }\r\n\r\n                {isShown && <div className=\"boardbar-header\">\r\n                    <h1>Boards</h1>\r\n                    <BsFilePlus onClick={this.props.addBoard} />\r\n                </div>}\r\n                {isShown && <input onChange={this.handleSearchChange} type=\"text\" placeholder=\"Search Board\" />}\r\n                <ul>\r\n                    {isShown && filteredBoards.map((board, idx) => {\r\n                        return <li\r\n                            className=\"flex align-center\"\r\n                            key={idx}>\r\n                            <HiOutlineCog onClick={(ev) => this.handleMenuOpen(ev, board._id)} />\r\n\r\n                            <h4 onClick={() => this.onMoveToBoard(board._id)}>{board.name}</h4>\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n                <Menu\r\n                    role=\"menuContainer\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                >\r\n                    <MenuItem onClick={() => this.onBoardRemove(selectedBoardId)}>Delete</MenuItem>\r\n                    <MenuItem onClick={this.handleMenuClose}>Edit</MenuItem>\r\n                </Menu>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        isBoardbarShown: state.boardReducer.isBoardbarShown\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    removeBoard,\r\n    addBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    toggleBoardbar,\r\n    recieveUpdate\r\n}\r\n\r\nexport const Boardbar = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Boardbar));","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport Truncate from 'react-truncate';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\r\nimport { AiOutlineClose } from 'react-icons/ai';\r\n\r\n\r\nexport default class Activities extends Component {\r\n\r\n    state = {\r\n        isOrderReversed: false,\r\n        filteredActivities: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ filteredActivities: this.props.activityLog })\r\n    }\r\n\r\n    handleSearch = ({ target }) => {\r\n        const filteredActivities = this.props.activityLog.filter((activitiy) => {\r\n            return activitiy.description.toLowerCase()\r\n                .includes(target.value.toLocaleLowerCase())\r\n                ||\r\n                activitiy.byUser.fullName.toLowerCase()\r\n                    .includes(target.value.toLocaleLowerCase())\r\n        })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n    reverseOrder = () => {\r\n        const filteredActivities = this.state.filteredActivities.sort((activitiy1, activitiy2) => {\r\n            const res = this.state.isOrderReversed ? -1 : 1;\r\n            if (activitiy1.createdAt < activitiy2.createdAt) return -res;\r\n            if (activitiy1.createdAt > activitiy2.createdAt) return res;\r\n            return 0;\r\n        })\r\n        this.setState({ isOrderReversed: !this.state.isOrderReversed })\r\n        this.setState({ filteredActivities })\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.filteredActivities) return <h1>Loading...</h1>\r\n        const { isOrderReversed, filteredActivities } = this.state;\r\n        return (\r\n            <section className=\"activities flex column padding-y-15\">\r\n\r\n                <header className=\"padding-x-15\">\r\n\r\n                    <AiOutlineClose onClick={this.props.onToggleActivities} />\r\n                    <h1><span>{this.props.boardName}</span> Log</h1>\r\n\r\n                    <div className='filters-container space-between flex align-center'>\r\n                        <input onChange={this.handleSearch} type=\"text\" placeholder=\"Search\" />\r\n                        {isOrderReversed ?\r\n                            <div data-title=\"test\"><FaArrowUp size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            :\r\n                            <div data-title=\"test\"><FaArrowDown size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                        }\r\n                    </div>\r\n\r\n                </header>\r\n\r\n\r\n                <div className=\"activity-list column flex \">\r\n                    {filteredActivities.map((activity, idx) => {\r\n\r\n                        return (\r\n                            <div key={idx} className=\"activity padding-x-15 space-between flex align-center\">\r\n                                <div className=\"activity-desc-container flex align-center\">\r\n                                    <div className=\"user-img-container flex align-center justify-center\">\r\n                                        <img src={activity.byUser.imgUrl} alt=\"\" />\r\n                                    </div>\r\n                                    <h2>{activity.byUser.fullName}</h2>\r\n                                    <p>\r\n                                        <Truncate lines={1} ellipsis={\"...\"} width={550}>\r\n                                            {activity.description}\r\n                                        </Truncate>\r\n                                    </p>\r\n                                </div>\r\n\r\n                                <p className=\"date-created\">{moment(activity.createdAt).fromNow()}</p>\r\n\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { setFilter } from '../store/actions/boardActions';\r\nimport { Fade } from '@material-ui/core';\r\n\r\nimport moment from 'moment';\r\n\r\nfunction _Filter(props) {\r\n    const { board, filterBy, setFilter } = props;\r\n\r\n    function onSetFilter(filterKey, filterValue) {\r\n        if (filterBy[filterKey] === filterValue) filterValue = '';\r\n        setFilter({ ...filterBy, [filterKey]: filterValue })\r\n    }\r\n\r\n    function getBoardDates() {\r\n        const dates = {};\r\n        board.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                const date = moment(task.dueDate).format('DD.MM.YY');\r\n                dates[date] = task.dueDate;\r\n            })\r\n        })\r\n        const res = [];\r\n        for (let key in dates) {\r\n            res.push({ formatted: key, value: dates[key] })\r\n        }\r\n        return res;\r\n    }\r\n\r\n    if (!board) return <h1>Loading...</h1>\r\n    const { groups, members } = board;\r\n    const dates = getBoardDates();\r\n    return (\r\n        <Fade in={true}>\r\n            <div className=\"filter-modal flex absolute\">\r\n                <section className=\"group-name-filter flex column align-center\">\r\n                    <h3>Groups</h3>\r\n                    <div className=\"filter-list\">\r\n                        {groups.map((group, idx) => <button\r\n                            className={filterBy.groupId === group.id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('groupId', group.id)}>{group.name}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-member-filter flex column align-center\">\r\n                    <h3>Member</h3>\r\n                    <div className=\"filter-list\">\r\n                        {members.map((member,idx) => <button\r\n                            className={filterBy.memberId === member._id ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('memberId', member._id)}>{member.fullName}</button>)}\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-priority-filter flex column align-center\">\r\n                    <h3>Priority</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskPriority === 'low' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'low')}>Low</button>\r\n                        <button className={filterBy.taskPriority === 'medium' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'medium')}>Medium</button>\r\n                        <button className={filterBy.taskPriority === 'high' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskPriority', 'high')}>High</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-status-filter flex column align-center\">\r\n                    <h3>Status</h3>\r\n                    <div className=\"filter-list\">\r\n                        <button className={filterBy.taskStatus === 'done' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'done')}>Done</button>\r\n                        <button className={filterBy.taskStatus === 'working on it' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'working on it')}>Working on it </button>\r\n                        <button className={filterBy.taskStatus === 'stuck' ? 'remove-filter-btn' : ''} onClick={() => onSetFilter('taskStatus', 'stuck')}>Stuck</button>\r\n                    </div>\r\n                </section>\r\n                <section className=\"task-date-filter flex column align-center\">\r\n                    <h3>Due-Date</h3>\r\n                    <div className=\"filter-list\">\r\n                        {dates.map((date, idx) => <button\r\n                            className={filterBy.dueDate === date.value ? 'remove-filter-btn' : ''}\r\n                            key={idx}\r\n                            onClick={() => onSetFilter('dueDate', date.value)}>{date.formatted}</button>)}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setFilter\r\n}\r\n\r\nexport const Filter = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Filter));","import React from 'react';\r\nimport { GoRequestChanges, GoSearch } from 'react-icons/go'\r\nimport { VscListFilter } from 'react-icons/vsc'\r\nimport ContentEditable from 'react-contenteditable';\r\nimport Activities from './Activities';\r\nimport { Filter } from './Filter';\r\nimport { withRouter } from 'react-router-dom';\r\nimport socketService from '../services/socketService.js'\r\n\r\nexport class _BoardHeader extends React.Component {\r\n\r\n    state = {\r\n        _id: '',\r\n        isActivitiesOpen: false,\r\n        isFiltersOpen: false,\r\n        elSetting: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editableName = React.createRef();\r\n        this.editableDescription = React.createRef();\r\n        socketService.on('updatedBoard', () =>{\r\n            this.setState({ ...this.props.board })\r\n        })\r\n        this.setState({ ...this.props.board })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.board._id !== this.props.board._id) {\r\n            this.setState({ ...this.props.board })\r\n        }\r\n    }\r\n\r\n    handleChangeName = (ev) => {\r\n        this.setState({ name: ev.target.value })\r\n    }\r\n\r\n    handleChangeDesc = (ev) => {\r\n        this.setState({ description: ev.target.value })\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n    onToggleActivities = () => {\r\n        this.setState({ isActivitiesOpen: !this.state.isActivitiesOpen })\r\n    }\r\n\r\n    onToggleFilters = () => {\r\n        this.setState({ isFiltersOpen: !this.state.isFiltersOpen })\r\n    }\r\n\r\n    handleMenuOpen = (ev, boardId) => {\r\n        this.setState({ elSetting: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ elSetting: null })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (!this.state._id) return <h1>Loading...</h1>\r\n        return (\r\n            <section className=\"board-header align-center padding-x-30 padding-y-45 \">\r\n                <div className=\"col-left flex column\">\r\n                    <h1>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableName}\r\n                            html={this.state.name} // innerHTML of the editable div\r\n                            disabled={false}       // use true to disable editing\r\n                            onChange={this.handleChangeName} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h1>\r\n                    <h5>\r\n                        <ContentEditable\r\n                            onFocus={this.focusText}\r\n                            className=\"content-editable cursor-initial\"\r\n                            innerRef={this.editableDescription}\r\n                            html={this.state.description} // innerHTML of the editable div\r\n                            disabled={false}        // use true to disable editing\r\n                            onChange={this.handleChangeDesc} // handle innerHTML change\r\n                            onBlur={() => {\r\n                                this.props.onEditBoard(this.state.name, this.state.description)\r\n                            }}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                    this.props.onEditBoard(this.state.name, this.state.description)\r\n                                }\r\n                            }}\r\n                        />\r\n                    </h5>\r\n                </div>\r\n                <div className=\"col-right flex align-center\">\r\n                    <button onClick={this.props.onAddGroup}>New Group</button>\r\n                    <div className=\"search-outer-container flex align-center\">\r\n                        <input placeholder=\"Search\" type='text' onChange={this.props.handleSearch} />\r\n                        <GoSearch />\r\n                    </div>\r\n                    <div onClick={this.onToggleActivities} className=\"activities-outer-container flex align-center  cursor-pointer\">\r\n                        <GoRequestChanges />\r\n                        <h2 >Activity Log</h2>\r\n                    </div>\r\n\r\n                    <div onClick={!this.state.isFiltersOpen ? this.onToggleFilters : () => { }} className=\"filters-outer-container relative flex align-center cursor-pointer\"  >\r\n                        <VscListFilter />\r\n                        <h2>Filter</h2>\r\n                        {\r\n                            this.state.isFiltersOpen &&\r\n\r\n                            <Filter board={this.props.board} />\r\n\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={`${this.state.isActivitiesOpen && 'animate-side-modal'} side-modal`}>\r\n                    <Activities onToggleActivities={this.onToggleActivities}\r\n                        boardName={this.props.board.name} activityLog={this.props.board.activityLog} />\r\n                </div>\r\n                {\r\n                    this.state.isFiltersOpen && <div onClick={this.onToggleFilters} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n                {\r\n                    this.state.isActivitiesOpen && <div onClick={this.onToggleActivities} className='modal-screen-wrapper'></div>\r\n                }\r\n\r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const BoardHeader = withRouter(_BoardHeader)","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Fade } from '@material-ui/core';\r\nimport Truncate from 'react-truncate';\r\nimport { AiOutlineDelete } from 'react-icons/ai';\r\n\r\nexport class Notifications extends Component {\r\n\r\n    state = {\r\n        isModalOpen: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n    onRemoveNotifications = () => {\r\n        this.props.removeNotifications(this.props.loggedUser)\r\n        this.setState({ isModalOpen: true })\r\n    }\r\n\r\n    render() {\r\n        const { loggedUser } = this.props;\r\n        return (\r\n\r\n            <Fade in={this.state.isModalOpen}>\r\n                <section className=\"notifications padding-x-15 padding-y-15\">\r\n                    <header className=\"flex space-between align-center\">\r\n                        {loggedUser.notifications.length !== 0\r\n                            ? (\r\n                                <React.Fragment>\r\n                                    <h1>Notifications</h1>,\r\n                                    <AiOutlineDelete onClick={this.onRemoveNotifications} />\r\n                                </React.Fragment>\r\n                            )\r\n                            : (<h1>You have no notifications.</h1>)}\r\n                    </header>\r\n                    <div className=\"notifications-container\">\r\n                        {\r\n                            loggedUser.notifications && (\r\n                                loggedUser.notifications.map((notification, idx) => {\r\n                                    return (\r\n                                        <div key={idx} className=\"notification flex \">\r\n                                            <div className=\"user-img-container\">\r\n                                                <img src={notification.byUser.imgUrl} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"notification-msg flex align-center column\">\r\n                                                <h2>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.byUser.fullName}\r\n                                                    </Truncate>\r\n                                                </h2>\r\n                                                <p>\r\n                                                    <Truncate lines={1} ellipsis={\"...\"} width={350}>\r\n                                                        {notification.content}\r\n                                                    </Truncate>\r\n                                                </p>\r\n                                                <div>\r\n                                                    <p>{moment(notification.createdAt).fromNow()}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n\r\n                                })\r\n                            )\r\n\r\n\r\n                        }\r\n                    </div>\r\n                </section>\r\n            </Fade>\r\n        )\r\n    }\r\n}\r\n\r\n","import httpService from \"./httpService\";\r\n\r\nlet users = [{\r\n    \"username\": 'frize',\r\n    \"fullName\": 'Roei Arazi',\r\n    \"password\": '3333',\r\n    \"email\": 'frize@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224132124'\r\n},\r\n{\r\n    \"username\": 'anstrio',\r\n    \"fullName\": 'Osher Kabada',\r\n    \"password\": '2222',\r\n    \"email\": 'anstrio@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224127124'\r\n},\r\n{\r\n    \"username\": 'smoking',\r\n    \"fullName\": 'Liam Zety',\r\n    \"password\": '1111',\r\n    \"email\": 'smoking@gmail.com',\r\n    \"imgUrl\": 'https://via.placeholder.com/250',\r\n    \"isAdmin\": true,\r\n    \"boards\": [],\r\n    \"notifications\": [],\r\n    \"birthDay\": '2nd August 1997',\r\n    \"company\": 'adidas',\r\n    \"phoneNumber\": '0224112124'\r\n}\r\n]\r\n\r\nexport const userService = {\r\n    loadUsers,\r\n    getUserById,\r\n    login,\r\n    signup,\r\n    guestLogin,\r\n    markAsRead,\r\n    updateUser\r\n}\r\n\r\nasync function loadUsers() {\r\n    try {\r\n        const users = await httpService.get('user')\r\n        return users;\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get users');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function markAsRead(loggedUser) {\r\n    loggedUser.notifications.forEach(notification => {\r\n        notification.isRead = true\r\n    })\r\n    try {\r\n        return loggedUser\r\n\r\n    } catch (err) {\r\n        console.log('userService: Something went wrong');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getUserById(userId) {\r\n    console.log('got to user service', userId);\r\n    try {\r\n        const user = await httpService.get(`user/${userId}`);\r\n        console.log('got from service:', user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Coulnd\\'t get user');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        // const user = users.find(user => user.username === userCred.username && user.password === userCred.password);\r\n        const user = await httpService.post('auth/login', userCred);\r\n        if (!user) throw 'Wrong username or password'\r\n        return user;\r\n    } catch (err) {\r\n        console.log('userService: Wrong username or password');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = {\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n        ...userCred\r\n    }\r\n    try {\r\n        const newUser = await httpService.post('auth/signup', user)\r\n        return newUser;\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t sign up');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function guestLogin() {\r\n    const user = {\r\n        _id: _makeid(),\r\n        username: 'guest',\r\n        fullName: 'guest mcgee',\r\n        password: 'none',\r\n        imgUrl: 'https://via.placeholder.com/100',\r\n        isAdmin: true,\r\n        boards: [{ id: '212', name: 'board1' }],\r\n        notifications: [],\r\n        birthDay: '2nd August 1997',\r\n        company: 'adidas',\r\n        phoneNumber: '0224132124',\r\n\r\n    }\r\n    try {\r\n        users.push(user);\r\n        return user\r\n    } catch (err) {\r\n        console.log('userService: Couldn\\'t login as guest');\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function updateUser(loggedUser) {\r\n    const userIdx = users.findIndex(user => user._id === loggedUser._id)\r\n\r\n    try {\r\n        users[userIdx] = { ...loggedUser }\r\n    } catch (err) {\r\n        console.log('ERROR, couldnt update user', err);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction _makeid(length = 7) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}","import { userService } from \"../../services/userService\";\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.loadUsers();\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t load users');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function login(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCred) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCred);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t signup');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function guestLogin() {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.guestLogin();\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function markAsRead(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.markAsRead(loggedUser);\r\n            dispatch({ type: 'SET_USER', user })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t login as a guest');\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeNotifications(loggedUser) {\r\n    const user = loggedUser\r\n    user.notifications = []\r\n\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'UPDATE_PROFILE', user })\r\n        } catch (err) {\r\n            console.log('ERROR, couldnt remove notifications', err);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function updateUser(loggedUser) {\r\n    return async dispatch => {\r\n        try {\r\n            userService.updateUser(loggedUser)\r\n            dispatch({ type: 'SET_USER', user: loggedUser })\r\n        } catch (err) {\r\n            console.log('userActions: Couldn\\'t update user');\r\n            throw err;\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaAd } from 'react-icons/fa'\r\nimport { VscBell, VscBellDot } from 'react-icons/vsc'\r\nimport { BsCalendar } from 'react-icons/bs'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { Notifications } from './Notifications';\r\nimport { markAsRead, removeNotifications } from '../store/actions/userActions'\r\nclass _Navbar extends Component {\r\n    state = {\r\n        isNotificationShown: false\r\n    }\r\n\r\n    toggleNotifications = () => {\r\n\r\n        this.onMarkAsRead()\r\n        this.setState({ isNotificationShown: !this.state.isNotificationShown })\r\n    }\r\n    onMarkAsRead = () => {\r\n        this.props.markAsRead(this.props.loggedUser)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isNotificationShown } = this.state\r\n        const { loggedUser, removeNotifications } = this.props\r\n        return (\r\n            <section className=\"navbar flex column space-between align-center padding-y-15\">\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/\">\r\n                        <FaAd />\r\n                    </NavLink>\r\n\r\n                    {isNotificationShown && <div className=\"modal-screen-wrapper\" onClick={this.toggleNotifications} />}\r\n                    <div className=\"icon-container\" onClick={!this.state.isNotificationShown ? this.toggleNotifications : () => { }} >\r\n                        {\r\n                            loggedUser.notifications.filter(notification => !notification.isRead).length === 0\r\n                                ? ''\r\n                                : <p className=\"notifications-counter cursor-pointer\">\r\n                                    {loggedUser.notifications.filter(notification => !notification.isRead).length}\r\n                                </p>\r\n                        }\r\n                        {\r\n                            isNotificationShown &&\r\n                            <Notifications removeNotifications={removeNotifications} loggedUser={loggedUser} />\r\n\r\n                        }\r\n\r\n                        {loggedUser.notifications.some(notification => !notification.isRead)\r\n                            ? <VscBellDot />\r\n                            : <VscBell />}\r\n                    </div>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-links flex column space-around\">\r\n                    <NavLink to=\"/myweek\">\r\n                        <div className=\"icon-container\"><BsCalendar /></div>\r\n                    </NavLink>\r\n                    <NavLink to={loggedUser ? `/user/${loggedUser._id}` : '/login'}>\r\n                        <li><CgProfile /></li>\r\n                    </NavLink>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    markAsRead,\r\n    removeNotifications\r\n}\r\n\r\nexport const Navbar = connect(mapStateToProps, mapDispatchToProps)(_Navbar);","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg'\r\nimport { AiOutlineMinus } from 'react-icons/ai'\r\nimport { FiPlus } from 'react-icons/fi';\r\n\r\nexport function Members(props) {\r\n    const usersToAdd = props.users.filter(user => !props.members.some(member => member._id === user._id))\r\n    return (\r\n\r\n        <div className=\"user-img-container relative flex justify-center align-center\" onClick={() => props.openModal('users')}>\r\n            {props.members.length ? props.members[0].imgUrl\r\n                ?\r\n                <img alt=\"profile\" src={props.members[0].imgUrl} />\r\n                :\r\n                <div className=\"member-letter\">{props.members[0].fullName.charAt(0).toUpperCase()}</div> : <div className=\"no-members-container\"> <CgProfile className=\"no-members-icon\" /> <FiPlus className=\"no-members-icon-plus\" /></div>}\r\n\r\n            {(props.members.length !== 0) &&\r\n                <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{props.members.length}</span></div>}\r\n\r\n            {props.isUsersShown &&\r\n                <div className=\"users-modal absolute\">\r\n                    <div className=\"task-users-box\">\r\n                        <h3>Task Members</h3>\r\n                        {props.members.map(member =>\r\n                            <section key={member._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex align-center\" onClick={() => props.goToUserProfile(member._id)}>\r\n                                    {member.imgUrl ? <img src={member.imgUrl} alt=\"profile\" /> : <div className=\"member-letter\">{member.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{member.fullName}</p>\r\n                                </div>\r\n                                <AiOutlineMinus onClick={() => props.onRemoveMemberFromTask(member._id)} />\r\n                            </section>\r\n                        )}\r\n\r\n                    </div>\r\n                    <div className=\"board-users-box\">\r\n                        <h3>Board Members</h3>\r\n                        {usersToAdd.map(user => {\r\n                            return <section key={user._id} className=\"user-box flex space-between align-center\">\r\n                                <div className=\"user-box-info flex  align-center\" onClick={() => props.goToUserProfile(user._id)}>\r\n                                    {user.imgUrl ? <img src={user.imgUrl} alt=\"profile\" /> :\r\n                                        <div className=\"member-letter\">{user.fullName.charAt(0).toUpperCase()}</div>}\r\n                                    <p className=\"member-name\">{user.fullName}</p>\r\n                                </div>\r\n                                <FiPlus onClick={() => props.onAddUserToTask(user._id)} />\r\n                            </section>\r\n                        })}\r\n                    </div>\r\n\r\n                </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Status(props) {\r\n    return (\r\n        <div className=\"label-container relative\">\r\n            <div className={`label-box ${props.status.split(\" \")[0].toLowerCase()}`} onClick={() => props.openModal('status')}>\r\n                <div className=\"task-label-name\">\r\n                <p>{props.status}</p>\r\n                </div>\r\n                {props.isStatusShown &&\r\n                    <div className=\"label-list absolute flex column align-center\">\r\n                        <section className=\"label-selector stuck\" onClick={() => props.handleChange(\"Stuck\")}>\r\n                            <p>Stuck</p>\r\n                        </section>\r\n                        <section className=\"label-selector working\" onClick={() => props.handleChange(\"Working on it\")}>\r\n                            <p>Working on it</p>\r\n                        </section>\r\n                        <section className=\"label-selector done\" onClick={() => props.handleChange(\"Done\")}>\r\n                            <p>Done</p>\r\n                        </section>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nexport function Date(props){\r\n    return(\r\n        <label>\r\n        <DatePicker\r\n            selected={props.dueDate}\r\n            onChange={props.handleDateChange}\r\n            dateFormat=\"dd/MM/yyyy\"\r\n        />\r\n    </label>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport function Priority(props){\r\n    return(\r\n        <div className=\"label-container relative\">\r\n        <div className={`label-box ${props.priority.toLowerCase()}`} onClick={() => props.openModal('priority')}>\r\n        <div className=\"task-label-name\">\r\n            <p>{props.priority}</p>\r\n            </div>\r\n            {props.isPriorityShown &&\r\n                <div className=\"label-list absolute flex column align-center\">\r\n                    <section className=\"label-selector low\" onClick={() => props.handleChange(\"Low\")}>\r\n                        <p>Low</p>\r\n                    </section>\r\n                    <section className=\"label-selector medium\" onClick={() => props.handleChange(\"Medium\")}>\r\n                        <p>Medium</p>\r\n                    </section>\r\n                    <section className=\"label-selector high\" onClick={() => props.handleChange(\"High\")}>\r\n                        <p>High</p>\r\n                    </section>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    </div>\r\n    )\r\n}","\r\nexport const cloudinaryService = {\r\n    uploadImg\r\n}\r\n\r\nasync function uploadImg(ev, taskState) {\r\n    const CLOUD_NAME = \"dtg7n0zye\"\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', 'Task-Us');\r\n    try {\r\n        const res = await fetch(UPLOAD_URL, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import React from 'react'\r\nimport { IoMdSend } from 'react-icons/io'\r\nimport { cloudinaryService } from '../../services/cloudinaryService';\r\n\r\nexport class Updates extends React.Component {\r\n\r\n    state = {\r\n        update: {\r\n            txt: ''\r\n        },\r\n        updates: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ updates: this.props.updates })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ update: { ...this.state.update, txt: ev.target.value } })\r\n    }\r\n\r\n    sendNote = (ev) => {\r\n        ev.preventDefault()\r\n        if (!this.state.update.txt || this.state.update.txt.split('').every(letter => letter === ' ')) return\r\n        const newNote = {\r\n            txt: this.state.update.txt,\r\n            member: this.props.loggedUser.fullName\r\n        }\r\n        const updates = [newNote, ...this.props.updates]\r\n\r\n        this.setState({ updates, update: { txt: '' } })\r\n\r\n        this.props.sendNote(updates)\r\n    }\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev, this.state)\r\n        const newImg = {\r\n            member: this.props.loggedUser.fullName,\r\n            txt: res.url\r\n        }\r\n        const updates = [newImg, ...this.props.updates]\r\n        this.props.sendNote(updates)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (!this.state.updates) return <h1>Loading...</h1>;\r\n\r\n        const { updates, onToggleImageModal, isImageModalShown } = this.props\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"updates-header flex column align-center\">\r\n                    <h1>Updates</h1>\r\n                    <div className=\"updates-header-options flex align-center space-between\">\r\n                        <form onSubmit={this.sendNote} className=\"notes-form flex justify-center align-center\">\r\n                            <input type=\"text\" placeholder=\"Text Note\" value={this.state.update.txt} onChange={this.handleChange} />\r\n                            <IoMdSend onClick={this.sendNote} />\r\n                        </form>\r\n                        <div className=\"image-uploader\">\r\n                            <label htmlFor=\"task-imgs\">Upload Image</label>\r\n                            <input type=\"file\" id=\"task-imgs\" onChange={(ev) => {\r\n                                this.uploadImg(ev)\r\n                            }} hidden />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div onClick={isImageModalShown ? onToggleImageModal : () => { }} className=\"updates-container  flex column\">\r\n\r\n                    {updates.map((update, idx) => {\r\n\r\n                        if (update.txt.includes('https://res') || update.txt.includes('http://res')) {\r\n                            return <div key={idx} className=\"update-box flex wrap column\">\r\n                                <p className=\"member-name\">{update.member}</p>\r\n                                <img className=\"cursor-pointer\" onClick={() => {\r\n                                    onToggleImageModal(update.txt)\r\n                                }} src={update.txt} />\r\n                            </div>\r\n                        } else return <div key={idx} className=\"update-box\"><p className=\"member-name\" key={idx}>{update.member}</p>\r\n                            <p className=\"update-text\">{update.txt}</p>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { BsChatDots } from 'react-icons/bs'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport socketService from '../services/socketService.js'\r\nimport moment from 'moment';\r\n//Material ui\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\n// Inside Imports\r\nimport { Members } from './task-cmps/Members';\r\nimport { Status } from './task-cmps/Status'\r\nimport { Date } from './task-cmps/Date';\r\nimport { Priority } from './task-cmps/Priority';\r\nimport { Updates } from './task-cmps/Updates';\r\nimport { Tags } from './task-cmps/Tags';\r\nimport Truncate from 'react-truncate';\r\n\r\nclass _Task extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        isStatusShown: false,\r\n        isPriorityShown: false,\r\n        isUsersShown: false,\r\n        isUpdatesShown: false,\r\n        isTagsShown: false,\r\n        imgUrl: '',\r\n        isImageModalShown: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', () => {\r\n\r\n            this.setState({ task: this.props.task })\r\n        })\r\n        this.setState({\r\n            ...this.state,\r\n            task: this.props.task,\r\n            isStatusShown: false,\r\n            isPriorityShown: false,\r\n            isUsersShown: false,\r\n            isUpdatesShown: false,\r\n            isTagsShown: false\r\n        })\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({task:{...this.state.task, name: ev.target.value} });\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({task:{...this.state.task, dueDate: moment(date).valueOf()}}, () =>{\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    handleChange = (data, tags) => {\r\n        if (data === 'Stuck' || data === 'Working on it' || data === 'Done') {\r\n            this.setState({task: {...this.state.task, status: data} }, () =>{\r\n                this.props.onEditTask(this.state.task)\r\n            })\r\n        // } else if (data === 'tag') {\r\n        //     console.log('IMHERE, data:', data, 'tag:', tags)\r\n        //     this.setState({ ...this.state, tags })\r\n        //     this.props.onEditTask(this.state, tags)\r\n        } else {\r\n            this.setState({task:{...this.state.task, priority: data}}, () =>{\r\n                this.props.onEditTask(this.state.task)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    sendNote = (newUpdates) => {\r\n        this.setState({task:{...this.state.task, updates: [...newUpdates]}}, ()=>{\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    openModal = (data) => {\r\n        switch (data) {\r\n            case 'status':\r\n                this.setState({ isStatusShown: !this.state.isStatusShown })\r\n                break;\r\n            case 'users':\r\n                this.setState({ isUsersShown: !this.state.isUsersShown })\r\n                break;\r\n            case 'updates':\r\n                this.setState({ isUpdatesShown: !this.state.isUpdatesShown })\r\n                break;\r\n            case 'priority':\r\n                this.setState({ isPriorityShown: !this.state.isPriorityShown })\r\n                break;\r\n            case 'tags':\r\n                this.setState({ isTagsShown: !this.state.isTagsShown })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isImageModalShown: false, isStatusShown: false, isUsersShown: false, isPriorityShown: false, isUpdatesShown: false, isTagsShown: false })\r\n    }\r\n\r\n    onRemoveMemberFromTask = (memberId) => {\r\n        this.setState({ task: {...this.state.task, members: this.state.task.members.filter(member => member._id !== memberId)}}, ()=>{\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    onAddUserToTask = (userId) => {\r\n        const newUser = this.props.users.find(user => user._id === userId)\r\n        this.setState({ task:{...this.state.task, members: [...this.state.task.members, newUser]}}, ()=>{\r\n            this.props.onEditTask(this.state.task)\r\n        })\r\n    }\r\n\r\n    goToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    onToggleImageModal = (imgUrl) => {\r\n        this.setState({ imgUrl, isImageModalShown: !this.state.isImageModalShown })\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.task) return <h1>Loading...</h1>\r\n        const {name, members, status, priority, dueDate, updates, id} = this.state.task;\r\n        const { isUsersShown, isStatusShown, isPriorityShown, isUpdatesShown, isTagsShown } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <div className={`${isUpdatesShown && 'animate-side-modal'} side-modal`}>\r\n                    <Updates isImageModalShown={this.state.isImageModalShown}\r\n                        loggedUser={this.props.loggedUser} updates={updates} \r\n                        onToggleImageModal={this.onToggleImageModal}\r\n                        uploadImg={this.uploadImg} sendNote={this.sendNote}\r\n                    />\r\n                </div>\r\n\r\n                {(isUsersShown || isStatusShown || isPriorityShown || isUpdatesShown || isTagsShown) && <div className=\"modal-screen-wrapper\" onClick={this.closeModal}></div>}\r\n                <Draggable draggableId={id} index={this.props.index}>\r\n                    {(provided, snapshot) => (\r\n                        <section key={id} className={`task flex space-between align-center ${snapshot.isDragging ? 'drag' : ''}`}\r\n                            {...provided.draggableProps}\r\n                            {...provided.dragHandleProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n\r\n                            <div className=\"task-left flex align-center\">\r\n                                <div style={{ backgroundColor: this.props.group.color }} className=\"task-color\"></div>\r\n                                <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Delete Task\" arrow>\r\n                                    <div className='icon-container'>\r\n                                        <RiDeleteBack2Line className=\"task-remove-icon\" onClick={() => { this.props.onRemoveTask(id) }} />\r\n                                    </div>\r\n                                </Tooltip>\r\n                                <h2>\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"cursor-initial content-editable\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleNameChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditTask(this.state.task)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditTask(this.state.task)\r\n                                                // this.ChangeEditState()\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </div>\r\n\r\n                            <div className=\"task-right flex align-center\">\r\n\r\n                                <div>\r\n                                    <div onClick={() => this.openModal('updates')} className=\"notes-container relative\"><BsChatDots />\r\n                                        {(updates.length !== 0) && <div className=\"task-number-of-imgs flex justify-center align-center\"><span>{updates.length}</span></div>}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Members members={members} users={this.props.users} isUsersShown={isUsersShown}\r\n                                    openModal={this.openModal} goToUserProfile={this.goToUserProfile} onAddUserToTask={this.onAddUserToTask}\r\n                                    onRemoveMemberFromTask={this.onRemoveMemberFromTask} />\r\n                                <Status status={status} isStatusShown={isStatusShown}\r\n                                    handleChange={this.handleChange} openModal={this.openModal} />\r\n                                <Date dueDate={dueDate} handleDateChange={this.handleDateChange} />\r\n                                <Priority priority={priority} isPriorityShown={isPriorityShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} />\r\n                                {/* <Tags handleChange={this.handleChange} onEditTask={this.props.onEditTask} tags={this.state.tags} isTagsShown={isTagsShown}\r\n                                    openModal={this.openModal} handleChange={this.handleChange} /> */}\r\n                            </div>\r\n                        </section>\r\n\r\n                    )}\r\n                </Draggable>\r\n                {this.state.isImageModalShown &&\r\n                    <div onClick={this.onToggleImageModal} className=\"updates-image-modal\">\r\n                        <img src={this.state.imgUrl} />\r\n                    </div>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\n\r\nexport const Task = connect(mapStateToProps)(withRouter(_Task));","import React, { Component } from 'react'\r\n// import ContentEditable from 'react-contenteditable';\r\n// import Truncate from 'react-truncate'\r\n\r\nexport class Tags extends Component {\r\n\r\n    state = {\r\n        txt: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elTag = React.createRef();\r\n    }\r\n\r\n    getRandomColor() {\r\n        var letters = '0123456789ABCDEF';\r\n        var color = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    }\r\n\r\n    handleNameChange = (ev) => {\r\n        this.setState({ txt: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"label-container relative\">\r\n            <h1>tags</h1>\r\n                {/* <div onClick={() => this.props.openModal('tags')} className=\"tags\">\r\n                    <div className=\"task-label-name\">\r\n                        {this.props.tags.map((tag, idx) => {\r\n                            return (\r\n                                <p key={idx}>\r\n                                    <Truncate lines={1} ellipsis={\"...\"} width={100}>\r\n                                        {idx === this.props.tags.length - 1 ? tag.txt : tag.txt + \",\"}\r\n                                    </Truncate>\r\n                                </p>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                    {this.props.isTagsShown &&\r\n                        <div className=\"label-list tags-modal absolute flex column align-center\">\r\n                            <section>\r\n                                {this.props.tags.map((tag, idx) => {\r\n                                    console.log('tag', tag)\r\n                                    return (\r\n                                        <React.Fragment>\r\n                                            <p key={idx} style={{ color: tag.color }}>\r\n                                                <ContentEditable\r\n                                                    onFocus={this.focusText}\r\n                                                    className=\"content-editable cursor-initial\"\r\n                                                    innerRef={this.elTag}\r\n                                                    html={idx === this.props.tags.length - 1 ? tag.txt : tag.txt + \",\"} // innerHTML of the editable div\r\n                                                    disabled={false}       // use true to disable editing\r\n                                                    onChange={() => this.props.handleChange('tag', this.state.txt)} // handle innerHTML change\r\n                                                    onBlur={() => {\r\n                                                        this.props.onEditTask('tag', this.state.txt)\r\n                                                    }}\r\n                                                    onKeyDown={(ev) => {\r\n                                                        if (ev.key === 'Enter') {\r\n                                                            ev.target.blur()\r\n                                                            this.props.onEditTask('tag', this.state.txt)\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </p>\r\n                                        </React.Fragment>\r\n                                    )\r\n                                })}\r\n                            </section>\r\n                        </div>\r\n                    }\r\n\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Task } from './Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n//Material ui\r\nimport { IoIosArrowDropdownCircle } from 'react-icons/io'\r\nimport { AiOutlineDelete, AiOutlineDrag } from 'react-icons/ai'\r\n\r\nimport ContentEditable from 'react-contenteditable';\r\nimport { CgColorPicker } from 'react-icons/cg';\r\nimport socketService from '../services/socketService.js'\r\n\r\n\r\nexport class Group extends Component {\r\n\r\n    state = {\r\n        id: '',\r\n        ElGroupSettings: null,\r\n        elGroupColors: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.elInputAdd = React.createRef();\r\n        this.contentEditable = React.createRef();\r\n        socketService.on('updatedBoard', () =>{\r\n            this.setState({ ...this.state, ...this.props.group })\r\n        })\r\n        this.setState({ ...this.state, ...this.props.group })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ name: ev.target.value });\r\n    }\r\n\r\n    focusText = () => {\r\n        setTimeout(() => {\r\n            document.execCommand('selectAll', false, null)\r\n        }, 0)\r\n    }\r\n\r\n    handleMenuOpen = (ev) => {\r\n        this.setState({ ElGroupSettings: ev.currentTarget })\r\n    }\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    handleColorsOpen = (ev) => {\r\n        this.setState({ elGroupColors: ev.currentTarget })\r\n    }\r\n\r\n    handleColorsToggle = () => {\r\n        this.setState({ elGroupColors: !this.state.elGroupColors })\r\n    }\r\n\r\n    onChangeGroupColor = (color) => {\r\n        const newGroup = {\r\n            ...this.props.group,\r\n            color\r\n        }\r\n        try {\r\n            this.props.onEditGroup(newGroup, color, this.state.color)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ ElGroupSettings: null, elGroupColors: false })\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.id) return <h1>Loading...</h1>\r\n        const { name, ElGroupSettings, elGroupColors } = this.state;\r\n\r\n        return (\r\n            <Draggable draggableId={this.props.group.id} index={this.props.index}>\r\n                {(provided, snapshot) =>\r\n                    <section key={this.props.group.id} className=\"group padding-y-45\"\r\n                        {...provided.draggableProps}\r\n\r\n                        ref={provided.innerRef}>\r\n                        <div className=\"group-header-container flex space-between align-center\">\r\n                            <div className=\"group-header-left align-center flex relative\">\r\n\r\n                                <IoIosArrowDropdownCircle style={{ color: this.props.group.color }}\r\n                                    className=\"drop-down-menu-icon\" onClick={this.handleMenuOpen} />\r\n                                <Menu\r\n                                    role=\"menuContainer\"\r\n                                    anchorEl={ElGroupSettings}\r\n                                    keepMounted\r\n                                    open={Boolean(ElGroupSettings)}\r\n                                    onClose={this.handleMenuClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        this.props.onRemoveGroup(this.props.group.id)\r\n                                    }}>\r\n                                        <AiOutlineDelete className=\"delete-group-icon\" /> Delete Group\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={this.handleColorsToggle}>\r\n                                        <CgColorPicker className=\"color-group-icon\" /> Change Color\r\n\r\n                                    </MenuItem>\r\n\r\n                                </Menu>\r\n                                {elGroupColors &&\r\n                                    <div className=\"color-picker absolute flex wrap justify-center align-center\">\r\n                                        <div onClick={() => this.onChangeGroupColor('#ffcbcb')} className=\"color-pick\" style={{ backgroundColor: '#ffcbcb' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#f0a500')} className=\"color-pick\" style={{ backgroundColor: '#f0a500' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#70adb5')} className=\"color-pick\" style={{ backgroundColor: '#70adb5' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1a1c20')} className=\"color-pick\" style={{ backgroundColor: '#1a1c20' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#9d65c9')} className=\"color-pick\" style={{ backgroundColor: '#9d65c9' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#931a25')} className=\"color-pick\" style={{ backgroundColor: '#931a25' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#7ea04d')} className=\"color-pick\" style={{ backgroundColor: '#7ea04d' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#838383')} className=\"color-pick\" style={{ backgroundColor: '#838383' }}></div>\r\n                                        <div onClick={() => this.onChangeGroupColor('#1d2d50')} className=\"color-pick\" style={{ backgroundColor: '#1d2d50' }}></div>\r\n                                    </div>\r\n                                }\r\n                                <div className=\"drag-icon\" {...provided.dragHandleProps}>\r\n                                    <AiOutlineDrag />\r\n                                </div>\r\n\r\n                                <h1 style={{ color: this.props.group.color }} className=\"group-title\">\r\n                                    <ContentEditable\r\n                                        onFocus={this.focusText}\r\n                                        className=\"content-editable cursor-initial\"\r\n                                        innerRef={this.contentEditable}\r\n                                        html={name} // innerHTML of the editable div\r\n                                        disabled={false}       // use true to disable editing\r\n                                        onChange={this.handleChange} // handle innerHTML change\r\n                                        onBlur={() => {\r\n                                            this.props.onEditGroup(this.state, this.state.name, name)\r\n                                        }}\r\n                                        onKeyDown={(ev) => {\r\n                                            if (ev.key === 'Enter') {\r\n                                                ev.target.blur()\r\n                                                this.props.onEditTask(this.state)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </h1>\r\n                            </div>\r\n                            <div className=\"group-header-right flex\">\r\n\r\n                                <h3>Updates</h3>\r\n                                <h3>Members</h3>\r\n                                <h3>Status</h3>\r\n                                <h3>Due-Date</h3>\r\n                                <h3>Priority</h3>\r\n                                {/* <h3>Tags</h3> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Droppable droppableId={this.props.group.id} type=\"task\">\r\n                            {(provided, snapshot) =>\r\n                                <div className={`task-list ${snapshot.isDraggingOver ? 'drag-over' : ''}`}\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    {this.props.group.tasks.map((task, index) => {\r\n                                        return <Task onToggleUpdates={this.props.onToggleUpdates}\r\n                                            onEditTask={this.props.onEditTask} index={index}\r\n                                            onRemoveTask={this.props.onRemoveTask} key={task.id}\r\n                                            group={this.props.group} task={task} users={this.props.users} />\r\n                                    })}\r\n                                    {provided.placeholder}\r\n\r\n                                </div>\r\n                            }\r\n                        </Droppable>\r\n\r\n                        <div className=\"task task-add\">\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.props.onAddTask(this.props.group.id, this.elInputAdd.current.value)\r\n                                this.elInputAdd.current.value = ''\r\n                            }} action=\"\">\r\n                                <input ref={this.elInputAdd} className=\"padding-x-30\" placeholder=\"+ Add Task\" type=\"text\" />\r\n                            </form>\r\n                        </div>\r\n                    </section>\r\n                }\r\n            </Draggable>\r\n        )\r\n    }\r\n\r\n} ","import { Snackbar, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { hideSnackbar } from '../store/actions/systemActions.js';\r\n\r\nfunction _Popup(props){\r\n    const {isSnackbarShown, snackbarShown} = props;\r\n    return <Snackbar\r\n    anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    }}\r\n    open={isSnackbarShown}\r\n    autoHideDuration={3000}\r\n    message={snackbarShown}\r\n    action={<Button style={{color: '#f2f1dfb0'}} onClick={props.hideSnackbar}>Close</Button>}\r\n/>\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isSnackbarShown: state.systemReducer.isSnackbarShown,\r\n        snackbarShown: state.systemReducer.snackbarTxt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    hideSnackbar\r\n}\r\n\r\nexport const Popup = connect(mapStateToProps, mapDispatchToProps)(_Popup)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { BoardHeader } from '../cmps/BoardHeader';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { Group } from '../cmps/Group';\r\nimport { Popup } from '../cmps/Popup'\r\nimport { showSnackbar, hideSnackbar } from '../store/actions/systemActions.js';\r\n// Reducers funcs\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport {\r\n    updateBoard, loadBoards,   //BOARD\r\n    addGroup, editGroup, removeGroup, //GROUP\r\n    addTask, removeTask, editTask,  //TASK\r\n    clearFilter //FILTER\r\n}\r\n    from '../store/actions/boardActions'\r\n\r\n\r\nclass _Board extends Component {\r\n\r\n    state = {\r\n        boardId: '',\r\n        txt: ''\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            if (!this.props.boards || !this.props.boards.length) {\r\n                await this.props.loadBoards();\r\n                try {\r\n                    if (!this.props.users || !this.props.users.length) {\r\n                        await this.props.loadUsers();\r\n                    }\r\n                } catch (err) {\r\n                    console.log('Error', err)\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.setState({ boardId: this.props.match.params.id })\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.props.clearFilter();\r\n            this.setState({ boardId: this.props.match.params.id })\r\n        }\r\n    }\r\n\r\n    onEditBoard = (boardName, boardDescription) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (boardName === board.name && boardDescription === board.description) return;\r\n        this.props.updateBoard({ ...board, name: boardName, description: boardDescription })\r\n        this.props.showSnackbar('Updated board.')\r\n        setTimeout(() => this.props.hideSnackbar(), 3000)\r\n    }\r\n\r\n    applyFilter = (board, filterBy) => {\r\n\r\n\r\n        const filteredBoard = JSON.parse(JSON.stringify(board))\r\n        if (filterBy.groupId) {\r\n            board.groups = board.groups.filter(group => group.id === filterBy.groupId)\r\n        }\r\n        function filterTasks(cb) {\r\n            board.groups = board.groups.map(group => {\r\n                group.tasks = group.tasks.filter(cb)\r\n                return group;\r\n            })\r\n        }\r\n        if (filterBy.memberId) {\r\n            filterTasks(task => task.members.some(member => member._id === filterBy.memberId))\r\n        }\r\n        if (filterBy.taskPriority) {\r\n            filterTasks(task => task.priority.toLowerCase() === filterBy.taskPriority.toLowerCase())\r\n        }\r\n        if (filterBy.taskStatus) {\r\n            filterTasks(task => task.status.toLowerCase() === filterBy.taskStatus.toLowerCase())\r\n        }\r\n        if (filterBy.dueDate) {\r\n            filterTasks(task => task.dueDate === filterBy.dueDate)\r\n        }\r\n        if (this.state.txt) {\r\n            filterTasks(task => {\r\n                return (\r\n                    task.name.toLowerCase().includes(this.state.txt.toLowerCase())\r\n                    //  ||\r\n                    // task.tags.some(tag => tag.txt.toLowerCase().includes(this.state.txt.toLowerCase()))\r\n                )\r\n\r\n            })\r\n        }\r\n        return filteredBoard\r\n    }\r\n\r\n    //------------------GROUP CRUD-----------------\r\n    onAddGroup = () => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            this.props.addGroup(board);\r\n            this.props.clearFilter();\r\n            this.props.showSnackbar('Added group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n        this.props.history.push(`/board/${this.state.boardId}`)\r\n    }\r\n    onRemoveGroup = (groupId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        try {\r\n            this.props.removeGroup(groupId, board)\r\n            this.props.showSnackbar('Removed group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditGroup = (group, changedValue, originalValue) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        if (changedValue === originalValue) return // No changes were made\r\n        try {\r\n            this.props.editGroup(group, board)\r\n            this.props.showSnackbar('Updated group.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n\r\n\r\n    //-----------------TASKS CRUD------------------------\r\n    onRemoveTask = (taskId) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            this.props.removeTask(taskId, board)\r\n            this.props.showSnackbar('Removed task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onAddTask = (groupId, taskName) => {\r\n        if (!taskName) taskName = 'New task'\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            this.props.addTask(groupId, taskName, board)\r\n            this.props.clearFilter()\r\n            this.props.showSnackbar('Added task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    onEditTask = (task) => {\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        try {\r\n            this.props.editTask(task, board)\r\n            this.props.showSnackbar('Updated task.');\r\n            setTimeout(() => this.props.hideSnackbar(), 3000)\r\n        } catch (err) {\r\n            console.log('Error', err)\r\n        }\r\n    }\r\n    //---------------------Draggable----------------------\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n\r\n        if (type === 'group') {\r\n            const newGroups = Array.from(board.groups)\r\n            const draggedGroup = newGroups.find(group => group.id === draggableId)\r\n            newGroups.splice(source.index, 1)\r\n            newGroups.splice(destination.index, 0, draggedGroup)\r\n            board.groups = newGroups\r\n            try {\r\n                this.props.updateBoard(board)\r\n\r\n            } catch (err) {\r\n                console.log('Error', err);\r\n            }\r\n        } else {\r\n            const groupStart = board.groups.find(group => group.id === source.droppableId)\r\n            const groupEnd = board.groups.find(group => group.id === destination.droppableId)\r\n\r\n            if (groupStart.id === groupEnd.id) {\r\n\r\n                const newTasks = Array.from(groupStart.tasks)\r\n                const newTask = groupStart.tasks.find(task => task.id === draggableId)\r\n\r\n                newTasks.splice(source.index, 1)\r\n                newTasks.splice(destination.index, 0, newTask)\r\n\r\n                const newGroup = {\r\n                    ...groupStart,\r\n                    tasks: newTasks\r\n                }\r\n                const newIdx = board.groups.findIndex(group => group.id === newGroup.id)\r\n                board.groups.splice(newIdx, 1, newGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            } else {\r\n\r\n                const startTasks = Array.from(groupStart.tasks)\r\n                startTasks.splice(source.index, 1)\r\n                const newStartGroup = {\r\n                    ...groupStart,\r\n                    tasks: startTasks\r\n                }\r\n                const endTasks = Array.from(groupEnd.tasks)\r\n                const newTaskToPaste = groupStart.tasks.find(task => task.id === draggableId)\r\n                endTasks.splice(destination.index, 0, newTaskToPaste)\r\n                const newFinishGroup = {\r\n                    ...groupEnd,\r\n                    tasks: endTasks\r\n                }\r\n\r\n                const startIdx = board.groups.findIndex(group => group.id === newStartGroup.id)\r\n                const endIdx = board.groups.findIndex(group => group.id === newFinishGroup.id)\r\n\r\n                board.groups.splice(startIdx, 1, newStartGroup)\r\n                board.groups.splice(endIdx, 1, newFinishGroup)\r\n                try {\r\n                    this.props.updateBoard(board)\r\n\r\n                } catch (err) {\r\n                    console.log('Error', err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSearch = (ev) => {\r\n        this.setState({ txt: ev.target.value })\r\n    }\r\n    handleBoardBarSearch = (val) => {\r\n        this.setState({ boardBarSearch: val })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.boards.length === 0) return <h1>Loading...</h1>\r\n        const board = this.props.boards.find(board => board._id === this.state.boardId)\r\n        const { users, filterBy } = this.props;\r\n        if (!board) return <h1>Loading..</h1>\r\n        const filteredBoard = this.applyFilter(board, filterBy);\r\n        board.members = users\r\n        return (\r\n            <section className=\"board\">\r\n                <Navbar />\r\n                <Boardbar handleBoardBarSearch={this.handleBoardBarSearch} />\r\n                <div className=\"board-container\">\r\n                    <BoardHeader board={board} onAddGroup={this.onAddGroup} onEditBoard={this.onEditBoard}\r\n                        handleSearch={this.handleSearch} />\r\n                    <div className=\"groups-container padding-x-30\">\r\n                        <DragDropContext\r\n                            onDragEnd={this.onDragEnd}\r\n                        >\r\n                            <Droppable droppableId={board._id} type=\"group\">\r\n                                {(provided, snapshot) =>\r\n                                    <div className={`group-list`}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}>\r\n                                        {filteredBoard.groups.map((group, index) => {\r\n                                            return <Group key={group.id} index={index}\r\n                                                onEditTask={this.onEditTask} onAddTask={this.onAddTask} onRemoveTask={this.onRemoveTask}\r\n                                                onRemoveGroup={this.onRemoveGroup} onEditGroup={this.onEditGroup} onChangeGroupColor={this.onChangeGroupColor} group={group} users={users} />\r\n                                        })}\r\n                                    </div>\r\n                                }\r\n                            </Droppable>\r\n                        </DragDropContext>\r\n                    </div>\r\n                </div>\r\n                <Popup />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        users: state.userReducer.users,\r\n        filterBy: state.boardReducer.filterBy\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    addGroup,\r\n    removeGroup,\r\n    addTask,\r\n    removeTask,\r\n    editTask,\r\n    editGroup,\r\n    updateBoard,\r\n    showSnackbar,\r\n    hideSnackbar,\r\n    loadUsers,\r\n    clearFilter\r\n}\r\n\r\nexport const Board = connect(mapStateToProps, mapDispatchToProps)(_Board);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nimport { login, guestLogin } from '../store/actions/userActions.js'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\n\r\nclass _Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onLogin = async (values, { resetForm }) => {\r\n        resetForm();\r\n        await this.props.login(values);\r\n        if (this.props.loggedUser) this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    onGuestLogin = async () => {\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onLogin}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                        <Field className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <button type=\"submit\">Login</button>\r\n                    <a href=\"/#/signup\">Don't have an account? sign up here.</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Login));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { FaArrowLeft, FaUserCircle } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\nimport {signup, guestLogin} from '../store/actions/userActions.js'\r\n\r\nimport {loadBoards} from '../store/actions/boardActions'\r\n\r\nclass _Signup extends Component {\r\n\r\n    componentDidMount(){\r\n        // if(this.props.loggedUser)   this.props.history.push('/board/123')\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    onSignup = async (values, {resetForm}) => {\r\n        resetForm();\r\n        const {username, password, email, fullName} = values;\r\n        try{\r\n            await this.props.signup({username, password, email, fullName});\r\n            this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n        }catch(err){\r\n            console.log('Signup: Couldn\\'t sign up');\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    onGuestLogin = async () =>{\r\n        await this.props.guestLogin();\r\n        this.props.history.push(`/board/${this.props.boards[0]._id}`)\r\n    }\r\n\r\n    render() {\r\n        const initialValues = { username: '', password: '', confirm: '', email: '', fullName: '' }\r\n        return <div className=\"sign-login\">\r\n            <Formik\r\n                initialValues={initialValues}\r\n\r\n                validate={formValues => {\r\n                    const errors = {};\r\n                    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                    if (!formValues.username) errors.username = 'Required';\r\n                    if (!formValues.fullName) errors.fullName = 'Required';\r\n                    if (!formValues.password) errors.password = 'Required';\r\n                    if (formValues.confirm !== formValues.password) errors.confirm = 'Doesn\\'t match password';\r\n                    if (!re.test(formValues.email.toLowerCase())) errors.email = 'Invalid email address'\r\n                    return errors;\r\n                }}\r\n                onSubmit={this.onSignup}\r\n            >\r\n                <Form className=\"sign-login-form flex column align-center space-around\">\r\n                    <FaUserCircle />\r\n                    <section>\r\n                        <legend>Username *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"username\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"username\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Full name *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\"type=\"text\" name=\"fullName\" />\r\n                    </section> \r\n                    <ErrorMessage name=\"fullName\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Email *</legend>\r\n                        <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"email\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"email\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"password\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"password\" component=\"span\" />\r\n                    <section>\r\n                        <legend>Confirm password *</legend>\r\n                    <Field autoComplete=\"something\" className=\"sign-login-input\" type=\"text\" name=\"confirm\" />\r\n                    </section>\r\n                    <ErrorMessage name=\"confirm\" component=\"span\" />\r\n                    <button type=\"submit\">Signup</button>\r\n                    <a href=\"/#/login\">Already have an account? Login here!</a>\r\n                    <button onClick={this.onGuestLogin}>Or try as a guest!</button>\r\n                </Form>\r\n            </Formik>\r\n            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Back to home\" arrow>\r\n                <div className=\"go-back\">\r\n                    <NavLink to=\"/\"><FaArrowLeft /></NavLink>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    guestLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Signup));","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Fade } from '@material-ui/core';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport { loadBoards } from '../store/actions/boardActions';\r\nimport {userService} from '../services/userService.js';\r\nimport { updateUser } from '../store/actions/userActions';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\nclass _UserProfile extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        user: {\r\n            _id: '',\r\n            email: '',\r\n            username: '',\r\n            passowrd: '',\r\n            fullName: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() { \r\n        this.props.loadBoards();\r\n        const user = await userService.getUserById(this.props.match.params.id)\r\n        this.setState({ user: { ...user} })\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ user: { ...this.state.user, [target.name]: target.value } })\r\n    }\r\n\r\n    updateProfile = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.updateUser(this.state.user)\r\n        this.toggleModal()\r\n    }\r\n\r\n\r\n    uploadImg = async (ev) => {\r\n        const res = await cloudinaryService.uploadImg(ev)\r\n        this.setState({ user: { ...this.state.user, imgUrl: res.url } })\r\n    }\r\n\r\n    render() {\r\n        const { email, fullName, username, imgUrl, _id } = this.state.user;\r\n        if (!_id) return <h1>Loading...</h1>\r\n        const { loggedUser} = this.props\r\n\r\n        return (\r\n            <section className=\"user-profile\">\r\n                <Navbar />\r\n                <Boardbar />\r\n                <div className=\"user-container\">\r\n                    <header className=\"header-container padding-x-15 padding-y-15 flex justify-center  align-center\">\r\n                        <img className=\"user-profile-big\" src={imgUrl} alt=\"\" />\r\n                    </header>\r\n\r\n                    <div className=\"user-details-container padding-x-30 padding-y-45 align-center  flex column\">\r\n                        {loggedUser._id === _id ? <h2 onClick={this.toggleModal}\r\n                            className=\"clickable-header\">Edit Profile</h2> : ''}\r\n                        <div className=\"user-details-inner-container\">\r\n\r\n                            <h3>Email: <span className=\"span-user-details\">{email}</span></h3>\r\n                            <h3>Full Name: <span className=\"span-user-details\">{fullName}</span></h3>\r\n                            <h3>Username: <span className=\"span-user-details\">{username}</span> </h3>\r\n                        </div>\r\n                    </div>\r\n                    {/* Modal */}\r\n                    <Fade in={this.state.isModalOpen}>\r\n                        <div className=\"modal-screen flex justify-center align-center\">\r\n                            <div className=\"modal-container padding-x-15 padding-y-15\">\r\n\r\n                                <div className=\"user-modal-col align-center\">\r\n\r\n\r\n                                    <label> {this.state.user.imgUrl ?\r\n                                        <img className=\"user-profile-big\" src={this.state.user.imgUrl} alt=\"profile-img\" />\r\n                                        : <div>{this.props.loggedUser.fullName}</div>}\r\n                                        <input type=\"file\" onChange={this.uploadImg} hidden />\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div className=\"user-modal-col\">\r\n                                    <form className=\"form-container flex justify-center column  align-center\" action=\"\">\r\n                                        <input value={this.state.user.email} onChange={this.handleChange} name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n                                        <input value={this.state.user.username} onChange={this.handleChange} name=\"username\" placeholder=\"Username\" type=\"text\" />\r\n                                        <input value={this.state.user.password} onChange={this.handleChange} name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n                                        <input value={this.state.user.fullName} onChange={this.handleChange} name=\"fullName\" placeholder=\"Full Name\" type=\"text\" />\r\n                                        <button onClick={this.updateProfile}>Save Changes</button>\r\n                                        <button type=\"button\" className=\"secondary-btn\" onClick={this.toggleModal}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fade>\r\n\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        modal: state.systemReducer.modal,\r\n        loggedUser: state.userReducer.loggedUser,\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateUser\r\n}\r\n\r\nexport const UserProfile = connect(mapStateToProps, mapDispatchToProps)(_UserProfile);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Boardbar } from '../cmps/Boardbar';\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { Navbar } from '../cmps/Navbar';\r\nimport moment from 'moment'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaArrowUp, FaArrowDown } from 'react-icons/fa';\r\nimport { Tooltip, Zoom } from '@material-ui/core';\r\n\r\nclass _MyWeek extends Component {\r\n    state = {\r\n        searchVal: '',\r\n        isOrderReversed: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.boards || !this.props.boards.length) {\r\n            this.props.loadBoards();\r\n        }\r\n\r\n    }\r\n\r\n    getUpcomingTasks(maxDaysLeft, minDaysLeft = -5) {\r\n        const tasks = [];\r\n        const { boards } = this.props;\r\n        boards.forEach(board => {\r\n            board.groups.forEach(group => {\r\n                tasks.push(...group.tasks.filter(task => {\r\n                    const now = Date.now();\r\n                    task.boardId = board._id;\r\n                    task.boardName = board.name;\r\n                    return moment(task.dueDate).isBefore(moment(now).add(maxDaysLeft, 'days'))\r\n                        && moment(now).isAfter(moment(task.dueDate).add(minDaysLeft, 'days'))\r\n                }));\r\n            })\r\n        })\r\n        tasks.sort((task1, task2) => {\r\n            const res = this.state.isOrderReversed ? -1 : 1;\r\n            if (task1.dueDate < task2.dueDate) return -res;\r\n            if (task1.dueDate > task2.dueDate) return res;\r\n            return 0;\r\n        })\r\n        return tasks;\r\n    }\r\n\r\n    getDaysFromNow(date) {\r\n        if (moment(date).isAfter(moment(Date.now()).add(1, 'day').endOf('day'))) {\r\n            return moment(date).format('dddd')\r\n        }\r\n        return moment(date).isBefore(moment().endOf('day')) ? 'Today' : 'Tomorrow'\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        this.setState({ searchVal: target.value })\r\n    }\r\n\r\n    reverseOrder = () => {\r\n        this.setState({ isOrderReversed: !this.state.isOrderReversed })\r\n    }\r\n\r\n    moveToUserProfile = (userId) => {\r\n        this.props.history.push(`/user/${userId}`)\r\n    }\r\n\r\n    render() {\r\n        let upcomingTasks = this.getUpcomingTasks(7);\r\n        const { searchVal, isOrderReversed } = this.state;\r\n        const firstName = this.props.loggedUser.fullName.split(' ')[0]\r\n        if (searchVal) upcomingTasks = upcomingTasks.filter(task => task.name.toLowerCase().includes(searchVal.toLocaleLowerCase()))\r\n        return (\r\n            <section className=\"my-week flex\">\r\n                <Navbar />\r\n                <Boardbar /><div className=\"my-week-container flex column space around\">\r\n                    <div className=\"my-week-header flex column space-around\">\r\n                        <div className=\"flex align-center space-around\">\r\n                            <img src=\"my-week-calendar.png\" alt=\"\" />\r\n                            <section className=\"greeting-container\">\r\n                                <h1>{`Hey ${firstName},`}</h1>\r\n                                <h1>Welcome to My Week</h1>\r\n                            </section>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-container flex space-between align-center\">\r\n                        <h2>Upcoming:</h2>\r\n                        <input onChange={this.handleChange} value={searchVal} type=\"text\" placeholder=\"search\" />\r\n                        {isOrderReversed ?\r\n                            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Order by date\" arrow>\r\n                                <div><FaArrowUp size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            </Tooltip> :\r\n                            <Tooltip enterDelay={200} TransitionComponent={Zoom} title=\"Order by date\" arrow>\r\n                                <div><FaArrowDown size=\"1.5rem\" onClick={this.reverseOrder} /></div>\r\n                            </Tooltip>\r\n                        }\r\n                    </div>\r\n                    {upcomingTasks.length ?\r\n                        <section className=\"upcoming-tasks-container\">\r\n\r\n                            <div className=\"upcoming-tasks\">\r\n                                {upcomingTasks.map(task => <div\r\n                                    key={task.id}\r\n                                    className=\"task-preview space-between align-center padding-x-15\">\r\n                                    <div>\r\n                                        <h2>{task.name}</h2>\r\n                                        <p className=\"task-location\">Board: <span onClick={() => this.props.history.push(`/board/${task.boardId}`)}>{task.boardName}</span></p>\r\n                                    </div>\r\n                                    <div className={`label-box ${task.status.toLocaleLowerCase()}`}> <p>{task.status}</p></div>\r\n                                    <div className=\"user-img-container flex justify-center align-center\">\r\n                                        {task.members.length !== 0 && (task.members[0].imgUrl ? <img onClick={() => this.moveToUserProfile(task.members[0]._id)} alt=\"profile\" src={task.members[0].imgUrl} />:\r\n                                        <div onClick={() => this.moveToUserProfile(task.members[0]._id)} className=\"member-letter\">{task.members[0].fullName.charAt(0).toUpperCase()}</div>)}\r\n                                    </div>\r\n                                    <h2>{this.getDaysFromNow(task.dueDate)}</h2>\r\n                                </div>)}\r\n                            </div>\r\n                        </section> :\r\n                        <h1 className=\"no-tasks\">No tasks left for this week</h1>\r\n                    }\r\n                </div>\r\n\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedUser: state.userReducer.loggedUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const MyWeek = connect(mapStateToProps, mapDispatchToProps)(withRouter(_MyWeek));","import { Home } from './pages/Home.jsx'\r\nimport { Board } from './pages/Board.jsx'\r\nimport { Login } from './pages/Login.jsx';\r\nimport { Signup } from './pages/Signup.jsx';\r\nimport { UserProfile } from './pages/UserProfile.jsx';\r\nimport { MyWeek } from './pages/MyWeek.jsx';\r\n\r\n\r\nexport default [\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/board/:id',\r\n        component: Board\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: UserProfile\r\n    },\r\n    {\r\n        path: '/myweek',\r\n        component: MyWeek\r\n    }\r\n]","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport routes from './routes.js'\r\nimport socketService from './services/socketService';\r\n\r\nexport function App() {\r\n  socketService.setup();\r\n  return (\r\n    <Router>\r\n      <main className=\"app\">\r\n        <Switch>\r\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    boards: [],\r\n    filterBy: {},\r\n    isBoardbarShown: true\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.board]\r\n            }\r\n        case 'SET_FILTER':\r\n            return {\r\n                ...state,\r\n                filterBy: action.filter\r\n            }\r\n        case 'TOGGLE_BOARDBAR':\r\n            return {\r\n                ...state,\r\n                isBoardbarShown: !state.isBoardbarShown\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n    users: [],\r\n    loggedUser: {      \r\n            \"_id\" : \"5f68936cf878123b2cdce96d\",\r\n            \"username\" : \"frize\",\r\n            \"fullName\" : \"Roei Arazi\",\r\n            \"password\" : \"3333\",\r\n            \"email\" : \"frize@gmail.com\",\r\n            \"imgUrl\" : \"https://via.placeholder.com/250\",\r\n            \"isAdmin\" : true,\r\n            \"boards\" : [],\r\n            \"notifications\" : [ \r\n                {\r\n                byUser: \r\n                {\r\n                    fullName: \"Liam Zety\",\"imgUrl\" : \"https://via.placeholder.com/250\" \r\n                },\r\n                content:\"just uploaded the logo!\",\r\n                createdAt:Date.now()\r\n            }],\r\n            \"birthDay\" : \"2nd August 1997\",\r\n            \"company\" : \"adidas\",\r\n            \"phoneNumber\" : \"0224132124\"\r\n    },\r\n    userProfile: null\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'SHOW_PROFILE':\r\n            return {\r\n                ...state,\r\n                userProfile: action.user\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedUser: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  isLoading: false,\r\n  isSnackbarShown: false,\r\n  snackbarTxt: ''\r\n}\r\n\r\nexport function systemReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    case 'SHOW_SNACKBAR':\r\n      return{\r\n        ...state,\r\n        isSnackbarShown: true,\r\n        snackbarTxt: action.msg\r\n      }\r\n    case 'HIDE_SNACKBAR':\r\n        return {\r\n          ...state,\r\n          isSnackbarShown: false,\r\n          snackbarTxt: ''\r\n        }\r\n    default: return state;\r\n  }\r\n}","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './reducers/boardReducer'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { systemReducer } from './reducers/systemReducer'\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    userReducer,\r\n    boardReducer,\r\n    systemReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { App } from './App';\r\nimport * as serviceWorker from './services/serviceWorker';\r\nimport { store } from './store/store';\r\nimport './assets/style/main.scss';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}